_N_E =
(window["webpackJsonp_N_E"] = window["webpackJsonp_N_E"] || []).push([["pages/_app"],{

/***/ "./node_modules/@babel/runtime/helpers/arrayLikeToArray.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/arrayLikeToArray.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }

  return arr2;
}

module.exports = _arrayLikeToArray;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/arrayWithHoles.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/arrayWithHoles.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

module.exports = _arrayWithHoles;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/asyncToGenerator.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/asyncToGenerator.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }

  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}

function _asyncToGenerator(fn) {
  return function () {
    var self = this,
        args = arguments;
    return new Promise(function (resolve, reject) {
      var gen = fn.apply(self, args);

      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }

      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }

      _next(undefined);
    });
  };
}

module.exports = _asyncToGenerator;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/classCallCheck.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/classCallCheck.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

module.exports = _classCallCheck;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/construct.js":
/*!**********************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/construct.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var setPrototypeOf = __webpack_require__(/*! ./setPrototypeOf */ "./node_modules/@babel/runtime/helpers/setPrototypeOf.js");

var isNativeReflectConstruct = __webpack_require__(/*! ./isNativeReflectConstruct */ "./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js");

function _construct(Parent, args, Class) {
  if (isNativeReflectConstruct()) {
    module.exports = _construct = Reflect.construct;
  } else {
    module.exports = _construct = function _construct(Parent, args, Class) {
      var a = [null];
      a.push.apply(a, args);
      var Constructor = Function.bind.apply(Parent, a);
      var instance = new Constructor();
      if (Class) setPrototypeOf(instance, Class.prototype);
      return instance;
    };
  }

  return _construct.apply(null, arguments);
}

module.exports = _construct;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/createClass.js":
/*!************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/createClass.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

module.exports = _createClass;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/defineProperty.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/defineProperty.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _defineProperty; });
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/interopRequireDefault.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

module.exports = _interopRequireDefault;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/interopRequireWildcard.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/interopRequireWildcard.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");

function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();

  _getRequireWildcardCache = function _getRequireWildcardCache() {
    return cache;
  };

  return cache;
}

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
    return {
      "default": obj
    };
  }

  var cache = _getRequireWildcardCache();

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj["default"] = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

module.exports = _interopRequireWildcard;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

module.exports = _isNativeReflectConstruct;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _iterableToArrayLimit(arr, i) {
  if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;

  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

module.exports = _iterableToArrayLimit;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/nonIterableRest.js":
/*!****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/nonIterableRest.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

module.exports = _nonIterableRest;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/setPrototypeOf.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/setPrototypeOf.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _setPrototypeOf(o, p) {
  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

module.exports = _setPrototypeOf;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/slicedToArray.js":
/*!**************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/slicedToArray.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayWithHoles = __webpack_require__(/*! ./arrayWithHoles */ "./node_modules/@babel/runtime/helpers/arrayWithHoles.js");

var iterableToArrayLimit = __webpack_require__(/*! ./iterableToArrayLimit */ "./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js");

var unsupportedIterableToArray = __webpack_require__(/*! ./unsupportedIterableToArray */ "./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js");

var nonIterableRest = __webpack_require__(/*! ./nonIterableRest */ "./node_modules/@babel/runtime/helpers/nonIterableRest.js");

function _slicedToArray(arr, i) {
  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();
}

module.exports = _slicedToArray;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/typeof.js":
/*!*******************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/typeof.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    module.exports = _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    module.exports = _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

module.exports = _typeof;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayLikeToArray = __webpack_require__(/*! ./arrayLikeToArray */ "./node_modules/@babel/runtime/helpers/arrayLikeToArray.js");

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);
}

module.exports = _unsupportedIterableToArray;

/***/ }),

/***/ "./node_modules/@babel/runtime/regenerator/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@babel/runtime/regenerator/index.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! regenerator-runtime */ "./node_modules/regenerator-runtime/runtime.js");


/***/ }),

/***/ "./node_modules/next/dist/build/polyfills/object-assign.js":
/*!*****************************************************************!*\
  !*** ./node_modules/next/dist/build/polyfills/object-assign.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var assign=Object.assign.bind(Object);module.exports=assign;module.exports.default=module.exports;
//# sourceMappingURL=object-assign.js.map

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F_app&absolutePagePath=private-next-pages%2F_app.js!./":
/*!*********************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F_app&absolutePagePath=private-next-pages%2F_app.js ***!
  \*********************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


      (window.__NEXT_P = window.__NEXT_P || []).push([
        "/_app",
        function () {
          return __webpack_require__(/*! private-next-pages/_app.js */ "./pages/_app.js");
        }
      ]);
    

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js ***!
  \************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
const isOldIE=function isOldIE(){let memo;return function memorize(){if(typeof memo==='undefined'){// Test for IE <= 9 as proposed by Browserhacks
// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
// Tests for existence of standard globals is to allow style-loader
// to operate correctly into non-standard environments
// @see https://github.com/webpack-contrib/style-loader/issues/177
memo=Boolean(window&&document&&document.all&&!window.atob);}return memo;};}();const getTarget=function getTarget(){const memo={};return function memorize(target){if(typeof memo[target]==='undefined'){let styleTarget=document.querySelector(target);// Special case to return head of iframe instead of iframe itself
if(window.HTMLIFrameElement&&styleTarget instanceof window.HTMLIFrameElement){try{// This will throw an exception if access to iframe is blocked
// due to cross-origin restrictions
styleTarget=styleTarget.contentDocument.head;}catch(e){// istanbul ignore next
styleTarget=null;}}memo[target]=styleTarget;}return memo[target];};}();const stylesInDom=[];function getIndexByIdentifier(identifier){let result=-1;for(let i=0;i<stylesInDom.length;i++){if(stylesInDom[i].identifier===identifier){result=i;break;}}return result;}function modulesToDom(list,options){const idCountMap={};const identifiers=[];for(let i=0;i<list.length;i++){const item=list[i];const id=options.base?item[0]+options.base:item[0];const count=idCountMap[id]||0;const identifier=`${id} ${count}`;idCountMap[id]=count+1;const index=getIndexByIdentifier(identifier);const obj={css:item[1],media:item[2],sourceMap:item[3]};if(index!==-1){stylesInDom[index].references++;stylesInDom[index].updater(obj);}else{stylesInDom.push({identifier,updater:addStyle(obj,options),references:1});}identifiers.push(identifier);}return identifiers;}function insertStyleElement(options){const style=document.createElement('style');const attributes=options.attributes||{};if(typeof attributes.nonce==='undefined'){const nonce=// eslint-disable-next-line no-undef
 true?__webpack_require__.nc:undefined;if(nonce){attributes.nonce=nonce;}}Object.keys(attributes).forEach(key=>{style.setAttribute(key,attributes[key]);});if(typeof options.insert==='function'){options.insert(style);}else{const target=getTarget(options.insert||'head');if(!target){throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");}target.appendChild(style);}return style;}function removeStyleElement(style){// istanbul ignore if
if(style.parentNode===null){return false;}style.parentNode.removeChild(style);}/* istanbul ignore next  */const replaceText=function replaceText(){const textStore=[];return function replace(index,replacement){textStore[index]=replacement;return textStore.filter(Boolean).join('\n');};}();function applyToSingletonTag(style,index,remove,obj){const css=remove?'':obj.media?`@media ${obj.media} {${obj.css}}`:obj.css;// For old IE
/* istanbul ignore if  */if(style.styleSheet){style.styleSheet.cssText=replaceText(index,css);}else{const cssNode=document.createTextNode(css);const childNodes=style.childNodes;if(childNodes[index]){style.removeChild(childNodes[index]);}if(childNodes.length){style.insertBefore(cssNode,childNodes[index]);}else{style.appendChild(cssNode);}}}function applyToTag(style,options,obj){let css=obj.css;const media=obj.media;const sourceMap=obj.sourceMap;if(media){style.setAttribute('media',media);}else{style.removeAttribute('media');}if(sourceMap&&typeof btoa!=='undefined'){css+=`\n/*# sourceMappingURL=data:application/json;base64,${btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))))} */`;}// For old IE
/* istanbul ignore if  */if(style.styleSheet){style.styleSheet.cssText=css;}else{while(style.firstChild){style.removeChild(style.firstChild);}style.appendChild(document.createTextNode(css));}}let singleton=null;let singletonCounter=0;function addStyle(obj,options){let style;let update;let remove;if(options.singleton){const styleIndex=singletonCounter++;style=singleton||(singleton=insertStyleElement(options));update=applyToSingletonTag.bind(null,style,styleIndex,false);remove=applyToSingletonTag.bind(null,style,styleIndex,true);}else{style=insertStyleElement(options);update=applyToTag.bind(null,style,options);remove=()=>{removeStyleElement(style);};}update(obj);return function updateStyle(newObj){if(newObj){if(newObj.css===obj.css&&newObj.media===obj.media&&newObj.sourceMap===obj.sourceMap){return;}update(obj=newObj);}else{remove();}};}module.exports=(list,options)=>{options=options||{};// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
// tags it will allow on a page
if(!options.singleton&&typeof options.singleton!=='boolean'){options.singleton=isOldIE();}list=list||[];let lastIdentifiers=modulesToDom(list,options);return function update(newList){newList=newList||[];if(Object.prototype.toString.call(newList)!=='[object Array]'){return;}for(let i=0;i<lastIdentifiers.length;i++){const identifier=lastIdentifiers[i];const index=getIndexByIdentifier(identifier);stylesInDom[index].references--;}const newLastIdentifiers=modulesToDom(newList,options);for(let i=0;i<lastIdentifiers.length;i++){const identifier=lastIdentifiers[i];const index=getIndexByIdentifier(identifier);if(stylesInDom[index].references===0){stylesInDom[index].updater();stylesInDom.splice(index,1);}}lastIdentifiers=newLastIdentifiers;};};
//# sourceMappingURL=injectStylesIntoStyleTag.js.map

/***/ }),

/***/ "./node_modules/next/dist/client/normalize-trailing-slash.js":
/*!*******************************************************************!*\
  !*** ./node_modules/next/dist/client/normalize-trailing-slash.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

exports.__esModule = true;
exports.removePathTrailingSlash = removePathTrailingSlash;
exports.normalizePathTrailingSlash = void 0;
/**
* Removes the trailing slash of a path if there is one. Preserves the root path `/`.
*/

function removePathTrailingSlash(path) {
  return path.endsWith('/') && path !== '/' ? path.slice(0, -1) : path;
}
/**
* Normalizes the trailing slash of a path according to the `trailingSlash` option
* in `next.config.js`.
*/


var normalizePathTrailingSlash =  false ? undefined : removePathTrailingSlash;
exports.normalizePathTrailingSlash = normalizePathTrailingSlash;

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../compiled/webpack/module.js */ "./node_modules/next/dist/compiled/webpack/module.js")(module)))

/***/ }),

/***/ "./node_modules/next/dist/client/request-idle-callback.js":
/*!****************************************************************!*\
  !*** ./node_modules/next/dist/client/request-idle-callback.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

exports.__esModule = true;
exports["default"] = void 0;

var requestIdleCallback = typeof self !== 'undefined' && self.requestIdleCallback || function (cb) {
  var start = Date.now();
  return setTimeout(function () {
    cb({
      didTimeout: false,
      timeRemaining: function timeRemaining() {
        return Math.max(0, 50 - (Date.now() - start));
      }
    });
  }, 1);
};

var _default = requestIdleCallback;
exports["default"] = _default;

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../compiled/webpack/module.js */ "./node_modules/next/dist/compiled/webpack/module.js")(module)))

/***/ }),

/***/ "./node_modules/next/dist/client/route-loader.js":
/*!*******************************************************!*\
  !*** ./node_modules/next/dist/client/route-loader.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

var _regeneratorRuntime = __webpack_require__(/*! ./node_modules/@babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");

var _slicedToArray = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/slicedToArray */ "./node_modules/@babel/runtime/helpers/slicedToArray.js");

var _asyncToGenerator = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/asyncToGenerator */ "./node_modules/@babel/runtime/helpers/asyncToGenerator.js");

var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

exports.__esModule = true;
exports.markAssetError = markAssetError;
exports.isAssetError = isAssetError;
exports.getClientBuildManifest = getClientBuildManifest;
exports["default"] = void 0;

var _getAssetPathFromRoute = _interopRequireDefault(__webpack_require__(/*! ../next-server/lib/router/utils/get-asset-path-from-route */ "./node_modules/next/dist/next-server/lib/router/utils/get-asset-path-from-route.js"));

var _requestIdleCallback = _interopRequireDefault(__webpack_require__(/*! ./request-idle-callback */ "./node_modules/next/dist/client/request-idle-callback.js")); // 3.8s was arbitrarily chosen as it's what https://web.dev/interactive
// considers as "Good" time-to-interactive. We must assume something went
// wrong beyond this point, and then fall-back to a full page transition to
// show the user something of value.


var MS_MAX_IDLE_DELAY = 3800;

function withFuture(key, map, generator) {
  var entry = map.get(key);

  if (entry) {
    if ('future' in entry) {
      return entry.future;
    }

    return Promise.resolve(entry);
  }

  var resolver;
  var prom = new Promise(function (resolve) {
    resolver = resolve;
  });
  map.set(key, entry = {
    resolve: resolver,
    future: prom
  });
  return generator ? // eslint-disable-next-line no-sequences
  generator().then(function (value) {
    return resolver(value), value;
  }) : prom;
}

function hasPrefetch(link) {
  try {
    link = document.createElement('link');
    return (// detect IE11 since it supports prefetch but isn't detected
      // with relList.support
      !!window.MSInputMethodContext && !!document.documentMode || link.relList.supports('prefetch')
    );
  } catch (_unused) {
    return false;
  }
}

var canPrefetch = hasPrefetch();

function prefetchViaDom(href, as, link) {
  return new Promise(function (res, rej) {
    if (document.querySelector("link[rel=\"prefetch\"][href^=\"".concat(href, "\"]"))) {
      return res();
    }

    link = document.createElement('link'); // The order of property assignment here is intentional:

    if (as) link.as = as;
    link.rel = "prefetch";
    link.crossOrigin = undefined;
    link.onload = res;
    link.onerror = rej; // `href` should always be last:

    link.href = href;
    document.head.appendChild(link);
  });
}

var ASSET_LOAD_ERROR = Symbol('ASSET_LOAD_ERROR'); // TODO: unexport

function markAssetError(err) {
  return Object.defineProperty(err, ASSET_LOAD_ERROR, {});
}

function isAssetError(err) {
  return err && ASSET_LOAD_ERROR in err;
}

function appendScript(src, script) {
  return new Promise(function (resolve, reject) {
    script = document.createElement('script'); // The order of property assignment here is intentional.
    // 1. Setup success/failure hooks in case the browser synchronously
    //    executes when `src` is set.

    script.onload = resolve;

    script.onerror = function () {
      return reject(markAssetError(new Error("Failed to load script: ".concat(src))));
    }; // 2. Configure the cross-origin attribute before setting `src` in case the
    //    browser begins to fetch.


    script.crossOrigin = undefined; // 3. Finally, set the source and inject into the DOM in case the child
    //    must be appended for fetching to start.

    script.src = src;
    document.body.appendChild(script);
  });
}

function idleTimeout(ms, err) {
  return new Promise(function (_resolve, reject) {
    return (0, _requestIdleCallback["default"])(function () {
      return setTimeout(function () {
        return reject(err);
      }, ms);
    });
  });
} // TODO: stop exporting or cache the failure
// It'd be best to stop exporting this. It's an implementation detail. We're
// only exporting it for backwards compatibilty with the `page-loader`.
// Only cache this response as a last resort if we cannot eliminate all other
// code branches that use the Build Manifest Callback and push them through
// the Route Loader interface.


function getClientBuildManifest() {
  if (self.__BUILD_MANIFEST) {
    return Promise.resolve(self.__BUILD_MANIFEST);
  }

  var onBuildManifest = new Promise(function (resolve) {
    // Mandatory because this is not concurrent safe:
    var cb = self.__BUILD_MANIFEST_CB;

    self.__BUILD_MANIFEST_CB = function () {
      resolve(self.__BUILD_MANIFEST);
      cb && cb();
    };
  });
  return Promise.race([onBuildManifest, idleTimeout(MS_MAX_IDLE_DELAY, markAssetError(new Error('Failed to load client build manifest')))]);
}

function getFilesForRoute(assetPrefix, route) {
  if (true) {
    return Promise.resolve({
      scripts: [assetPrefix + '/_next/static/chunks/pages' + encodeURI((0, _getAssetPathFromRoute["default"])(route, '.js'))],
      // Styles are handled by `style-loader` in development:
      css: []
    });
  }

  return getClientBuildManifest().then(function (manifest) {
    if (!(route in manifest)) {
      throw markAssetError(new Error("Failed to lookup route: ".concat(route)));
    }

    var allFiles = manifest[route].map(function (entry) {
      return assetPrefix + '/_next/' + encodeURI(entry);
    });
    return {
      scripts: allFiles.filter(function (v) {
        return v.endsWith('.js');
      }),
      css: allFiles.filter(function (v) {
        return v.endsWith('.css');
      })
    };
  });
}

function createRouteLoader(assetPrefix) {
  var entrypoints = new Map();
  var loadedScripts = new Map();
  var styleSheets = new Map();
  var routes = new Map();

  function maybeExecuteScript(src) {
    var prom = loadedScripts.get(src);

    if (prom) {
      return prom;
    } // Skip executing script if it's already in the DOM:


    if (document.querySelector("script[src^=\"".concat(src, "\"]"))) {
      return Promise.resolve();
    }

    loadedScripts.set(src, prom = appendScript(src));
    return prom;
  }

  function fetchStyleSheet(href) {
    var prom = styleSheets.get(href);

    if (prom) {
      return prom;
    }

    styleSheets.set(href, prom = fetch(href).then(function (res) {
      if (!res.ok) {
        throw new Error("Failed to load stylesheet: ".concat(href));
      }

      return res.text().then(function (text) {
        return {
          href: href,
          content: text
        };
      });
    })["catch"](function (err) {
      throw markAssetError(err);
    }));
    return prom;
  }

  return {
    whenEntrypoint: function whenEntrypoint(route) {
      return withFuture(route, entrypoints);
    },
    onEntrypoint: function onEntrypoint(route, execute) {
      Promise.resolve(execute).then(function (fn) {
        return fn();
      }).then(function (exports) {
        return {
          component: exports && exports["default"] || exports,
          exports: exports
        };
      }, function (err) {
        return {
          error: err
        };
      }).then(function (input) {
        var old = entrypoints.get(route);
        entrypoints.set(route, input);
        if (old && 'resolve' in old) old.resolve(input);
      });
    },
    loadRoute: function loadRoute(route) {
      var _this = this;

      return withFuture(route, routes, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {
        var _yield$getFilesForRou, scripts, css, _yield$Promise$all, _yield$Promise$all2, styles, entrypoint, res;

        return _regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.prev = 0;
                _context.next = 3;
                return getFilesForRoute(assetPrefix, route);

              case 3:
                _yield$getFilesForRou = _context.sent;
                scripts = _yield$getFilesForRou.scripts;
                css = _yield$getFilesForRou.css;
                _context.next = 8;
                return Promise.all([entrypoints.has(route) ? [] : Promise.all(scripts.map(maybeExecuteScript)), Promise.all(css.map(fetchStyleSheet))]);

              case 8:
                _yield$Promise$all = _context.sent;
                _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2);
                styles = _yield$Promise$all2[1];
                _context.next = 13;
                return Promise.race([_this.whenEntrypoint(route), idleTimeout(MS_MAX_IDLE_DELAY, markAssetError(new Error("Route did not complete loading: ".concat(route))))]);

              case 13:
                entrypoint = _context.sent;
                res = Object.assign({
                  styles: styles
                }, entrypoint);
                return _context.abrupt("return", 'error' in entrypoint ? entrypoint : res);

              case 18:
                _context.prev = 18;
                _context.t0 = _context["catch"](0);
                return _context.abrupt("return", {
                  error: _context.t0
                });

              case 21:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, null, [[0, 18]]);
      })));
    },
    prefetch: function prefetch(route) {
      var _this2 = this;

      // https://github.com/GoogleChromeLabs/quicklink/blob/453a661fa1fa940e2d2e044452398e38c67a98fb/src/index.mjs#L115-L118
      // License: Apache 2.0
      var cn;

      if (cn = navigator.connection) {
        // Don't prefetch if using 2G or if Save-Data is enabled.
        if (cn.saveData || /2g/.test(cn.effectiveType)) return Promise.resolve();
      }

      return getFilesForRoute(assetPrefix, route).then(function (output) {
        return Promise.all(canPrefetch ? output.scripts.map(function (script) {
          return prefetchViaDom(script, 'script');
        }) : []);
      }).then(function () {
        (0, _requestIdleCallback["default"])(function () {
          return _this2.loadRoute(route);
        });
      })["catch"]( // swallow prefetch errors
      function () {});
    }
  };
}

var _default = createRouteLoader;
exports["default"] = _default;

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../compiled/webpack/module.js */ "./node_modules/next/dist/compiled/webpack/module.js")(module)))

/***/ }),

/***/ "./node_modules/next/dist/client/router.js":
/*!*************************************************!*\
  !*** ./node_modules/next/dist/client/router.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

var _construct = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/construct */ "./node_modules/@babel/runtime/helpers/construct.js");

var _s = $RefreshSig$();

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var _interopRequireWildcard = __webpack_require__(/*! @babel/runtime/helpers/interopRequireWildcard */ "./node_modules/@babel/runtime/helpers/interopRequireWildcard.js");

var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

exports.__esModule = true;
exports.useRouter = useRouter;
exports.makePublicRouterInstance = makePublicRouterInstance;
exports.createRouter = exports.withRouter = exports["default"] = void 0;

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

var _router2 = _interopRequireWildcard(__webpack_require__(/*! ../next-server/lib/router/router */ "./node_modules/next/dist/next-server/lib/router/router.js"));

exports.Router = _router2["default"];
exports.NextRouter = _router2.NextRouter;

var _routerContext = __webpack_require__(/*! ../next-server/lib/router-context */ "./node_modules/next/dist/next-server/lib/router-context.js");

var _withRouter = _interopRequireDefault(__webpack_require__(/*! ./with-router */ "./node_modules/next/dist/client/with-router.js"));

exports.withRouter = _withRouter["default"];
/* global window */

var singletonRouter = {
  router: null,
  // holds the actual router instance
  readyCallbacks: [],
  ready: function ready(cb) {
    if (this.router) return cb();

    if (true) {
      this.readyCallbacks.push(cb);
    }
  }
}; // Create public properties and methods of the router in the singletonRouter

var urlPropertyFields = ['pathname', 'route', 'query', 'asPath', 'components', 'isFallback', 'basePath', 'locale', 'locales', 'defaultLocale', 'isReady'];
var routerEvents = ['routeChangeStart', 'beforeHistoryChange', 'routeChangeComplete', 'routeChangeError', 'hashChangeStart', 'hashChangeComplete'];
var coreMethodFields = ['push', 'replace', 'reload', 'back', 'prefetch', 'beforePopState']; // Events is a static property on the router, the router doesn't have to be initialized to use it

Object.defineProperty(singletonRouter, 'events', {
  get: function get() {
    return _router2["default"].events;
  }
});
urlPropertyFields.forEach(function (field) {
  // Here we need to use Object.defineProperty because, we need to return
  // the property assigned to the actual router
  // The value might get changed as we change routes and this is the
  // proper way to access it
  Object.defineProperty(singletonRouter, field, {
    get: function get() {
      var router = getRouter();
      return router[field];
    }
  });
});
coreMethodFields.forEach(function (field) {
  // We don't really know the types here, so we add them later instead
  ;

  singletonRouter[field] = function () {
    var router = getRouter();
    return router[field].apply(router, arguments);
  };
});
routerEvents.forEach(function (event) {
  singletonRouter.ready(function () {
    _router2["default"].events.on(event, function () {
      var eventField = "on".concat(event.charAt(0).toUpperCase()).concat(event.substring(1));
      var _singletonRouter = singletonRouter;

      if (_singletonRouter[eventField]) {
        try {
          _singletonRouter[eventField].apply(_singletonRouter, arguments);
        } catch (err) {
          console.error("Error when running the Router event: ".concat(eventField));
          console.error("".concat(err.message, "\n").concat(err.stack));
        }
      }
    });
  });
});

function getRouter() {
  if (!singletonRouter.router) {
    var message = 'No router instance found.\n' + 'You should only use "next/router" inside the client side of your app.\n';
    throw new Error(message);
  }

  return singletonRouter.router;
} // Export the singletonRouter and this is the public API.


var _default = singletonRouter; // Reexport the withRoute HOC

exports["default"] = _default;

function useRouter() {
  _s();

  return _react["default"].useContext(_routerContext.RouterContext);
} // INTERNAL APIS
// -------------
// (do not use following exports inside the app)
// Create a router and assign it as the singleton instance.
// This is used in client side when we are initilizing the app.
// This should **not** use inside the server.


_s(useRouter, "gDsCjeeItUuvgOWf1v4qoK9RF6k=");

var createRouter = function createRouter() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  singletonRouter.router = _construct(_router2["default"], args);
  singletonRouter.readyCallbacks.forEach(function (cb) {
    return cb();
  });
  singletonRouter.readyCallbacks = [];
  return singletonRouter.router;
}; // This function is used to create the `withRouter` router instance


exports.createRouter = createRouter;

function makePublicRouterInstance(router) {
  var _router = router;
  var instance = {};

  var _iterator = _createForOfIteratorHelper(urlPropertyFields),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var property = _step.value;

      if (typeof _router[property] === 'object') {
        instance[property] = Object.assign(Array.isArray(_router[property]) ? [] : {}, _router[property]); // makes sure query is not stateful

        continue;
      }

      instance[property] = _router[property];
    } // Events is a static property on the router, the router doesn't have to be initialized to use it

  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }

  instance.events = _router2["default"].events;
  coreMethodFields.forEach(function (field) {
    instance[field] = function () {
      return _router[field].apply(_router, arguments);
    };
  });
  return instance;
}

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../compiled/webpack/module.js */ "./node_modules/next/dist/compiled/webpack/module.js")(module)))

/***/ }),

/***/ "./node_modules/next/dist/client/with-router.js":
/*!******************************************************!*\
  !*** ./node_modules/next/dist/client/with-router.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

exports.__esModule = true;
exports["default"] = withRouter;

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

var _router = __webpack_require__(/*! ./router */ "./node_modules/next/dist/client/router.js");

function withRouter(ComposedComponent) {
  function WithRouterWrapper(props) {
    return /*#__PURE__*/_react["default"].createElement(ComposedComponent, Object.assign({
      router: (0, _router.useRouter)()
    }, props));
  }

  WithRouterWrapper.getInitialProps = ComposedComponent.getInitialProps // This is needed to allow checking for custom getInitialProps in _app
  ;
  WithRouterWrapper.origGetInitialProps = ComposedComponent.origGetInitialProps;

  if (true) {
    var name = ComposedComponent.displayName || ComposedComponent.name || 'Unknown';
    WithRouterWrapper.displayName = "withRouter(".concat(name, ")");
  }

  return WithRouterWrapper;
}

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../compiled/webpack/module.js */ "./node_modules/next/dist/compiled/webpack/module.js")(module)))

/***/ }),

/***/ "./node_modules/next/dist/compiled/css-loader/api.js":
/*!***********************************!*\
  !*** (webpack)/css-loader/api.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

/* WEBPACK VAR INJECTION */(function(__dirname) {module.exports=function(){"use strict";var n={762:function(n){n.exports=function(n){var t=[];t.toString=function toString(){return this.map(function(t){var r=cssWithMappingToString(t,n);if(t[2]){return"@media ".concat(t[2]," {").concat(r,"}")}return r}).join("")};t.i=function(n,r,o){if(typeof n==="string"){n=[[null,n,""]]}var e={};if(o){for(var a=0;a<this.length;a++){var c=this[a][0];if(c!=null){e[c]=true}}}for(var i=0;i<n.length;i++){var u=[].concat(n[i]);if(o&&e[u[0]]){continue}if(r){if(!u[2]){u[2]=r}else{u[2]="".concat(r," and ").concat(u[2])}}t.push(u)}};return t};function cssWithMappingToString(n,t){var r=n[1]||"";var o=n[3];if(!o){return r}if(t&&typeof btoa==="function"){var e=toComment(o);var a=o.sources.map(function(n){return"/*# sourceURL=".concat(o.sourceRoot||"").concat(n," */")});return[r].concat(a).concat([e]).join("\n")}return[r].join("\n")}function toComment(n){var t=btoa(unescape(encodeURIComponent(JSON.stringify(n))));var r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t);return"/*# ".concat(r," */")}}};var t={};function __nccwpck_require__(r){if(t[r]){return t[r].exports}var o=t[r]={exports:{}};var e=true;try{n[r](o,o.exports,__nccwpck_require__);e=false}finally{if(e)delete t[r]}return o.exports}__nccwpck_require__.ab=__dirname+"/";return __nccwpck_require__(762)}();
/* WEBPACK VAR INJECTION */}.call(this, "/"))

/***/ }),

/***/ "./node_modules/next/dist/compiled/css-loader/cjs.js?!./node_modules/next/dist/compiled/postcss-loader/cjs.js?!./styles/app.css":
/*!************************************************************************************************************************!*\
  !*** (webpack)/css-loader/cjs.js??ref--5-oneOf-6-1!(webpack)/postcss-loader/cjs.js??ref--5-oneOf-6-2!./styles/app.css ***!
  \************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/next/dist/compiled/css-loader/api.js */ "./node_modules/next/dist/compiled/css-loader/api.js");
/* harmony import */ var _node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);
// Module
___CSS_LOADER_EXPORT___.push([module.i, ".asbestos-trust-funds-hero-container{background-color:#6bcaff;padding-bottom:30px;border-bottom:5px solid #b8e6ff}.asbestos-trust-funds-hero-img-320 img{width:100%}.asbestos-trust-funds-hero-content-container{width:90%;margin:auto;margin-top:-70px}.asbestos-trust-funds-hero-content-container h1{font-size:30px;color:#444748;letter-spacing:0;line-height:36px}.asbestos-trust-funds-hero-content-container p{font-size:18px;font-family:Roboto,sans-serif;color:#545d5f;letter-spacing:0;line-height:28px;padding-top:40px}.hero-italics-trust-funds{font-style:italic;font-weight:300;font-size:26px;color:#545d5f;letter-spacing:0;line-height:26px}.asbestos-trust-funds-hero-container .asbestos-law-home-btn{margin-top:30px}.qualifying-for-trust-funds-section-container{background:#effaff;padding-top:40px;padding-bottom:80px}.page-form-wrapper-container{background:#fff;box-shadow:2px 2px 12px 0 rgba(9,8,8,.25);border-radius:0 0 10px 10px;width:294px;margin:auto;margin-top:50px;margin-bottom:40px}.page-form-header-container{background:#162d44;padding-top:15px;padding-bottom:15px}.page-form-header-container p{font-size:20px;font-weight:700;width:85%;margin:auto;font-family:Roboto,sans-serif;color:#fff;letter-spacing:0;text-align:center;line-height:28px}.page-form{padding-top:10px}.page-form label{font-size:18px;font-weight:700;color:#545d5f;letter-spacing:0}.page-form input{background:#f9fafb;border:1px solid #dadee0;border-radius:3px;width:100%;height:32px;padding:0}.page-form .form-submit{background:#e6b523;border-radius:7px;width:100%;height:50px;font-weight:700;font-family:Roboto,sans-serif;margin-top:20px;margin-bottom:20px;cursor:pointer;outline:none;padding-top:6px;padding-bottom:10px}.page-form .form-submit,.page-form .form-submit p{font-size:18px;color:#444748;letter-spacing:0;text-align:center;line-height:28px}.page-form .form-submit p{width:80%;margin:auto}.page-form .form-submit:hover{background-color:#162d44;color:#fff;transition:.5s}.page-form .form-submit:hover p{color:#fff}.flex-input{width:90%;margin:auto;padding-bottom:10px}.flex-input-lp{width:95%}.form-submit-container{width:268px;margin:auto}.privacy-policy-container{padding-bottom:20px}.privacy-policy-container p{font-size:16px;font-style:italic;color:#545d5f;letter-spacing:0;text-align:center;line-height:26px;width:90%;margin:auto}.process-for-filing-trust-fund-section-container .asbestos-law-content-container h2,.qualifying-for-trust-funds-section-container .asbestos-law-content-container h2,.top-asbestos-trusts-section-container .asbestos-law-content-container h2{font-size:26px;color:#5b93b8;letter-spacing:0;line-height:30px}.top-asbestos-trusts-section-container{padding-bottom:90px}.top-asbestos-trusts-icon-img{width:103px;margin:auto;margin-top:-50px}.top-asbestos-trusts-icon-img img{width:103px}.asbestos-trust-funds-chart-container{width:294px;margin:auto;margin-top:30px;margin-bottom:30px}.asbestos-trust-funds-chart-header{background:#f29674}.asbestos-trust-funds-chart-header-block{padding-top:20px;padding-bottom:20px;width:50%}.asbestos-trust-funds-chart-header-block p{font-size:20px;font-family:Roboto,sans-serif;font-weight:700;color:#fff;letter-spacing:0;padding-left:5px;width:90%;margin:auto}.asbestos-trust-funds-chart-block{padding-top:20px;padding-bottom:20px;width:50%}.asbestos-trust-funds-chart-block p{font-family:Roboto,sans-serif;font-size:18px;color:#545d5f;letter-spacing:0;line-height:28px;padding-left:5px;width:90%;margin:auto}.asbestos-trust-funds-chart-header{display:flex}.left-block{border-right:1px solid #fff}.asbestos-trust-funds-chart-section-dark{background:#e2b08b;display:flex}.asbestos-trust-funds-chart-section-light{background:#f5dfc7;display:flex}.last-block{border-radius:0 0 10px 10px}.process-for-filing-trust-fund-icon-img{width:103px;margin:auto;position:relative;bottom:50px}.process-for-filing-trust-fund-icon-img img{width:103px}.process-for-filing-trust-fund-section-container{background:#effaff;padding-bottom:30px}.process-for-filing-trust-fund-section-container .asbestos-law-content-container{position:relative;bottom:50px}.asbestos-trust-funds-hero-img-375,.tablet-desktop-only{display:none}@media screen and (min-width:375px){.page-form-wrapper-container{width:349px}.page-form-header-container p{width:92%}.asbestos-trust-funds-chart-container{width:349px}.left-block{border-right:1px solid #fff;width:67%}.asbestos-trust-funds-hero-img-320{display:none}.asbestos-trust-funds-hero-img-375{display:block}.asbestos-trust-funds-hero-img-375 img{width:100%}}@media screen and (min-width:750px){.asbestos-trust-funds-hero-container{background-image:url(https://media-asbestoslaw-com.s3.amazonaws.com/dev/trust-funds-page/trustfundherotablet.png);background-position-x:right;background-repeat:no-repeat;background-size:contain;height:445px}.asbestos-trust-funds-hero-img-375{display:none}.asbestos-trust-funds-hero-content-container{width:92%;margin:auto;padding-top:20px;margin-top:0}.qualifying-for-trust-funds-flex-container{display:flex;flex-flow:row-reverse}.qualifying-for-trust-funds-section-container .asbestos-law-content-container{width:48%;margin:0;padding-left:20px;padding-right:20px}.asbestos-trust-funds-chart-container{width:630px}.mobile-only{display:none}.tablet-desktop-only{display:flex}}@media screen and (min-width:1000px){.asbestos-trust-funds-hero-wrapper-container{background-color:#6bcaff;border-bottom:5px solid #b8e6ff}.asbestos-trust-funds-hero-container{background-image:url(https://media-asbestoslaw-com.s3.amazonaws.com/dev/trust-funds-page/trustfundherodesktopupdated.png);background-position-x:right;background-repeat:no-repeat;background-size:contain;max-width:1440px;height:400px;margin:auto;border-bottom:none}.asbestos-trust-funds-hero-container .transparent-style-content-container{width:625px;position:relative;top:60px}.qualifying-for-trust-funds-flex-container{width:1000px;margin:auto}.qualifying-for-trust-funds-section-container .asbestos-law-content-container{width:55%;margin:0;padding-left:20px;padding-right:20px;position:relative;top:60px}.top-asbestos-trusts-inner-container{width:1000px;margin:auto;padding-bottom:60px}.top-asbestos-trusts-section-container{padding-bottom:30px}.process-for-filing-trust-fund-inner-container{width:1000px;margin:auto}}.input-container input{font-size:18px;color:#545d5f;letter-spacing:0;line-height:28px;font-family:Roboto,sans-serif}.invalid,.valid{display:none;width:30px;position:relative;bottom:34px;right:5px;margin-left:auto;margin-bottom:-34px}.finding-a-lawyer-hero-container{background-color:#6bcaff;padding-bottom:40px;border-bottom:5px solid #b8e6ff}.finding-a-lawyer-hero-img-320 img{width:100%}.finding-a-lawyer-hero-content-container{width:90%;margin:auto;margin-top:-70px}.finding-a-lawyer-hero-content-container h1{font-size:30px;color:#444748;letter-spacing:0;line-height:36px}.finding-a-lawyer-hero-content-container p{font-size:18px;font-family:Roboto,sans-serif;color:#545d5f;letter-spacing:0;line-height:28px;padding-top:40px}.finding-a-lawyer-hero-container .asbestos-law-home-btn{padding:13px;width:256px;position:relative;top:20px}.how-to-find-meso-lawyer-section-container{background:#effaff;padding-top:40px;padding-bottom:100px}.how-to-find-meso-lawyer-section-container .page-form-header-container{background:#5b93b8;padding-top:15px;padding-bottom:15px}.how-to-find-meso-lawyer-section-container .page-form-header-container p{font-size:20px;font-weight:700;width:96%;margin:auto;font-family:Roboto,sans-serif;color:#fff;letter-spacing:0;text-align:center;line-height:28px}.how-to-find-meso-lawyer-section-container .asbestos-law-content-container h2,.meso-lawyer-qualities-section-container .asbestos-law-content-container h2,.why-find-meso-attorney-section-container .asbestos-law-content-container h2{font-size:26px;color:#5b93b8;letter-spacing:0;line-height:30px}.meso-lawyer-qualities-section-container .asbestos-law-content-container{margin-top:-60px}.why-find-meso-attorney-icon{width:103px;margin:auto;margin-top:-50px}.why-find-meso-attorney-icon img{width:103px}.why-find-meso-attorney-section-container{padding-bottom:40px}.asbestos-law-bullet-header p{font-size:18px;font-weight:700;color:#240000;letter-spacing:0;line-height:28px}.meso-lawyer-qualities-img-320 img{width:100%}.meso-lawyer-qualities-section-container .asbestos-law-bullet-list{padding-bottom:20px}.meso-lawyer-qualities-section-container{padding-bottom:80px}.finding-a-lawyer-hero-img-375,.meso-lawyer-qualities-img-375,.meso-lawyer-qualities-img-tablet{display:none}.meso-lawyer-qualities-section-container{background:#effaff}@media screen and (min-width:375px){.finding-a-lawyer-hero-img-320,.meso-lawyer-qualities-img-320{display:none}.finding-a-lawyer-hero-img-375,.meso-lawyer-qualities-img-375{display:block}.finding-a-lawyer-hero-img-375 img,.meso-lawyer-qualities-img-375 img{width:100%}.finding-a-lawyer-hero-content-container{width:90%;margin:auto;margin-top:-135px}.meso-lawyer-qualities-section-container .asbestos-law-content-container{margin-top:-110px}}@media screen and (min-width:750px){.finding-a-lawyer-hero-img-375,.meso-lawyer-qualities-img-375{display:none}.meso-lawyer-qualities-img-tablet{display:block}.meso-lawyer-qualities-img-tablet img{width:100%}.finding-a-lawyer-hero-container{background-image:url(https://media-asbestoslaw-com.s3.amazonaws.com/dev/find-a-lawyer-page/lawyerherotablet.png);background-position-x:right;background-position-y:145px;background-repeat:no-repeat;height:542px}.finding-a-lawyer-hero-container .transparent-style-content-container{top:210px;padding-bottom:45px}.finding-a-lawyer-hero-content-container h1{padding-top:20px}.how-to-find-meso-lawyer-flex-container{display:flex;flex-flow:row-reverse}.how-to-find-meso-lawyer-section-container .asbestos-law-content-container{width:48%;margin:0;padding-left:20px;padding-right:20px;position:relative;top:60px}}@media screen and (min-width:1000px){.finding-a-lawyer-hero-container{background-image:url(https://media-asbestoslaw-com.s3.amazonaws.com/dev/find-a-lawyer-page/lawyerherodesktopupdated.png);background-position-x:right;background-repeat:no-repeat;max-width:1440px;height:510px;margin:auto;border-bottom:none}.finding-a-lawyer-hero-wrapper-container{background:#6bcaff;border-bottom:5px solid #b8e6ff}.finding-a-lawyer-hero-container .transparent-style-content-container{top:195px;padding-bottom:45px}.how-to-find-meso-lawyer-section-container{width:1000px;margin:auto}.how-to-find-meso-lawyer-wrapper-container{background:#effaff}.why-find-meso-attorney-section-container{width:1000px;margin:auto}.meso-lawyer-qualities-img-tablet{display:none}.meso-lawyer-qualities-section-container{background-image:url(https://media-asbestoslaw-com.s3.amazonaws.com/dev/find-a-lawyer-page/qualitiesdesktop.png);background-repeat:no-repeat;background-position-x:right;max-width:1440px;height:476px;margin:auto;border-bottom:none}.meso-lawyer-qualities-wrapper-container{background:#effaff}.meso-lawyer-qualities-section-container .asbestos-law-content-container{margin-top:0;padding-top:30px;width:50%}.meso-lawyer-qualities-section-container .asbestos-law-btn-shell-container{position:relative;left:10px}.meso-lawyer-qualities-section-container .asbestos-law-btn-shell-container a{width:410px;padding:13px 22px}.meso-lawyer-qualities-section-container .asbestos-law-home-btn-double{margin:0}.meso-lawyer-qualities-section-container .asbestos-law-content-container h2{width:425px}}.case-value-hero-container{background-color:#6bcaff;padding-bottom:40px;border-bottom:5px solid #b8e6ff}.case-value-hero-img-320 img{width:100%}.case-value-hero-img-375{display:none}.case-value-hero-content-container{width:90%;margin:auto;margin-top:-70px}.case-value-hero-content-container h1{font-size:30px;color:#444748;letter-spacing:0;line-height:36px}.case-value-hero-content-container p{font-size:18px;font-family:Roboto,sans-serif;color:#545d5f;letter-spacing:0;line-height:28px;padding-top:40px}.case-value-hero-container .asbestos-law-home-btn{padding:13px;width:256px;position:relative;top:20px;margin-top:10px;margin-bottom:15px}.how-much-your-case-is-worth-section-container{background:#effaff;padding-top:20px;padding-bottom:80px}.case-value-page .asbestos-law-content-container h2{font-size:26px;color:#5b93b8;letter-spacing:0;line-height:30px}.recoveries-meso-victims-card-container{width:294px;margin:auto;background:#fff;box-shadow:2px 2px 12px 0 rgba(9,8,8,.25);border-radius:0 0 10px 10px;margin-top:30px;margin-bottom:40px}.recoveries-meso-victims-card-header{background:#5b93b8;padding-top:10px;padding-bottom:10px}.recoveries-meso-victims-card-header p{font-size:20px;font-weight:700;color:#fff;letter-spacing:0;text-align:center;line-height:28px;width:90%;margin:auto}.recoveries-meso-victims-content{padding-top:20px;padding-bottom:20px}.recoveries-meso-victims-content p{font-size:18px;color:#545d5f;letter-spacing:0;text-align:center;line-height:26px;width:90%;margin:auto}.recoveries-numbers-container{padding-bottom:10px}.blue-numbers-recovery p{font-size:28px;font-family:Georgia-Bold,serif;font-weight:700;color:#5b93b8;letter-spacing:0;text-align:center;line-height:30px}.job-title-recovery{padding-top:5px}.job-title-recovery p{font-size:18px;color:#545d5f;letter-spacing:0;text-align:center;line-height:28px;width:90%;margin:auto}.blue-diamond{transform:rotate(-315deg);background:#528bb1;width:10px;height:10px;margin:auto;margin-top:10px;margin-bottom:20px}.recoveries-meso-victims-card-container .asbestos-law-home-btn{padding:13px;width:248px}.recoveries-numbers-master-container{padding-bottom:20px}.recoveries-meso-victims-card-container{padding-bottom:30px}.veterans-claims-list-header{font-size:18px;font-weight:700;color:#002c00;letter-spacing:0;line-height:28px}.length-of-meso-cases-icon,.veterans-meso-claims-icon{width:103px;margin:auto;margin-top:-50px}.length-of-meso-cases-icon img,.veterans-meso-claims-icon img{width:103px}.veterans-meso-claims-section-container{padding-bottom:80px}.length-of-meso-cases-section-container{background:#effaff;padding-bottom:30px}.length-of-meso-cases-icon{width:103px;margin:auto;position:relative;bottom:50px;margin-bottom:-50px}.length-of-meso-cases-icon img{width:103px}.length-of-meso-cases-section-container .page-form-header-container p{width:92%}.length-of-meso-cases-section-container .page-form-wrapper-container{margin-top:40px}@media screen and (min-width:375px){.case-value-hero-img-320{display:none}.case-value-hero-img-375{display:block}.case-value-hero-img-375 img{width:100%}.recoveries-meso-victims-card-container{width:349px}.recoveries-meso-victims-card-header p{font-size:20px;font-weight:700;color:#fff;letter-spacing:0;text-align:center;line-height:28px;width:78%;margin:auto}}@media screen and (min-width:750px){.case-value-hero-img-375{display:none}.case-value-hero-container{background-image:url(https://media-asbestoslaw-com.s3.amazonaws.com/dev/case-value-page/casevaluetablet.png);background-position-x:right;background-position-y:80px;background-repeat:no-repeat;height:472px}.case-value-hero-container .transparent-style-content-container{background-color:rgba(210,239,255,.5);width:65%;position:relative;top:110px;padding-bottom:20px}.case-value-hero-content-container{width:90%;margin:auto;margin-top:-70px;padding-top:20px}.case-value-tablet-flex{display:flex}.how-much-your-case-is-worth-section-container .case-value-tablet-flex .asbestos-law-content-container{width:48%;margin-top:0}.how-much-your-case-is-worth-section-container .asbestos-law-bullet-list .bullet-tablet-flex{display:block}.how-much-your-case-is-worth-section-container .asbestos-law-content-container{width:48%;margin-top:-320px}.recoveries-meso-victims-card-container{position:relative;top:115px}.veterans-meso-claims-section-container .asbestos-law-bullet-list .bullet-tablet-flex{width:360px}.length-of-meso-cases-section-container .case-value-tablet-flex .asbestos-law-content-container{width:48%}.length-of-meso-cases-section-container .case-value-tablet-flex .page-form-wrapper-container{margin-top:15px}}@media screen and (min-width:807px){.case-value-hero-container .transparent-style-content-container{background-color:rgba(210,239,255,.5);width:65%;position:relative;top:125px;padding-bottom:20px}}@media screen and (min-width:865px){.how-much-your-case-is-worth-section-container .asbestos-law-content-container{width:48%;margin-top:-360px}}@media screen and (min-width:960px){.how-much-your-case-is-worth-section-container .asbestos-law-content-container{width:48%;margin-top:-385px}}@media screen and (min-width:1000px){.case-value-hero-container{background-image:url(https://media-asbestoslaw-com.s3.amazonaws.com/dev/case-value-page/casevaluedesktop.png);background-position-x:right;background-repeat:no-repeat;max-width:1440px;height:438px;margin:auto;border-bottom:none}.case-value-hero-wrapper-container{background:#6bcaff;border-bottom:5px solid #b8e6ff}.case-value-hero-container .transparent-style-content-container{background-color:rgba(210,239,255,.5);width:69%;position:relative;top:125px;padding-bottom:30px}.how-much-your-case-is-worth-section-container{width:1000px;margin:auto}.how-much-your-case-is-worth-wrapper-container{background:#effaff}.veterans-meso-claims-section-container{width:1000px;margin:auto}.how-much-your-case-is-worth-section-container .asbestos-law-bullet-list .bullet-tablet-flex{display:flex}.length-of-meso-cases-section-container{width:1000px;margin:auto}.length-of-meso-cases-wrapper-container{background:#effaff}.how-much-your-case-is-worth-section-container .case-value-tablet-flex .asbestos-law-content-container{width:58%;margin-top:0}.recoveries-meso-victims-card-container{position:relative;top:115px;left:30px}.how-much-your-case-is-worth-section-container .asbestos-law-content-container{width:58%;margin-top:-395px}.length-of-meso-cases-section-container .case-value-tablet-flex .asbestos-law-content-container{width:58%;position:relative;top:60px}.length-of-meso-cases-section-container .case-value-tablet-flex .page-form-wrapper-container{position:relative;left:30px}.case-value-hero-content-container p{font-size:18px;font-family:Roboto,sans-serif;color:#545d5f;letter-spacing:0;line-height:28px;padding-top:30px}}.meso-settlement-hero-container{background-color:#6bcaff;padding-bottom:40px;border-bottom:5px solid #b8e6ff}.meso-settlement-hero-img-320 img{width:100%}.meso-settlement-hero-img-375{display:none}.meso-settlement-hero-content-container{width:90%;margin:auto;margin-top:-70px}.meso-settlement-hero-content-container h1{font-size:30px;color:#444748;letter-spacing:0;line-height:36px}.meso-settlement-hero-content-container p{font-size:18px;font-family:Roboto,sans-serif;color:#545d5f;letter-spacing:0;line-height:28px;padding-top:40px}.meso-settlement-hero-container .asbestos-law-home-btn{padding:13px;width:256px;position:relative;top:20px;margin-top:10px;margin-bottom:15px}.settlements-lawsuits-page .asbestos-law-content-container h2{font-size:26px;color:#5b93b8;letter-spacing:0;line-height:30px}.case-settlement-steps-card-container{width:294px;margin:auto;margin-top:20px;margin-bottom:20px;border-top:10px solid #5b93b8;background:#fff;box-shadow:2px 2px 12px 0 rgba(9,8,8,.25);border-radius:0 0 10px 10px;padding-bottom:20px;margin-top:30px;margin-bottom:30px}.case-settlement-steps-header{width:268px;margin:auto;padding-top:10px;padding-bottom:10px}.case-settlement-steps-header p{font-family:Roboto,sans-serif;font-weight:700;font-size:18px;color:#545d5f;letter-spacing:0;line-height:28px}.case-settlement-steps-flex-container{display:flex;padding-top:10px;padding-bottom:10px}.step-container,.step-number{padding-left:10px}.step-container{padding-right:10px}.step-container p{font-family:Roboto,sans-serif;font-size:18px;color:#545d5f;letter-spacing:0;line-height:28px}.case-settlement-steps-section-container .asbestos-law-home-btn{margin-top:10px}.case-settlement-steps-section-container{background:#effaff;padding-top:20px;padding-bottom:30px}.settlement-example-box{background:#fff;box-shadow:2px 2px 12px 0 rgba(9,8,8,.25);border-radius:10px;width:203px;height:176px;margin:auto;margin-top:20px;margin-bottom:20px}.settlement-number{width:177px;margin:auto;padding-top:10px;padding-bottom:10px}.settlement-number p{font-size:24px;color:#5b93b8;letter-spacing:0;text-align:center;line-height:28px;font-family:Georgia-Bold,serif}.settlement-description{width:177px;margin:auto;padding-bottom:10px}.settlement-description p{font-size:18px;font-family:Roboto,sans-serif;color:#545d5f;letter-spacing:0;text-align:center;line-height:28px}.next-btn,.prev-btn{position:relative;height:0;cursor:pointer}.next-btn,.prev-btn{bottom:239px}.next-btn{left:291px}.examples-of-settlements-section-container{padding-top:30px;padding-bottom:90px}.settlement-example-carousel-box-container{width:320px;margin:auto;padding-top:20px}.how-meso-lawyer-can-help-section-container{background:#effaff}.how-meso-lawyer-can-help-icon{width:103px;margin:auto;position:relative;bottom:50px;margin-bottom:-50px}.how-meso-lawyer-can-help-section-container .page-form-header-container p{width:90%}.how-meso-lawyer-can-help-section-container{padding-bottom:30px}.how-meso-lawyer-can-help-section-container .page-form-wrapper-container{margin-top:50px}.case-settlement-tablet-only{display:none}.desktop-slide,.settlement-example-carousel-box-container-desktop{display:none!important}@media screen and (min-width:375px){.meso-settlement-hero-img-375{display:block}.meso-settlement-hero-img-375 img{width:100%}.meso-settlement-hero-img-320{display:none}.case-settlement-steps-card-container{width:349px;margin:auto;margin-top:30px;margin-bottom:30px}.case-settlement-steps-header{width:323px;margin:auto;padding-top:10px;padding-bottom:10px}.settlement-example-carousel-box-container{width:375px;margin:auto;padding-top:20px}.settlement-example-box{background:#fff;box-shadow:2px 2px 12px 0 rgba(9,8,8,.25);border-radius:10px;width:257px;height:148px;margin:auto;margin-top:20px;margin-bottom:20px}.settlement-description{width:231px;margin:auto;padding-bottom:10px}.next-btn,.prev-btn{bottom:208px}.next-btn{left:346px}}@media screen and (min-width:750px){.meso-settlement-hero-img-375{display:none}.case-settlement-tablet-only{display:block}.case-settlement-steps-tablet-flex-container{display:flex}.meso-settlement-hero-container{background-image:url(https://media-asbestoslaw-com.s3.amazonaws.com/dev/settlements-lawsuits-page/settlementsherotablet.png);background-position-x:right;background-position-y:80px;background-repeat:no-repeat;height:472px}.meso-settlement-hero-container .transparent-style-content-container{background-color:rgba(210,239,255,.5);width:65%;position:relative;top:110px;padding-bottom:20px}.meso-settlement-hero-content-container{width:90%;margin:auto;margin-top:-70px;padding-top:20px}.case-settlement-steps-content-container .asbestos-law-content-container{width:86%;margin:0;padding-left:20px;padding-right:20px;position:relative;top:40px}.case-settlement-steps-card-container{width:400px;margin:auto;margin:30px;padding-right:15px;padding-left:15px}.carousel-slide-container{display:flex}.settlement-example-carousel-box-container{width:700px;margin:auto;padding-top:20px}.prev-btn{bottom:125px;left:-15px}.next-btn{bottom:125px;left:680px}.how-meso-lawyer-can-help-flex-container{display:flex}.how-meso-lawyer-can-help-flex-container .asbestos-law-bullet-list .bullet-tablet-flex{display:block}.how-meso-lawyer-can-help-section-container .asbestos-law-content-container{width:48%;margin:0;padding-left:20px;padding-right:20px;position:relative}.how-meso-lawyer-can-help-section-container .page-form-wrapper-container{margin-bottom:80px}}@media screen and (min-width:1000px){.mobile-slide{display:none!important}.desktop-slide{display:flex!important}.desktop-slide.desktop-slide-xs{justify-content:center}.desktop-slide.desktop-slide-xs .settlement-example-box.mobile-settlement-example-box{margin-left:21px;margin-right:21px}.meso-settlement-hero-container{background-image:url(https://media-asbestoslaw-com.s3.amazonaws.com/dev/settlements-lawsuits-page/settlementsherodesktop.png);background-position-x:right;background-repeat:no-repeat;max-width:1440px;height:438px;margin:auto;border-bottom:none}.meso-settlement-hero-wrapper-container{background:#6bcaff;border-bottom:5px solid #b8e6ff}.case-settlement-steps-wrapper-container,.how-meso-lawyer-can-help-wrapper-container{background:#effaff}.case-settlement-steps-section-container,.examples-of-settlements-section-container,.how-meso-lawyer-can-help-section-container{width:1000px;margin:auto}.examples-of-settlements-section-container{overflow:hidden}.meso-settlement-hero-content-container{width:95%}.meso-settlement-hero-container .transparent-style-content-container{top:146px}.settlement-example-carousel-box-container-desktop{display:block!important;width:860px;margin:auto;padding-top:20px}.prev-btn{bottom:125px;left:-70px}.next-btn{bottom:125px;left:900px}.settlement-example-carousel-box-container{display:none!important}.how-meso-lawyer-can-help-section-container .asbestos-law-content-container{top:40px;width:56%}.how-meso-lawyer-can-help-flex-container .asbestos-law-bullet-list .bullet-tablet-flex{display:flex}}.start-your-claim-hero-container{background-color:#6bcaff;border-bottom:5px solid #b8e6ff}.start-your-claim-hero-img-320 img{width:100%}.start-your-claim-hero-img-375{display:none}.start-your-claim-hero-content-container{width:90%;margin:auto;margin-top:-70px}.start-your-claim-hero-content-container h1{font-size:30px;color:#444748;letter-spacing:0;line-height:36px;text-align:center}.start-your-claim-hero-content-container p{font-size:18px;font-family:Roboto,sans-serif;color:#545d5f;letter-spacing:0;line-height:28px;padding-top:40px;text-align:center}.bold-italics,.italics{font-style:italic}.bold-italics{font-weight:700}.start-your-claim-hero-container .page-form-wrapper-container{margin-top:40px;margin-bottom:10px}.start-your-claim-hero-container .page-form-header-container{padding-top:15px;padding-bottom:15px}.simplified-process-header-container{width:90%;margin:auto;padding-top:20px;padding-bottom:30px}.simplified-process-icon-flex-container{display:flex;padding-bottom:30px}.simplified-process-icon{position:relative;top:5px;padding-left:10px}.simplified-process-content{width:217px;padding-left:20px}.simplified-process-content p{font-size:18px;color:#60686a;letter-spacing:0;line-height:28px}.two-line-content{position:relative;top:10px}.form-notice-content{width:90%;margin:auto;padding-bottom:30px}.form-notice-content p{font-style:italic;color:#545d5f;line-height:28px}.form-notice-content p,.return-to-form-btn{font-size:18px;letter-spacing:0;text-align:center}.return-to-form-btn{padding:13px;width:268px;font-weight:700;text-decoration:none;color:#fff;line-height:24px;background-color:#ef654b;border-radius:7px;margin:auto;display:flex;justify-content:center;margin-bottom:60px}.return-to-form-btn:hover{background-color:#0c5a9c;color:#fff;transition:.5s}.arrow-up-img-left{width:0;position:relative;right:198px}.arrow-up-img-right{width:0;position:relative;left:40px}.input-container textarea{width:274px;background:#f9fafb;border:1px solid #dadee0;border-radius:3px;padding-bottom:76px;font-family:Roboto,sans-serif}#diagnosis,.input-container textarea{font-size:18px;color:#545d5f;letter-spacing:0;line-height:28px}#diagnosis{padding-top:8px;padding-bottom:8px;opacity:.85}#diagnosis option{color:#353535}#diagnosis{width:274px;background:#f9fafb;border:1px solid #dadee0;border-radius:3px}@media screen and (min-width:375px){.input-container textarea{width:332px}.start-your-claim-hero-img-375{display:block}.start-your-claim-hero-img-375 img{width:100%}.start-your-claim-hero-img-320{display:none}.lp-page-form-flex{display:flex;margin:auto;justify-content:space-between;padding-left:10px}.lp-page-form .page-form input{width:160px;box-sizing:border-box}.lp-page-form .page-form .form-submit{width:268px}.simplified-process-header-container{width:349px;margin:auto;padding-top:30px;padding-bottom:20px}.simplified-process-header-container p{padding-bottom:20px}.simplified-process-icon-flex-container{display:flex;padding-bottom:30px;width:375px;margin:auto}.simplified-process-content{width:277px;padding-left:20px;position:relative;top:5px}.two-line-content{top:10px}.single-line-content{position:relative;top:24px}#diagnosis{width:332px;background:#f9fafb;border:1px solid #dadee0;border-radius:3px}}@media screen and (min-width:700px){.start-your-claim-hero-container{background-image:url(https://media-asbestoslaw-com.s3.amazonaws.com/dev/general-lp/generallpherotablet.png)}.start-your-claim-hero-container,.trust-fund-lp-hero{padding-top:180px;background-repeat:no-repeat;background-size:cover}.trust-fund-lp-hero{background-image:url(https://media-asbestoslaw-com.s3.amazonaws.com/dev/trust-fund-lp/trustfundlpherotablet.png)}.start-your-claim-hero-container .shell-container{width:100%}.start-your-claim-hero-container .page-form-wrapper-container{width:350px}.start-your-claim-hero-img-375{display:none}.start-your-claim-hero-container .transparent-style-content-container{background-color:rgba(210,239,255,.5);width:100%;position:relative;top:40px;padding-bottom:20px}.start-your-claim-hero-container .page-form-wrapper-container{position:relative;bottom:412px;margin-bottom:-400px;margin-right:20px}.start-your-claim-hero-content-container{width:44%;padding-top:20px;padding-left:20px;margin:0;margin-top:-70px}.simplified-process-header-container{width:665px}.start-your-claim-flex{margin-top:10px}.start-your-claim-hero-content-container h1,.start-your-claim-hero-content-container p{text-align:left}}@media screen and (min-width:760px){.simplified-process-master-flex{display:flex;width:750px;margin:auto}.return-to-form-btn{display:none}.start-your-claim-hero-container{max-width:860px;margin:auto}.start-your-claim-hero-wrapper-container{background-color:#6bcaff;border-bottom:none}}@media screen and (min-width:860px){.start-your-claim-hero-wrapper-container{background-color:#6bcaff;border-bottom:5px solid #b8e6ff}.trust-fund-lp-secondary-wrapper-container{background-image:url(https://media-asbestoslaw-com.s3.amazonaws.com/dev/trust-fund-lp/trustfundlpherodesktop.png);background-repeat:no-repeat;background-position-x:20%;background-position-y:-22px;background-size:1026px;height:654px;margin:auto;padding-top:1px}.trust-fund-lp-wrapper{padding-top:0}.trust-fund-lp-flex{margin-top:0;position:relative;top:-21px}.trust-fund-lp-hero-content-container{width:44%;padding-top:20px;padding-left:20px;margin:0;margin-top:-28px}.start-your-claim-hero-container .trust-fund-lp-parge-form-wrapper{position:relative;bottom:426px;margin-bottom:-411px;margin-right:20px}.start-your-claim-hero-container{border-bottom:none;background-image:url(https://media-asbestoslaw-com.s3.amazonaws.com/dev/general-lp/generallphero.png);background-repeat:no-repeat;background-size:cover}.trust-fund-lp-hero{border-bottom:none;background-image:none;background-color:transparent}.transparent-wrapper-container-desktop{background-color:rgba(210,239,255,.5);width:100%;padding-bottom:20px;position:relative;top:487px;padding:164px;margin-top:-352px}.start-your-claim-hero-container .transparent-style-content-container{background-color:transparent}}@media screen and (min-width:1000px){.start-your-claim-hero-container .page-form-wrapper-container{width:475px;bottom:371px;left:60px}.start-your-claim-hero-content-container{width:48%;padding-top:20px;padding-left:0;margin:0;margin-top:-70px;position:relative;right:68px}.start-your-claim-hero-container{padding-bottom:80px}.lp-page-form .page-form input{width:220px;box-sizing:content-box}#diagnosis,.input-container textarea{width:454px}.start-your-claim-hero-wrapper-container{padding-top:30px}.simplified-process-header-container{width:772px;padding-top:40px}.simplified-process-master-flex{display:flex;width:1000px;justify-content:space-between;margin:auto}.simplified-process-icon-flex-container{display:flex;padding-bottom:30px;width:475px;margin:auto}.simplified-process-content{width:700px}.start-your-claim-hero-container .transparent-style-content-container{top:64px}.two-line-content{top:21px}.form-notice-content{padding-top:20px;padding-bottom:60px}.trust-fund-lp-hero-content-container{width:44%;padding-top:20px;padding-left:20px;margin:0;margin-top:-49px}.start-your-claim-hero-container .trust-fund-lp-parge-form-wrapper{position:relative;bottom:388px;margin-bottom:-411px;margin-right:20px}.trust-fund-lp-wrapper{padding-top:0}}.process-steps-header{width:90%;margin:auto;margin-top:30px;margin-bottom:30px}.process-steps-header p{font-size:22px;font-family:Georgia-Bold,serif;font-weight:700;color:#545d5f;letter-spacing:0;text-align:center;line-height:30px}.process-step-container{display:flex;width:262px;position:relative;left:12px;background:#e4f4fc;border-radius:10px;height:80px;margin:auto;margin-bottom:30px;padding-right:10px}.process-step-img{position:relative;right:28px;width:21%}.process-step-content{background:#e4f4fc;border-radius:10px;height:80px;margin:auto}.process-step-content p{font-size:16px;font-weight:700;color:#545d5f;letter-spacing:0;line-height:25px;padding-top:18px}@media screen and (min-width:375px){.process-step-container{width:328px;position:relative;left:10px}.process-step-content{margin:0}.process-step-content p{font-size:18px}.step-one p,.step-two p{padding-top:28px}.process-step-img{position:relative;right:24px;width:18%}}@media screen and (min-width:760px){.process-step-container{flex-wrap:wrap;background-color:transparent;height:100%;left:0}.process-steps-header{margin-bottom:0}.process-step-img{position:relative;top:45px;right:0;width:80px;margin:auto}.process-steps-master-container{display:flex;width:745px;margin:auto}.step-one p,.step-two p{padding-top:50px}.step-three p{padding-top:45px}.process-step-content{background:#e4f4fc;border-radius:0 0 10px 10px;width:218px;height:146px;margin:auto}.process-step-content p{text-align:center;width:90%;margin:auto}}@media screen and (min-width:1000px){.process-steps-master-container{display:flex;width:1000px;margin:auto}.process-step-content{width:260px}.step-one p,.step-two p{padding-top:55px;width:60%}.step-three p{width:88%;padding-top:55px}}#lp-page-form-master-container{padding-top:25px;margin-top:-25px}.form-success-message-container{display:none}.form-success-img{width:112px;margin:auto;padding-top:30px;padding-bottom:30px}.form-success{width:90%;margin:auto;padding-bottom:60px}.form-success p{font-size:18px;color:#545d5f;letter-spacing:0;text-align:center;line-height:28px}@media screen and (min-width:700px){.form-success{width:90%;margin:auto;padding-bottom:160px}}@media screen and (min-width:1000px){.form-success{width:90%;margin:auto;padding-bottom:225px}}.asbestos-law-header-hero{background-color:#6bcaff;padding-bottom:30px;border-bottom:5px solid #b8e6ff}.asbestos-law-header-hero-content-container{width:90%;margin:auto;padding-bottom:30px}.asbestos-law-header-hero-content-container h1{font-size:22px;color:#444748;letter-spacing:0;text-align:center;line-height:30px;margin-top:-115px}.bold{font-weight:700}.truck-injury-home-hero-img-320 img{width:100%}.asbestos-law-content-container{width:90%;margin:auto}.asbestos-law-content-container h2{font-size:30px;font-weight:700;color:#444748;letter-spacing:0;line-height:36px}.asbestos-law-content-container h3{font-size:26px;color:#5b93b8;letter-spacing:0;line-height:30px;font-weight:700}.asbestos-law-content-container p{font-family:Roboto,sans-serif;font-size:18px;color:#545d5f;letter-spacing:0;line-height:28px;margin-bottom:20px}.hero-italics{padding-top:20px}.hero-bold-italics,.hero-italics{font-size:20px;font-style:italic;color:#444748;letter-spacing:0;text-align:center;line-height:30px}.hero-bold-italics{font-weight:700}.bottom-hero-header-content{padding-top:20px}.asbestos-law-home-btn{padding:13px;width:215px}.asbestos-law-home-btn,.asbestos-law-home-btn-double{font-size:18px;font-weight:700;text-decoration:none;color:#fff;letter-spacing:0;text-align:center;line-height:24px;background-color:#ef654b;border-radius:7px;margin:auto;display:flex;justify-content:center}.asbestos-law-home-btn-double{padding:10px 25px;width:205px}.asbestos-law-home-btn-double:hover,.asbestos-law-home-btn:hover{background-color:#0c5a9c;color:#fff;transition:.5s}.bottom-header .header-menu .header-menu-item:hover{color:#545d5f;transition:.5s}.asbestos-legal-claims-home-legal-claims-section-container{background-color:#effaff;padding-top:20px;padding-bottom:40px}.asbestos-law-bullet-list{padding-top:10px;width:98%;margin:auto}.asbestos-law-bullet-list li{font-size:18px;font-family:Roboto,sans-serif;font-weight:500;color:#545d5f;letter-spacing:0;line-height:28px}.asbestos-law-bullet-list li:before{content:\"\";height:.5em;width:.5em;background:#528bb1;display:block;position:absolute;transform:rotate(45deg);top:.4em;left:0}.asbestos-law-home-card-container{background:#fff;box-shadow:2px 2px 12px 0 rgba(9,8,8,.25);border-radius:0 0 10px 10px;border-top:10px solid #5b93b8;width:294px;margin:auto;padding-bottom:20px;margin-bottom:30px}.asbestos-law-home-card-content-container{padding-top:10px;padding-bottom:20px;width:90%;margin:auto}.asbestos-law-home-card-content-container p{font-size:18px;font-family:Roboto,sans-serif;color:#5f686a;letter-spacing:0;line-height:28px;font-weight:700}.quick-compensation-asbestos-trust-funds-section{padding-bottom:30px}.quick-compensation-asbestos-trust-funds-section .asbestos-law-home-btn-double{margin-top:30px;margin-bottom:20px}.quick-compensation-img-320 img{width:100%}.quick-compensation-asbestos-trust-funds-section .asbestos-law-content-container{margin-top:-98px}.immediate-access-asbestos-lawyers-section .asbestos-law-home-btn-double{margin-top:30px;margin-bottom:20px}.immediate-access-asbestos-lawyers-section{background-color:#effaff;padding-top:30px;padding-bottom:30px}.mesothelioma-case-worth-section{padding-bottom:40px}.mesothelioma-case-worth-img-320 img{width:100%}.mesothelioma-case-worth-section .asbestos-law-content-container{margin-top:-68px}.mesothelioma-case-worth-section .asbestos-law-home-btn-double{margin-top:30px;margin-bottom:20px}.asbestos-law-content-container h4{font-size:22px;font-family:Georgia-Bold,serif;font-weight:700;color:#545d5f;letter-spacing:0;line-height:30px}.asbestos-law-home-card-container .asbestos-law-bullet-list{width:90%;margin:auto;padding-top:0}.mesothelioma-settlements-victims-section{background-color:#effaff;padding-top:30px;padding-bottom:40px}.asbestos-law-home-card-container{margin-top:35px}.mesothelioma-settlements-victims-section .asbestos-law-home-btn-double{padding:10px 4px;width:268px}.mesothelioma-case-worth-img-375,.mesothelioma-case-worth-img-tablet,.quick-compensation-img-375,.quick-compensation-img-tablet,.truck-injury-home-hero-img-375{display:none}@media screen and (min-width:375px){.mesothelioma-case-worth-img-320,.quick-compensation-img-320,.truck-injury-home-hero-img-320{display:none}.mesothelioma-case-worth-img-375,.quick-compensation-img-375,.truck-injury-home-hero-img-375{display:block}.mesothelioma-case-worth-img-375 img,.quick-compensation-img-375 img,.truck-injury-home-hero-img-375 img{width:100%}.asbestos-law-home-card-container{width:349px}}@media screen and (min-width:750px){.mesothelioma-case-worth-img-375,.quick-compensation-img-375,.truck-injury-home-hero-img-375{display:none}.asbestos-law-header-hero{background-image:url(https://media-asbestoslaw-com.s3.amazonaws.com/dev/home-page/coupleherotablet.png);background-position-x:right;background-repeat:no-repeat;background-size:contain;height:335px}.asbestos-law-header-hero-content-container{margin-top:0;margin:0;padding-left:20px}.asbestos-law-header-hero-content-container h1{margin-top:0;padding-top:20px;text-align:left}.asbestos-law-tablet-flex{display:flex}.mesothelioma-case-worth-img-tablet,.quick-compensation-img-tablet{display:block}.mesothelioma-case-worth-img-tablet img,.quick-compensation-img-tablet img{width:100%}.quick-compensation-asbestos-trust-funds-section .asbestos-law-content-container{margin-top:-160px}.mesothelioma-case-worth-section .asbestos-law-content-container{margin-top:-95px}.asbestos-legal-claims-home-legal-claims-section-container .asbestos-law-content-container{width:55%;padding-left:20px;margin:0;padding-right:20px}.asbestos-legal-claims-home-legal-claims-section-container .asbestos-law-home-card-container{height:200px;margin-right:20px}.asbestos-law-content-container{width:95%;margin:0;padding-left:20px}.transparent-style-content-container{background-color:rgba(1,27,40,.5);width:65%;position:relative;top:40px;padding-bottom:20px}.asbestos-law-btn-shell-container{padding-top:10px}.asbestos-law-btn-shell-container a{width:456px;padding:13px 22px}.mesothelioma-settlements-victims-section .asbestos-law-content-container{width:55%;padding-right:20px;position:relative;top:90px}.mesothelioma-settlements-victims-section .asbestos-law-home-card-container{margin-right:20px}.bullet-tablet-flex{display:flex;justify-content:space-between}.flex-container{padding-right:20px}.asbestos-law-home-btn{padding:13px;width:272px}}@media screen and (min-width:1000px){.asbestos-law-header-hero{width:100%;max-width:1536px;margin:auto;background-image:url(https://media-asbestoslaw-com.s3.amazonaws.com/dev/home-page/coupleherodesktop.png);background-position-x:right;background-repeat:no-repeat;border-bottom:none;height:365px}.asbestos-law-header-hero-content-container h1,.hero-bold-italics,.hero-italics{font-size:26px}.shell-container{width:1000px;margin:auto}.transparent-style-content-container{width:600px;position:relative;top:60px}.asbestos-legal-claims-home-legal-claims-section-container{width:1000px;margin:auto}.asbestos-legal-claims-home-legal-claims-outer-container{background-color:#effaff;padding-top:50px;padding-bottom:50px}.mesothelioma-case-worth-img-tablet,.quick-compensation-img-tablet{display:none}.mesothelioma-case-worth-section .asbestos-law-content-container{margin-top:0}.quick-compensation-asbestos-trust-funds-section .asbestos-law-content-container{width:1000px;margin:auto;margin-top:0}.quick-compensation-asbestos-trust-funds-section{background-image:url(https://media-asbestoslaw-com.s3.amazonaws.com/dev/home-page/compensationdesktop.png);background-position-x:62px;background-repeat:no-repeat;background-size:cover;max-width:1440px;height:680px;margin:auto}.asbestos-law-content-container{padding-left:0}.asbestos-legal-claims-home-legal-claims-section-container .asbestos-law-content-container{width:55%;padding-left:0;margin:0;padding-right:20px}.asbestos-law-content-container h3{margin-top:0;width:600px}.adjusted-width{width:558px}.two-column-background-container{width:1000px;margin:auto}.two-column-background-container .asbestos-law-content-container{width:55%;margin:0;padding-top:30px;position:relative;top:40px}.two-column-background-container .asbestos-law-home-btn-double{margin-top:0;margin:0;margin-left:20px;position:relative;top:60px}.immediate-access-asbestos-lawyers-section{width:1000px;margin:auto}.immediate-access-asbestos-lawyers-outer-container{background-color:#effaff;padding-top:50px;padding-bottom:50px}.mesothelioma-case-worth-section{background-image:url(https://media-asbestoslaw-com.s3.amazonaws.com/dev/home-page/workerdesktop.png);background-position-x:right;background-repeat:no-repeat;background-size:cover;max-width:1440px;height:750px;margin:auto}.mesothelioma-settlements-victims-section{width:1000px;margin:auto}.immediate-family{width:260px}.mesothelioma-settlements-victims-outer-container{background-color:#effaff}}@media screen and (min-width:1025px){.quick-compensation-asbestos-trust-funds-section{background-position-x:82px}}@media screen and (min-width:1125px){.quick-compensation-asbestos-trust-funds-section{background-position-x:100px}}@media screen and (min-width:1225px){.mesothelioma-case-worth-section,.quick-compensation-asbestos-trust-funds-section{background-size:contain;background-position-x:right}}.truck-injury-header-hero{background-color:#162d44;padding-bottom:30px;border-bottom:5px solid #efaf40}.truck-injury-header-hero-content-container{width:90%;margin:auto;padding-bottom:30px}.truck-injury-header-hero-content-container h1{font-size:22px;color:#fff;letter-spacing:0;text-align:center;line-height:30px;margin-top:-115px}.truck-injury-hero-italics{font-size:20px;font-style:italic;letter-spacing:0;text-align:center;line-height:30px;padding-top:20px}.truck-injury-home-btn{font-size:18px;font-weight:700;text-decoration:none;color:#25262e;letter-spacing:0;text-align:center;line-height:24px;background-color:#e6b523;border-radius:7px;padding:13px;width:245px;margin:auto;display:flex;justify-content:center}.truck-injury-home-btn:hover{background-color:#165ea5;color:#fff;transition:.5s}.diamond-indicator{transform:rotate(-315deg);background:#a1a5a6;width:10px;height:10px;margin:auto;margin-top:10px;margin-bottom:20px}.active{background:#e6b523!important}.truck-injury-mobile-carousel-container{background:#fff;box-shadow:2px 2px 12px 0 rgba(9,8,8,.25);padding-top:15px;padding-bottom:10px}.truck-injury-carousel-box{width:294px;margin:auto;border:1px solid #b4bbbd;border-radius:10px;margin-top:20px;margin-bottom:20px}.carousel-content-top{display:flex;width:90%;margin:auto;border-bottom:1px solid #b4bbbd;padding-top:10px}.case-content{width:50%;border-right:1px solid #b4bbbd}.case-content p{font-family:Roboto,sans-serif;font-size:18px;color:#545d5f;letter-spacing:0;line-height:28px;position:relative;right:5px;text-align:center}.case-amount{width:48%;padding-left:10px}.case-amount p{font-family:Roboto,sans-serif;font-size:26px;font-weight:700;color:#165ea5;letter-spacing:0;line-height:30px;position:relative;bottom:3px}.carousel-content-bottom{padding-top:10px;padding-bottom:10px}.carousel-content-bottom p{width:70%;margin:auto;font-family:Roboto,sans-serif;font-size:22px;font-weight:700;color:#545d5f;letter-spacing:0;text-align:center;line-height:28px}.slide-indicator-container{display:flex;width:250px;margin:auto}.truck-injury-content-container{width:90%;margin:auto}.truck-injury-content-container h2{font-size:30px;font-weight:700;color:#444748;letter-spacing:0;line-height:36px}.truck-injury-content-container h3{font-size:26px;color:#165ea5;letter-spacing:0;line-height:30px;font-weight:700}.truck-injury-content-container p{font-family:Roboto,sans-serif;font-size:18px;color:#545d5f;letter-spacing:0;line-height:28px;margin-bottom:20px}.truck-injury-bullet-list{padding-top:10px;width:98%;margin:auto}.truck-injury-bullet-list li{font-size:18px;font-family:Roboto,sans-serif;font-weight:500;color:#545d5f;letter-spacing:0;line-height:28px}.truck-injury-bullet-list li:before{content:\"\";height:.5em;width:.5em;background:#165ea5;display:block;position:absolute;transform:rotate(45deg);top:.5em;left:0}.truck-injury-home-card-container{background:#fff;box-shadow:2px 2px 12px 0 rgba(9,8,8,.25);border-radius:0 0 10px 10px;border-top:10px solid #0f3c68;width:294px;margin:auto;padding-bottom:20px;margin-top:40px;margin-bottom:30px}.truck-injury-home-card-content-container{padding-top:10px;padding-bottom:20px;width:90%;margin:auto}.truck-injury-home-card-content-container p{font-size:18px;font-family:Roboto,sans-serif;color:#5f686a;letter-spacing:0;line-height:28px;font-weight:700}.truck-injury-home-btn-double{font-size:18px;font-weight:700;text-decoration:none;color:#25262e;letter-spacing:0;text-align:center;line-height:24px;background-color:#e6b523;border-radius:7px;padding:10px 25px;width:215px;margin:auto;display:flex;justify-content:center}.truck-injury-home-btn-double:hover{background-color:#165ea5;color:#fff;transition:.5s}.bold-numbers-list-master-container{padding-bottom:20px}.bold-numbers-list-container{display:flex;width:250px;margin:auto;padding-bottom:20px}.bold-number{padding-right:10px}.bold-number p{font-family:Georgia-Bold,serif;font-size:52px;color:#165ea5;letter-spacing:0;line-height:28px;font-weight:700}.bold-number-yellow{padding-right:20px}.bold-number-yellow p{font-family:Georgia-Bold,serif;font-size:52px;color:#efaf40;letter-spacing:0;line-height:28px;font-weight:700}.bold-number-content p{font-size:18px;color:#545d5f;letter-spacing:0;line-height:28px}.content-one{position:relative;left:5px;padding-bottom:20px}.content-three{position:relative;top:7px}.why-hire-accident-lawyer-section{background:#eef3f6;padding-top:20px;padding-bottom:30px;box-shadow:2px 2px 12px 0 rgba(9,8,8,.25)}.learn-the-accident-cause-section{padding-bottom:100px}.learn-the-accident-cause-section .truck-injury-content-container{margin-top:-80px}.truck-injury-btn-shell-container{padding-top:10px}.truck-injury-btn-shell-container a{width:456px;padding:13px 22px}.truck-accident-img-320 img,.truck-recoveries-img-320 img{width:100%}.truck-accident-img-375,.truck-recoveries-img-375{display:none}.truck-dangers-section{background:#eef3f6;padding-bottom:40px}.warning-icon{width:103px;margin:auto;position:relative;bottom:50px}.warning-icon img{width:103px}.truck-dangers-section .truck-injury-content-container{margin-top:-60px}.steps-to-accident-compensation-section{padding-top:40px;padding-bottom:60px}.truck-injury-yellow-card-container{background:#fbecd3;width:294px;margin:auto;margin-bottom:20px;border-top:10px solid #efaf40}.truck-injury-yellow-card-header{padding-top:10px;padding-bottom:20px}.truck-injury-yellow-card-header p{font-family:Open Sans,sans-serif;font-size:22px;color:#545d5f;letter-spacing:0;text-align:center;line-height:30px}.content-one-yellow{position:relative;left:5px}.types-of-recoveries-from-accidents-section{background:#eef3f6;padding-bottom:60px}.types-of-recoveries-from-accidents-section .truck-injury-content-container{margin-top:-60px}.tablet-desktop,.truck-accident-img-tablet,.truck-injury-tablet-carousel-container,.truck-recoveries-img-tablet{display:none}.clickable-diamond{cursor:pointer}.jb-hunt{font-size:18px!important;width:100%!important}.truck-injury-desktop-carousel-container{display:none}@media screen and (min-width:375px){.truck-accident-img-320,.truck-recoveries-img-320{display:none}.truck-accident-img-375,.truck-recoveries-img-375{display:block}.truck-accident-img-375 img,.truck-recoveries-img-375 img{width:100%}.truck-injury-home-card-container{width:349px;margin:auto;padding-bottom:20px;margin-top:40px;margin-bottom:30px}.truck-injury-yellow-card-container{width:349px;margin:auto;margin-bottom:20px}.bold-numbers-list-container{display:flex;width:280px;margin:auto;padding-bottom:20px}.content-two{padding-bottom:20px;position:relative;top:3px}.truck-injury-yellow-card-header{width:90%;margin:auto}}@media screen and (min-width:750px){.truck-accident-img-375,.truck-injury-home-hero-img-375,.truck-recoveries-img-375{display:none}.tablet-list-flex{display:flex}.tablet-list-flex li{width:252px;padding-right:20px}.corrected-line{position:relative;top:28px}.truck-injury-header-hero{background-image:url(https://media-truck-injury-site.s3.amazonaws.com/dev/homepage/truckhomepageherotablet.png);background-position-x:right;background-repeat:no-repeat;background-size:contain;height:335px}.truck-injury-header-hero-content-container{margin-top:0;margin:0;padding-left:20px}.truck-injury-header-hero-content-container h1{margin-top:0;padding-top:20px;text-align:left}.truck-injury-mobile-carousel-container{display:none}.truck-injury-tablet-carousel-container{display:block;background:#fff;box-shadow:2px 2px 12px 0 rgba(9,8,8,.25)}.tablet-slideshow{display:flex;width:750px}.truck-injury-tablet-carousel-feature{display:flex;width:700px;margin:auto}.truck-injury-tablet-carousel-feature .diamond-indicator{position:relative;top:48px;background:#e6b523}.why-hire-accident-lawyer-flex-container{display:flex}.why-hire-accident-lawyer-section .truck-injury-content-container{width:45%;padding-top:20px}.truck-injury-home-card-container{height:435px}.truck-accident-img-tablet,.truck-recoveries-img-tablet{display:block}.truck-accident-img-tablet img,.truck-recoveries-img-tablet img{width:100%}.learn-the-accident-cause-section .truck-injury-content-container,.types-of-recoveries-from-accidents-section .truck-injury-content-container{margin-top:-180px}.truck-injuiry-btn-shell-container .truck-injury-home-btn-double{width:415px}.steps-to-accident-compensation-flex{display:flex}.mobile-only{display:none}.tablet-desktop{display:block}.steps-to-accident-compensation-section .truck-injury-content-container{width:45%}.truck-injuiry-btn-shell-container{padding-top:20px}.truck-injury-carousel-prev-btn{background-image:url(https://media-truck-injury-site.s3.amazonaws.com/dev/homepage/prevarrowupdated.png);background-repeat:no-repeat;width:20px;height:40px;position:relative;right:10px;top:45px;cursor:pointer}.truck-injury-carousel-prev-btn:hover{background-image:url(https://media-truck-injury-site.s3.amazonaws.com/dev/homepage/prevarrow_hoverupdated.png);transition:.5s}.truck-injury-carousel-next-btn{background-image:url(https://media-truck-injury-site.s3.amazonaws.com/dev/homepage/nextarrowupdated.png);background-repeat:no-repeat;width:20px;height:40px;position:relative;left:10px;top:45px;cursor:pointer}.truck-injury-carousel-next-btn:hover{background-image:url(https://media-truck-injury-site.s3.amazonaws.com/dev/homepage/nextarrow_hoverupdated.png);transition:.5s}}@media screen and (min-width:1000px){.truck-injury-tablet-carousel-container{display:none}.truck-injury-hero-outer-container{background-color:#162d44}.truck-injury-header-hero{width:100%;max-width:1536px;margin:auto;background-image:url(https://media-truck-injury-site.s3.amazonaws.com/dev/homepage/truckhomepageherodesktop.png);background-position-x:right;background-repeat:no-repeat;border-bottom:none}.truck-injury-desktop-carousel-container{display:block;background:#fff;box-shadow:2px 2px 12px 0 rgba(9,8,8,.25);padding-top:20px;padding-bottom:20px}.truck-injury-desktop-carousel-feature{display:flex;width:1000px;margin:auto}.truck-injury-desktop-carousel-feature .diamond-indicator{position:relative;top:48px;background:#e6b523}.why-hire-accident-lawyer-flex-container{width:1000px;margin:auto}.why-hire-accident-lawyer-section .truck-injury-content-container{width:58%;padding-top:20px}.truck-accident-img-tablet,.truck-recoveries-img-tablet{display:none}.learn-the-accident-cause-section .truck-injury-content-container,.types-of-recoveries-from-accidents-section .truck-injury-content-container{margin-top:0}.learn-the-accident-cause-outer-container{background-image:url(https://media-truck-injury-site.s3.amazonaws.com/dev/homepage/truckaccidentdesktop.png);background-repeat:no-repeat;background-size:cover;max-width:1440px;margin:auto;padding-top:20px}.learn-the-accident-cause-desktop-container,.types-of-recoveries-from-accidents-desktop-container{width:1000px;margin:auto}.learn-the-accident-cause-section,.types-of-recoveries-from-accidents-section{width:70%}.truck-dangers-outer-container{background:#eef3f6}.steps-to-accident-compensation-flex,.truck-dangers-section{width:1000px;margin:auto}.types-of-recoveries-from-accidents-outer-container{background-image:url(https://media-truck-injury-site.s3.amazonaws.com/dev/homepage/accidentrecoverydesktop.png);background-repeat:no-repeat;background-size:cover;max-width:1440px;margin:auto;padding-top:20px}.grey-desktop-background{background-color:#eef3f6}.types-of-recoveries-from-accidents-section{background:none}.desktop-list-flex{display:flex}.desktop-list-flex li{width:260px}}.slideshow-container{max-width:1000px;position:relative;margin:auto}.mySlides,.mySlidesTablet{display:none}.fade{-webkit-animation-name:a;-webkit-animation-duration:1.5s;animation-name:a;animation-duration:1.5s}@keyframes a{0%{opacity:.4}to{opacity:1}}.dangerous-18-wheelers-hero-img-375{display:none}.dangerous-18-wheelers-hero-container{background-image:url(https://media-truck-injury-site.s3.amazonaws.com/dev/truck-injury-dangerous-page/truckhero320.png);background-repeat:no-repeat}.dangerous-18-wheelers-hero-wrapper-container{background:#162d44;border-bottom:5px solid #efaf40}.dangerous-18-wheelers-hero-content-container{width:90%;margin:auto}.dangerous-18-wheelers-hero-content-container h1{font-size:34px;color:#fff;letter-spacing:0;line-height:38px;padding-top:20px;font-weight:700}.dangerous-18-wheelers-hero-content-container p{font-size:20px;font-style:italic;color:#fff;letter-spacing:0;line-height:30px;padding-top:80px;padding-bottom:30px}.dangerous-18-wheelers-hero-container .truck-injury-home-btn{margin-bottom:30px}.common-injuries-from-18-wheelers-section{padding-top:30px;padding-bottom:40px;background:#eef3f6}.fatality-crash-statistics-section .truck-injury-content-container h3{margin-top:-100px}.fatality-crash-statistics-section{padding-bottom:20px}.info-graph-mobile-320{width:100%;margin:auto;padding-bottom:20px}.info-graph-mobile-320 img{width:100%;margin:auto}.federal-laws-for-18-wheelers-section{background:#eef3f6;padding-top:20px;padding-bottom:40px}.federal-laws-for-18-wheelers-section .truck-injuiry-btn-shell-container .truck-injury-home-btn-double{width:196px}.federal-laws-for-18-wheelers-section .truck-injuiry-btn-shell-container{padding-top:20px}.common-injuries-from-18-wheelers-section .truck-injury-content-container .desktop-list-flex,.dangerous-18-wheelers-tablet-header,.fatality-crash-desktop-content,.info-graph-mobile-375,.info-graph-mobile-desktop,.info-graph-mobile-tablet{display:none}.fatality-crash-mobile-content{display:block}.tablet-only-header{display:none}.federal-laws-for-18-wheelers-outer-container .truck-injury-content-container h3{width:250px}@media screen and (min-width:321px){.dangerous-18-wheelers-hero-container{background-image:url(https://media-truck-injury-site.s3.amazonaws.com/dev/truck-injury-dangerous-page/truckhero375.png);background-repeat:no-repeat}}@media screen and (min-width:375px){.info-graph-mobile-320{display:none}.info-graph-mobile-375{display:block;padding-bottom:20px}.info-graph-mobile-375,.info-graph-mobile-375 img{width:375px;margin:auto}}@media screen and (min-width:376px){.dangerous-18-wheelers-hero-container{background-size:cover;padding-bottom:30px}}@media screen and (min-width:425px){.mobile-only-header{display:none}.tablet-only-header{display:block}}@media screen and (min-width:450px){.federal-laws-for-18-wheelers-outer-container .truck-injury-content-container h3{width:100%}}@media screen and (min-width:700px){.dangerous-18-wheelers-hero-container{background-image:url(https://media-truck-injury-site.s3.amazonaws.com/dev/truck-injury-dangerous-page/truckherotablet.png);background-repeat:no-repeat;background-position-y:-100px}.dangerous-18-wheelers-hero-content-container h1{padding-top:40px}}@media screen and (min-width:750px){.dangerous-18-wheelers-hero-container{background-image:url(https://media-truck-injury-site.s3.amazonaws.com/dev/truck-injury-dangerous-page/truckherotablet.png);background-repeat:no-repeat;background-position:100%;background-size:auto auto;background-size:initial;height:395px}.fatality-crash-desktop-content{display:block;padding-bottom:30px}.fatality-crash-mobile-content{display:none}.dangerous-18-wheelers-hero-content-container p{font-size:20px;font-style:italic;color:#fff;letter-spacing:0;line-height:30px;padding-top:20px;padding-bottom:30px}.dangerous-18-wheelers-hero-content-container h1{display:none}.dangerous-18-wheelers-hero-container .transparent-style-content-container{height:255px;top:20px}.dangerous-18-wheelers-tablet-header{display:block;padding-top:30px}.dangerous-18-wheelers-tablet-header h1{font-size:34px;color:#fff;letter-spacing:0;line-height:38px;padding-left:20px;font-weight:700;width:425px}.fatality-crash-statistics-section .truck-injury-content-container h3{margin-top:-300px}.info-graph-mobile-375{display:none}.info-graph-mobile-tablet{display:block;width:750px;margin:auto;padding-bottom:20px}.info-graph-mobile-tablet img{width:750px;margin:auto}.federal-laws-for-18-wheelers-section .truck-injuiry-btn-shell-container .truck-injury-home-btn-double{width:380px}.left-federal-law-list{padding-right:30px}.federal-laws-for-18-wheelers-section .tablet-list-flex li{width:305px}.common-injuries-left-list{padding-right:40px}}@media screen and (min-width:868px){.dangerous-18-wheelers-hero-container .transparent-style-content-container{height:230px;top:20px}}@media screen and (min-width:1000px){.fatality-crash-statistics-section .truck-injury-content-container h3{margin-top:0}.fatality-crash-statistics-section{width:100%}.common-injuries-from-18-wheelers-section .truck-injury-content-container .tablet-list-flex{display:none}.common-injuries-from-18-wheelers-section .truck-injury-content-container .desktop-list-flex{display:flex}.common-injuries-from-18-wheelers-outer-container,.federal-laws-for-18-wheelers-outer-container{background:#eef3f6}.common-injuries-from-18-wheelers-section,.federal-laws-for-18-wheelers-section{width:1000px;margin:auto}.fatality-crash-statistics-inner-desktop-container{background-image:url(https://media-truck-injury-site.s3.amazonaws.com/dev/truck-injury-dangerous-page/crashdesktop.png);background-repeat:no-repeat;background-position:100%;max-width:1440px;margin:auto;padding-top:20px}.fatality-crash-statistics-inner-desktop-container .fatality-crash-statistics-inner-content-container-desktop{width:1000px;margin:auto;padding-top:20px;margin-bottom:40px}.fatality-crash-statistics-inner-desktop-container .fatality-crash-statistics-inner-content-container-desktop .truck-injury-content-container p{width:80%}.info-graph-mobile-tablet{display:none}.info-graph-mobile-desktop{display:block;width:1000px;margin:auto;padding-bottom:40px}.info-graph-mobile-desktop img{width:1000px;margin:auto}.dangerous-18-wheelers-tablet-header h1{padding-left:0;padding-top:30px;width:700px}.dangerous-18-wheelers-hero-container .transparent-style-content-container{height:230px;top:20px}.dangerous-18-wheelers-hero-container{width:100%;max-width:1536px;margin:auto;background-image:url(https://media-truck-injury-site.s3.amazonaws.com/dev/truck-injury-dangerous-page/truckherodesktop.png);background-position-x:right;background-repeat:no-repeat;height:375px}}.what-caused-your-accident-hero-container{background:#162d44;border-bottom:5px solid #efaf40}.what-caused-your-accident-hero-img-320 img{width:100%}.black-box-info-tablet,.what-caused-your-accident-hero-img-375{display:none}.what-caused-your-accident-hero-content-container{width:90%;margin:auto}.what-caused-your-accident-hero-content-container h1{font-size:30px;color:#fff;letter-spacing:0;line-height:36px;font-weight:700;padding-bottom:20px}.what-caused-your-accident-hero-content-container p{font-size:18px;color:#eef3f6;letter-spacing:0;line-height:28px;padding-bottom:30px}.what-caused-your-accident-hero-container .truck-injury-home-btn{width:260px;margin-bottom:30px}.what-caused-your-accident-page .truck-injury-content-container h2{font-size:26px;color:#165ea5;letter-spacing:0;line-height:30px;font-weight:700}.black-box-crash-section-container{padding-bottom:30px}.black-box-crash-section-container .truck-injury-content-container h2{padding-top:30px}.black-box-info-mobile-320{padding-bottom:20px}.black-box-info-mobile-320 img{width:100%}.who-is-responsible-section-container{padding-bottom:30px}.who-is-responsible-section-container .truck-injury-content-container h2{margin-top:-80px}.truck-companies-img-320 img{width:100%}.black-box-info-desktop,.truck-companies-img-375,.truck-companies-img-tablet{display:none}.reasons-for-an-accident-section-container{background:#eef3f6;padding-top:30px;padding-bottom:30px}.reasons-for-an-accident-card-icon{width:85px;margin:auto}.reasons-for-an-accident-card-icon img{width:85px}.reasons-for-an-accident-card-blue-box{width:268px;margin:auto;background:#1d2a3c;border-radius:10px;padding-top:55px;padding-bottom:20px;margin-top:-55px;margin-bottom:30px}.reasons-for-an-accident-card-blue-box p{font-size:18px;color:#fff;letter-spacing:0;text-align:center;line-height:28px;width:80%;margin:auto}.black-box-info-mobile-375,.reasons-for-an-accident-mobile-desktop-version{display:none}#page-form-outer-container .truck-injury-content-container p{padding-top:20px}@media screen and (min-width:375px){.truck-companies-img-320,.what-caused-your-accident-hero-img-320{display:none}.truck-companies-img-375,.what-caused-your-accident-hero-img-375{display:block}.truck-companies-img-375 img,.what-caused-your-accident-hero-img-375 img{width:100%}.black-box-info-mobile-320{display:none}.black-box-info-mobile-375{display:block;width:375px;margin:auto;padding-bottom:20px}.black-box-info-mobile-375 img{width:375px;margin:auto}.who-is-responsible-section-container .truck-injury-content-container h2{margin-top:-100px}}@media screen and (min-width:750px){.what-caused-your-accident-hero-img-375{display:none}.what-caused-your-accident-hero-container{background-image:url(https://media-truck-injury-site.s3.amazonaws.com/dev/truck-accident-causes/truckinjurycausesherotablet.png);background-position-x:right;background-repeat:no-repeat;height:425px}.what-caused-your-accident-hero-content-container h1{padding-top:20px}.what-caused-your-accident-hero-container .transparent-style-content-container{padding-bottom:2px}.black-box-info-mobile-375{display:none}.black-box-info-tablet{display:block;padding-top:30px;padding-bottom:30px}.black-box-info-tablet img{width:100%}.truck-companies-img-375{display:none}.truck-companies-img-tablet{display:block}.truck-companies-img-tablet img{width:100%}.who-is-responsible-section-container .truck-injury-content-container h2{margin-top:-145px}.reasons-for-an-accident-flex-container{display:flex;width:100%;margin:auto}.reasons-for-an-accident-master-card-container{padding-right:30px;width:48%}.reasons-for-an-accident-section-container .page-form-wrapper-container{height:730px;margin-right:30px}.tablet-form-content{display:block;padding-top:30px;padding-bottom:30px}#left,.tablet-form-content{background:#eef3f6;float:left}#left{width:100%;height:1700px}#right.stick{position:fixed;width:349px;top:0;right:30px;margin:60px 0 0;margin-left:88%}#right,#right.stick{float:right;background:#eef3f6}#right{width:50%;height:200px;position:relative;right:auto}.reasons-for-an-accident-mobile-tablet-version{width:385px}}@media screen and (min-width:769px){.black-box-info-tablet{width:768px;margin:auto}.black-box-info-tablet img{width:768px}}@media screen and (min-width:1000px){.what-caused-your-accident-hero-container{background-image:url(https://media-truck-injury-site.s3.amazonaws.com/dev/truck-accident-causes/truckinjurycausesherodesktop.png);background-position-x:right;background-repeat:no-repeat;max-width:1440px;height:415px;margin:auto;border-bottom:none}#left,#right.stick{display:none}.what-caused-your-accident-hero-container .transparent-style-content-container{top:45px}.what-caused-your-accident-hero-wrapper-container{background:#162d44;border-bottom:5px solid #efaf40}.black-box-crash-section-container{width:1000px;margin:auto}.black-box-crash-section-container .truck-injury-content-container{width:100%}.black-box-info-tablet{display:none}.black-box-info-desktop{display:block;width:1000px;margin:auto;padding-top:30px;padding-bottom:30px}.black-box-info-desktop img{width:1000px}.truck-companies-img-tablet{display:none}.who-is-responsible-section-container .truck-injury-content-container h2{margin-top:0}.who-is-responsible-section-container{width:1000px;margin:auto}.who-is-responsible-section-container .truck-injury-content-container{width:68%;margin:0;position:relative;top:60px}.who-is-responsible-wrapper-container{background-image:url(https://media-truck-injury-site.s3.amazonaws.com/dev/truck-accident-causes/truckcompaniesdesktop.png);background-repeat:no-repeat;background-position-x:right;max-width:1440px;margin:auto;height:886px}.reasons-for-an-accident-flex-container{width:1000px;margin:auto}.reasons-for-an-accident-section-container .truck-injury-content-container{width:100%;margin:0}.reasons-for-an-accident-master-card-container{padding-right:30px;width:64%}.reasons-for-an-accident-mobile-tablet-version{display:none}.reasons-for-an-accident-mobile-desktop-version{display:block}.reason-flex{display:flex}.left-reason{margin-right:40px}.reasons-for-an-accident-section-container .page-form-wrapper-container{margin-right:0}#page-form-outer-container .truck-injury-content-container{width:90%;margin:auto}.reasons-for-an-accident-section-container{display:block}}.begin-claim-btn,.begin-claim-btn-content{display:none}@media screen and (min-width:1125px){.begin-claim-btn{display:block;background:#165ea5;border-radius:7px;width:183px;padding-top:5px;padding-bottom:5px;position:relative;bottom:2px}.begin-claim-btn-content{display:block;width:188px;font-size:18px;color:#fff;letter-spacing:0;text-align:center;line-height:28px;font-weight:700}.begin-claim-btn:hover{background:#e6b523;transition:.5s}.begin-claim-btn:hover .begin-claim-btn-content{color:#25262e;transition:.5s}}.start-your-claim-hero-container .page-form-header-container{background:#165ea5}.start-your-claim-hero-container{background-color:#162d44;padding-bottom:40px;border-bottom:5px solid #efaf40}.start-your-claim-hero-content-container h1,.start-your-claim-hero-content-container p{color:#fff}.simplified-process-header-container p{font-family:Georgia-Bold,serif;font-size:22px;font-weight:700;color:#545d5f;letter-spacing:0;text-align:center;line-height:30px}.return-to-form-btn{background-color:#e6b523;color:#25262e}.hover-image{display:none}.return-to-form-btn:hover .arrow-up-img-left .hover-image,.return-to-form-btn:hover .arrow-up-img-right .hover-image{display:block;position:relative;top:5px;transition:.5}.return-to-form-btn:hover .arrow-up-img-left .normal-image,.return-to-form-btn:hover .arrow-up-img-right .normal-image{display:none}.lp-page-form .page-form .form-submit:hover{background:#165ea5}.prove-your-case-section-container{background:#eef3f6}@media screen and (min-width:375px){.single-line-content{position:relative;top:10px}}@media screen and (min-width:700px){.start-your-claim-hero-container .transparent-style-content-container{background-color:rgba(22,45,68,.5);width:100%;position:relative;top:40px;padding-bottom:20px}.start-your-claim-hero-container .page-form-wrapper-container{position:relative;bottom:392px;margin-bottom:-400px;margin-right:20px}}@media screen and (min-width:860px){.transparent-wrapper-container-desktop{background-color:rgba(22,45,68,.5);width:100%;padding-bottom:20px;position:relative;top:487px;padding:164px;margin-top:-352px}.start-your-claim-hero-wrapper-container{background-color:#162d44;border-bottom:5px solid #efaf40}.start-your-claim-hero-container{border-bottom:none}}@media screen and (min-width:1000px){.start-your-claim-hero-container .page-form-wrapper-container{width:475px;bottom:396px;left:60px}.lp-page-form .page-form .form-submit{height:30px}.single-line-content{position:relative;top:20px}}.prove-your-case-section-container{padding-top:20px;padding-bottom:30px}.contact-a-lawyer-section-container{padding-bottom:30px}.contact-a-lawyer-section-container .truck-injury-content-container h2{margin-top:-60px}.excellent-accident-lawyer-section-container{background:#eef3f6;padding-top:20px;padding-bottom:30px}.excellent-accident-lawyer-section-container .page-form .form-submit{height:26px}@media screen and (min-width:750px){#steps-to-compensation-page .what-caused-your-accident-hero-container{background-image:url(https://media-truck-injury-site.s3.amazonaws.com/dev/steps-to-compensation/stepstocompensationtablet.png)}.excellent-accident-lawyer-flex-container{display:flex}.excellent-accident-lawyer-flex-container .truck-injury-content-container{width:50%;margin:auto}.excellent-accident-lawyer-flex-container .page-form-wrapper-container{height:560px}.contact-a-lawyer-section-container .truck-injury-content-container h2{margin-top:-100px}}@media screen and (min-width:1000px){#steps-to-compensation-page .what-caused-your-accident-hero-container{background-image:url(https://media-truck-injury-site.s3.amazonaws.com/dev/steps-to-compensation/stepstocompensationdesktop.png);height:390px}.contact-a-lawyer-section-container .truck-injury-content-container h2{margin-top:0}.prove-your-case-wrapper-container{background:#eef3f6;padding-top:20px;padding-bottom:20px}.prove-your-case-section-container{width:1000px;margin:auto}.contact-a-lawyer-inner-container{padding-top:66px;width:900px;margin:auto}.excellent-accident-lawyer-flex-container{width:1000px;margin:auto}.contact-a-lawyer-section-container .background-container{background-image:url(https://media-truck-injury-site.s3.amazonaws.com/dev/steps-to-compensation/accidentcalldesktop.png);background-repeat:no-repeat;background-position-x:right;max-width:1440px;margin:auto;height:445px}.contact-a-lawyer-inner-container .truck-injury-content-container{width:54%;margin:0;position:relative;bottom:20px}.excellent-accident-lawyer-section-container{background:#eef3f6;padding-top:40px;padding-bottom:40px}}@media screen and (min-width:1245px){.contact-a-lawyer-inner-container .truck-injury-content-container{width:68%;margin:0;bottom:0}}.mobile-begin-claim-btn{background:#e6b523;border-radius:7px;width:125px;padding-top:5px;padding-bottom:5px;position:relative;top:30px}.mobile-begin-claim-btn p{color:#25262e;font-weight:700;line-height:24px}.mobile-begin-claim-btn:hover{background:#165ea5;transition:.5s}.mobile-begin-claim-btn:hover p{color:#fff}@media screen and (min-width:1000px){.mobile-begin-claim-btn{display:none!important}}.header-logo-img{width:150px;position:relative;bottom:10px}.mobile-menu-logo-img{position:relative;right:5px}@media screen and (min-width:700px){.header-logo-img{width:192px}}@media screen and (min-width:1000px){.header-logo-img{width:220px;bottom:13px}}.footer-logo-img{width:195px}@media screen and (min-width:700px){.footer-logo-img{width:220px}}@media screen and (min-width:1000px){.footer-logo-img{width:220px;padding-bottom:20px}}", "",{"version":3,"sources":["webpack://styles/app.css"],"names":[],"mappings":"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","sourcesContent":[".asbestos-trust-funds-hero-container{background-color:#6bcaff;padding-bottom:30px;border-bottom:5px solid #b8e6ff}.asbestos-trust-funds-hero-img-320 img{width:100%}.asbestos-trust-funds-hero-content-container{width:90%;margin:auto;margin-top:-70px}.asbestos-trust-funds-hero-content-container h1{font-size:30px;color:#444748;letter-spacing:0;line-height:36px}.asbestos-trust-funds-hero-content-container p{font-size:18px;font-family:Roboto,sans-serif;color:#545d5f;letter-spacing:0;line-height:28px;padding-top:40px}.hero-italics-trust-funds{font-style:italic;font-weight:300;font-size:26px;color:#545d5f;letter-spacing:0;line-height:26px}.asbestos-trust-funds-hero-container .asbestos-law-home-btn{margin-top:30px}.qualifying-for-trust-funds-section-container{background:#effaff;padding-top:40px;padding-bottom:80px}.page-form-wrapper-container{background:#fff;box-shadow:2px 2px 12px 0 rgba(9,8,8,.25);border-radius:0 0 10px 10px;width:294px;margin:auto;margin-top:50px;margin-bottom:40px}.page-form-header-container{background:#162d44;padding-top:15px;padding-bottom:15px}.page-form-header-container p{font-size:20px;font-weight:700;width:85%;margin:auto;font-family:Roboto,sans-serif;color:#fff;letter-spacing:0;text-align:center;line-height:28px}.page-form{padding-top:10px}.page-form label{font-size:18px;font-weight:700;color:#545d5f;letter-spacing:0}.page-form input{background:#f9fafb;border:1px solid #dadee0;border-radius:3px;width:100%;height:32px;padding:0}.page-form .form-submit{background:#e6b523;border-radius:7px;width:100%;height:50px;font-weight:700;font-family:Roboto,sans-serif;margin-top:20px;margin-bottom:20px;cursor:pointer;outline:none;padding-top:6px;padding-bottom:10px}.page-form .form-submit,.page-form .form-submit p{font-size:18px;color:#444748;letter-spacing:0;text-align:center;line-height:28px}.page-form .form-submit p{width:80%;margin:auto}.page-form .form-submit:hover{background-color:#162d44;color:#fff;transition:.5s}.page-form .form-submit:hover p{color:#fff}.flex-input{width:90%;margin:auto;padding-bottom:10px}.flex-input-lp{width:95%}.form-submit-container{width:268px;margin:auto}.privacy-policy-container{padding-bottom:20px}.privacy-policy-container p{font-size:16px;font-style:italic;color:#545d5f;letter-spacing:0;text-align:center;line-height:26px;width:90%;margin:auto}.process-for-filing-trust-fund-section-container .asbestos-law-content-container h2,.qualifying-for-trust-funds-section-container .asbestos-law-content-container h2,.top-asbestos-trusts-section-container .asbestos-law-content-container h2{font-size:26px;color:#5b93b8;letter-spacing:0;line-height:30px}.top-asbestos-trusts-section-container{padding-bottom:90px}.top-asbestos-trusts-icon-img{width:103px;margin:auto;margin-top:-50px}.top-asbestos-trusts-icon-img img{width:103px}.asbestos-trust-funds-chart-container{width:294px;margin:auto;margin-top:30px;margin-bottom:30px}.asbestos-trust-funds-chart-header{background:#f29674}.asbestos-trust-funds-chart-header-block{padding-top:20px;padding-bottom:20px;width:50%}.asbestos-trust-funds-chart-header-block p{font-size:20px;font-family:Roboto,sans-serif;font-weight:700;color:#fff;letter-spacing:0;padding-left:5px;width:90%;margin:auto}.asbestos-trust-funds-chart-block{padding-top:20px;padding-bottom:20px;width:50%}.asbestos-trust-funds-chart-block p{font-family:Roboto,sans-serif;font-size:18px;color:#545d5f;letter-spacing:0;line-height:28px;padding-left:5px;width:90%;margin:auto}.asbestos-trust-funds-chart-header{display:-ms-flexbox;display:flex}.left-block{border-right:1px solid #fff}.asbestos-trust-funds-chart-section-dark{background:#e2b08b;display:-ms-flexbox;display:flex}.asbestos-trust-funds-chart-section-light{background:#f5dfc7;display:-ms-flexbox;display:flex}.last-block{border-radius:0 0 10px 10px}.process-for-filing-trust-fund-icon-img{width:103px;margin:auto;position:relative;bottom:50px}.process-for-filing-trust-fund-icon-img img{width:103px}.process-for-filing-trust-fund-section-container{background:#effaff;padding-bottom:30px}.process-for-filing-trust-fund-section-container .asbestos-law-content-container{position:relative;bottom:50px}.asbestos-trust-funds-hero-img-375,.tablet-desktop-only{display:none}@media screen and (min-width:375px){.page-form-wrapper-container{width:349px}.page-form-header-container p{width:92%}.asbestos-trust-funds-chart-container{width:349px}.left-block{border-right:1px solid #fff;width:67%}.asbestos-trust-funds-hero-img-320{display:none}.asbestos-trust-funds-hero-img-375{display:block}.asbestos-trust-funds-hero-img-375 img{width:100%}}@media screen and (min-width:750px){.asbestos-trust-funds-hero-container{background-image:url(https://media-asbestoslaw-com.s3.amazonaws.com/dev/trust-funds-page/trustfundherotablet.png);background-position-x:right;background-repeat:no-repeat;background-size:contain;height:445px}.asbestos-trust-funds-hero-img-375{display:none}.asbestos-trust-funds-hero-content-container{width:92%;margin:auto;padding-top:20px;margin-top:0}.qualifying-for-trust-funds-flex-container{display:-ms-flexbox;display:flex;-ms-flex-flow:row-reverse;flex-flow:row-reverse}.qualifying-for-trust-funds-section-container .asbestos-law-content-container{width:48%;margin:0;padding-left:20px;padding-right:20px}.asbestos-trust-funds-chart-container{width:630px}.mobile-only{display:none}.tablet-desktop-only{display:-ms-flexbox;display:flex}}@media screen and (min-width:1000px){.asbestos-trust-funds-hero-wrapper-container{background-color:#6bcaff;border-bottom:5px solid #b8e6ff}.asbestos-trust-funds-hero-container{background-image:url(https://media-asbestoslaw-com.s3.amazonaws.com/dev/trust-funds-page/trustfundherodesktopupdated.png);background-position-x:right;background-repeat:no-repeat;background-size:contain;max-width:1440px;height:400px;margin:auto;border-bottom:none}.asbestos-trust-funds-hero-container .transparent-style-content-container{width:625px;position:relative;top:60px}.qualifying-for-trust-funds-flex-container{width:1000px;margin:auto}.qualifying-for-trust-funds-section-container .asbestos-law-content-container{width:55%;margin:0;padding-left:20px;padding-right:20px;position:relative;top:60px}.top-asbestos-trusts-inner-container{width:1000px;margin:auto;padding-bottom:60px}.top-asbestos-trusts-section-container{padding-bottom:30px}.process-for-filing-trust-fund-inner-container{width:1000px;margin:auto}}.input-container input{font-size:18px;color:#545d5f;letter-spacing:0;line-height:28px;font-family:Roboto,sans-serif}.invalid,.valid{display:none;width:30px;position:relative;bottom:34px;right:5px;margin-left:auto;margin-bottom:-34px}.finding-a-lawyer-hero-container{background-color:#6bcaff;padding-bottom:40px;border-bottom:5px solid #b8e6ff}.finding-a-lawyer-hero-img-320 img{width:100%}.finding-a-lawyer-hero-content-container{width:90%;margin:auto;margin-top:-70px}.finding-a-lawyer-hero-content-container h1{font-size:30px;color:#444748;letter-spacing:0;line-height:36px}.finding-a-lawyer-hero-content-container p{font-size:18px;font-family:Roboto,sans-serif;color:#545d5f;letter-spacing:0;line-height:28px;padding-top:40px}.finding-a-lawyer-hero-container .asbestos-law-home-btn{padding:13px;width:256px;position:relative;top:20px}.how-to-find-meso-lawyer-section-container{background:#effaff;padding-top:40px;padding-bottom:100px}.how-to-find-meso-lawyer-section-container .page-form-header-container{background:#5b93b8;padding-top:15px;padding-bottom:15px}.how-to-find-meso-lawyer-section-container .page-form-header-container p{font-size:20px;font-weight:700;width:96%;margin:auto;font-family:Roboto,sans-serif;color:#fff;letter-spacing:0;text-align:center;line-height:28px}.how-to-find-meso-lawyer-section-container .asbestos-law-content-container h2,.meso-lawyer-qualities-section-container .asbestos-law-content-container h2,.why-find-meso-attorney-section-container .asbestos-law-content-container h2{font-size:26px;color:#5b93b8;letter-spacing:0;line-height:30px}.meso-lawyer-qualities-section-container .asbestos-law-content-container{margin-top:-60px}.why-find-meso-attorney-icon{width:103px;margin:auto;margin-top:-50px}.why-find-meso-attorney-icon img{width:103px}.why-find-meso-attorney-section-container{padding-bottom:40px}.asbestos-law-bullet-header p{font-size:18px;font-weight:700;color:#240000;letter-spacing:0;line-height:28px}.meso-lawyer-qualities-img-320 img{width:100%}.meso-lawyer-qualities-section-container .asbestos-law-bullet-list{padding-bottom:20px}.meso-lawyer-qualities-section-container{padding-bottom:80px}.finding-a-lawyer-hero-img-375,.meso-lawyer-qualities-img-375,.meso-lawyer-qualities-img-tablet{display:none}.meso-lawyer-qualities-section-container{background:#effaff}@media screen and (min-width:375px){.finding-a-lawyer-hero-img-320,.meso-lawyer-qualities-img-320{display:none}.finding-a-lawyer-hero-img-375,.meso-lawyer-qualities-img-375{display:block}.finding-a-lawyer-hero-img-375 img,.meso-lawyer-qualities-img-375 img{width:100%}.finding-a-lawyer-hero-content-container{width:90%;margin:auto;margin-top:-135px}.meso-lawyer-qualities-section-container .asbestos-law-content-container{margin-top:-110px}}@media screen and (min-width:750px){.finding-a-lawyer-hero-img-375,.meso-lawyer-qualities-img-375{display:none}.meso-lawyer-qualities-img-tablet{display:block}.meso-lawyer-qualities-img-tablet img{width:100%}.finding-a-lawyer-hero-container{background-image:url(https://media-asbestoslaw-com.s3.amazonaws.com/dev/find-a-lawyer-page/lawyerherotablet.png);background-position-x:right;background-position-y:145px;background-repeat:no-repeat;height:542px}.finding-a-lawyer-hero-container .transparent-style-content-container{top:210px;padding-bottom:45px}.finding-a-lawyer-hero-content-container h1{padding-top:20px}.how-to-find-meso-lawyer-flex-container{display:-ms-flexbox;display:flex;-ms-flex-flow:row-reverse;flex-flow:row-reverse}.how-to-find-meso-lawyer-section-container .asbestos-law-content-container{width:48%;margin:0;padding-left:20px;padding-right:20px;position:relative;top:60px}}@media screen and (min-width:1000px){.finding-a-lawyer-hero-container{background-image:url(https://media-asbestoslaw-com.s3.amazonaws.com/dev/find-a-lawyer-page/lawyerherodesktopupdated.png);background-position-x:right;background-repeat:no-repeat;max-width:1440px;height:510px;margin:auto;border-bottom:none}.finding-a-lawyer-hero-wrapper-container{background:#6bcaff;border-bottom:5px solid #b8e6ff}.finding-a-lawyer-hero-container .transparent-style-content-container{top:195px;padding-bottom:45px}.how-to-find-meso-lawyer-section-container{width:1000px;margin:auto}.how-to-find-meso-lawyer-wrapper-container{background:#effaff}.why-find-meso-attorney-section-container{width:1000px;margin:auto}.meso-lawyer-qualities-img-tablet{display:none}.meso-lawyer-qualities-section-container{background-image:url(https://media-asbestoslaw-com.s3.amazonaws.com/dev/find-a-lawyer-page/qualitiesdesktop.png);background-repeat:no-repeat;background-position-x:right;max-width:1440px;height:476px;margin:auto;border-bottom:none}.meso-lawyer-qualities-wrapper-container{background:#effaff}.meso-lawyer-qualities-section-container .asbestos-law-content-container{margin-top:0;padding-top:30px;width:50%}.meso-lawyer-qualities-section-container .asbestos-law-btn-shell-container{position:relative;left:10px}.meso-lawyer-qualities-section-container .asbestos-law-btn-shell-container a{width:410px;padding:13px 22px}.meso-lawyer-qualities-section-container .asbestos-law-home-btn-double{margin:0}.meso-lawyer-qualities-section-container .asbestos-law-content-container h2{width:425px}}.case-value-hero-container{background-color:#6bcaff;padding-bottom:40px;border-bottom:5px solid #b8e6ff}.case-value-hero-img-320 img{width:100%}.case-value-hero-img-375{display:none}.case-value-hero-content-container{width:90%;margin:auto;margin-top:-70px}.case-value-hero-content-container h1{font-size:30px;color:#444748;letter-spacing:0;line-height:36px}.case-value-hero-content-container p{font-size:18px;font-family:Roboto,sans-serif;color:#545d5f;letter-spacing:0;line-height:28px;padding-top:40px}.case-value-hero-container .asbestos-law-home-btn{padding:13px;width:256px;position:relative;top:20px;margin-top:10px;margin-bottom:15px}.how-much-your-case-is-worth-section-container{background:#effaff;padding-top:20px;padding-bottom:80px}.case-value-page .asbestos-law-content-container h2{font-size:26px;color:#5b93b8;letter-spacing:0;line-height:30px}.recoveries-meso-victims-card-container{width:294px;margin:auto;background:#fff;box-shadow:2px 2px 12px 0 rgba(9,8,8,.25);border-radius:0 0 10px 10px;margin-top:30px;margin-bottom:40px}.recoveries-meso-victims-card-header{background:#5b93b8;padding-top:10px;padding-bottom:10px}.recoveries-meso-victims-card-header p{font-size:20px;font-weight:700;color:#fff;letter-spacing:0;text-align:center;line-height:28px;width:90%;margin:auto}.recoveries-meso-victims-content{padding-top:20px;padding-bottom:20px}.recoveries-meso-victims-content p{font-size:18px;color:#545d5f;letter-spacing:0;text-align:center;line-height:26px;width:90%;margin:auto}.recoveries-numbers-container{padding-bottom:10px}.blue-numbers-recovery p{font-size:28px;font-family:Georgia-Bold,serif;font-weight:700;color:#5b93b8;letter-spacing:0;text-align:center;line-height:30px}.job-title-recovery{padding-top:5px}.job-title-recovery p{font-size:18px;color:#545d5f;letter-spacing:0;text-align:center;line-height:28px;width:90%;margin:auto}.blue-diamond{transform:rotate(-315deg);background:#528bb1;width:10px;height:10px;margin:auto;margin-top:10px;margin-bottom:20px}.recoveries-meso-victims-card-container .asbestos-law-home-btn{padding:13px;width:248px}.recoveries-numbers-master-container{padding-bottom:20px}.recoveries-meso-victims-card-container{padding-bottom:30px}.veterans-claims-list-header{font-size:18px;font-weight:700;color:#002c00;letter-spacing:0;line-height:28px}.length-of-meso-cases-icon,.veterans-meso-claims-icon{width:103px;margin:auto;margin-top:-50px}.length-of-meso-cases-icon img,.veterans-meso-claims-icon img{width:103px}.veterans-meso-claims-section-container{padding-bottom:80px}.length-of-meso-cases-section-container{background:#effaff;padding-bottom:30px}.length-of-meso-cases-icon{width:103px;margin:auto;position:relative;bottom:50px;margin-bottom:-50px}.length-of-meso-cases-icon img{width:103px}.length-of-meso-cases-section-container .page-form-header-container p{width:92%}.length-of-meso-cases-section-container .page-form-wrapper-container{margin-top:40px}@media screen and (min-width:375px){.case-value-hero-img-320{display:none}.case-value-hero-img-375{display:block}.case-value-hero-img-375 img{width:100%}.recoveries-meso-victims-card-container{width:349px}.recoveries-meso-victims-card-header p{font-size:20px;font-weight:700;color:#fff;letter-spacing:0;text-align:center;line-height:28px;width:78%;margin:auto}}@media screen and (min-width:750px){.case-value-hero-img-375{display:none}.case-value-hero-container{background-image:url(https://media-asbestoslaw-com.s3.amazonaws.com/dev/case-value-page/casevaluetablet.png);background-position-x:right;background-position-y:80px;background-repeat:no-repeat;height:472px}.case-value-hero-container .transparent-style-content-container{background-color:rgba(210,239,255,.5);width:65%;position:relative;top:110px;padding-bottom:20px}.case-value-hero-content-container{width:90%;margin:auto;margin-top:-70px;padding-top:20px}.case-value-tablet-flex{display:-ms-flexbox;display:flex}.how-much-your-case-is-worth-section-container .case-value-tablet-flex .asbestos-law-content-container{width:48%;margin-top:0}.how-much-your-case-is-worth-section-container .asbestos-law-bullet-list .bullet-tablet-flex{display:block}.how-much-your-case-is-worth-section-container .asbestos-law-content-container{width:48%;margin-top:-320px}.recoveries-meso-victims-card-container{position:relative;top:115px}.veterans-meso-claims-section-container .asbestos-law-bullet-list .bullet-tablet-flex{width:360px}.length-of-meso-cases-section-container .case-value-tablet-flex .asbestos-law-content-container{width:48%}.length-of-meso-cases-section-container .case-value-tablet-flex .page-form-wrapper-container{margin-top:15px}}@media screen and (min-width:807px){.case-value-hero-container .transparent-style-content-container{background-color:rgba(210,239,255,.5);width:65%;position:relative;top:125px;padding-bottom:20px}}@media screen and (min-width:865px){.how-much-your-case-is-worth-section-container .asbestos-law-content-container{width:48%;margin-top:-360px}}@media screen and (min-width:960px){.how-much-your-case-is-worth-section-container .asbestos-law-content-container{width:48%;margin-top:-385px}}@media screen and (min-width:1000px){.case-value-hero-container{background-image:url(https://media-asbestoslaw-com.s3.amazonaws.com/dev/case-value-page/casevaluedesktop.png);background-position-x:right;background-repeat:no-repeat;max-width:1440px;height:438px;margin:auto;border-bottom:none}.case-value-hero-wrapper-container{background:#6bcaff;border-bottom:5px solid #b8e6ff}.case-value-hero-container .transparent-style-content-container{background-color:rgba(210,239,255,.5);width:69%;position:relative;top:125px;padding-bottom:30px}.how-much-your-case-is-worth-section-container{width:1000px;margin:auto}.how-much-your-case-is-worth-wrapper-container{background:#effaff}.veterans-meso-claims-section-container{width:1000px;margin:auto}.how-much-your-case-is-worth-section-container .asbestos-law-bullet-list .bullet-tablet-flex{display:-ms-flexbox;display:flex}.length-of-meso-cases-section-container{width:1000px;margin:auto}.length-of-meso-cases-wrapper-container{background:#effaff}.how-much-your-case-is-worth-section-container .case-value-tablet-flex .asbestos-law-content-container{width:58%;margin-top:0}.recoveries-meso-victims-card-container{position:relative;top:115px;left:30px}.how-much-your-case-is-worth-section-container .asbestos-law-content-container{width:58%;margin-top:-395px}.length-of-meso-cases-section-container .case-value-tablet-flex .asbestos-law-content-container{width:58%;position:relative;top:60px}.length-of-meso-cases-section-container .case-value-tablet-flex .page-form-wrapper-container{position:relative;left:30px}.case-value-hero-content-container p{font-size:18px;font-family:Roboto,sans-serif;color:#545d5f;letter-spacing:0;line-height:28px;padding-top:30px}}.meso-settlement-hero-container{background-color:#6bcaff;padding-bottom:40px;border-bottom:5px solid #b8e6ff}.meso-settlement-hero-img-320 img{width:100%}.meso-settlement-hero-img-375{display:none}.meso-settlement-hero-content-container{width:90%;margin:auto;margin-top:-70px}.meso-settlement-hero-content-container h1{font-size:30px;color:#444748;letter-spacing:0;line-height:36px}.meso-settlement-hero-content-container p{font-size:18px;font-family:Roboto,sans-serif;color:#545d5f;letter-spacing:0;line-height:28px;padding-top:40px}.meso-settlement-hero-container .asbestos-law-home-btn{padding:13px;width:256px;position:relative;top:20px;margin-top:10px;margin-bottom:15px}.settlements-lawsuits-page .asbestos-law-content-container h2{font-size:26px;color:#5b93b8;letter-spacing:0;line-height:30px}.case-settlement-steps-card-container{width:294px;margin:auto;margin-top:20px;margin-bottom:20px;border-top:10px solid #5b93b8;background:#fff;box-shadow:2px 2px 12px 0 rgba(9,8,8,.25);border-radius:0 0 10px 10px;padding-bottom:20px;margin-top:30px;margin-bottom:30px}.case-settlement-steps-header{width:268px;margin:auto;padding-top:10px;padding-bottom:10px}.case-settlement-steps-header p{font-family:Roboto,sans-serif;font-weight:700;font-size:18px;color:#545d5f;letter-spacing:0;line-height:28px}.case-settlement-steps-flex-container{display:-ms-flexbox;display:flex;padding-top:10px;padding-bottom:10px}.step-container,.step-number{padding-left:10px}.step-container{padding-right:10px}.step-container p{font-family:Roboto,sans-serif;font-size:18px;color:#545d5f;letter-spacing:0;line-height:28px}.case-settlement-steps-section-container .asbestos-law-home-btn{margin-top:10px}.case-settlement-steps-section-container{background:#effaff;padding-top:20px;padding-bottom:30px}.settlement-example-box{background:#fff;box-shadow:2px 2px 12px 0 rgba(9,8,8,.25);border-radius:10px;width:203px;height:176px;margin:auto;margin-top:20px;margin-bottom:20px}.settlement-number{width:177px;margin:auto;padding-top:10px;padding-bottom:10px}.settlement-number p{font-size:24px;color:#5b93b8;letter-spacing:0;text-align:center;line-height:28px;font-family:Georgia-Bold,serif}.settlement-description{width:177px;margin:auto;padding-bottom:10px}.settlement-description p{font-size:18px;font-family:Roboto,sans-serif;color:#545d5f;letter-spacing:0;text-align:center;line-height:28px}.next-btn,.prev-btn{position:relative;height:0;cursor:pointer}.next-btn,.prev-btn{bottom:239px}.next-btn{left:291px}.examples-of-settlements-section-container{padding-top:30px;padding-bottom:90px}.settlement-example-carousel-box-container{width:320px;margin:auto;padding-top:20px}.how-meso-lawyer-can-help-section-container{background:#effaff}.how-meso-lawyer-can-help-icon{width:103px;margin:auto;position:relative;bottom:50px;margin-bottom:-50px}.how-meso-lawyer-can-help-section-container .page-form-header-container p{width:90%}.how-meso-lawyer-can-help-section-container{padding-bottom:30px}.how-meso-lawyer-can-help-section-container .page-form-wrapper-container{margin-top:50px}.case-settlement-tablet-only{display:none}.desktop-slide,.settlement-example-carousel-box-container-desktop{display:none!important}@media screen and (min-width:375px){.meso-settlement-hero-img-375{display:block}.meso-settlement-hero-img-375 img{width:100%}.meso-settlement-hero-img-320{display:none}.case-settlement-steps-card-container{width:349px;margin:auto;margin-top:30px;margin-bottom:30px}.case-settlement-steps-header{width:323px;margin:auto;padding-top:10px;padding-bottom:10px}.settlement-example-carousel-box-container{width:375px;margin:auto;padding-top:20px}.settlement-example-box{background:#fff;box-shadow:2px 2px 12px 0 rgba(9,8,8,.25);border-radius:10px;width:257px;height:148px;margin:auto;margin-top:20px;margin-bottom:20px}.settlement-description{width:231px;margin:auto;padding-bottom:10px}.next-btn,.prev-btn{bottom:208px}.next-btn{left:346px}}@media screen and (min-width:750px){.meso-settlement-hero-img-375{display:none}.case-settlement-tablet-only{display:block}.case-settlement-steps-tablet-flex-container{display:-ms-flexbox;display:flex}.meso-settlement-hero-container{background-image:url(https://media-asbestoslaw-com.s3.amazonaws.com/dev/settlements-lawsuits-page/settlementsherotablet.png);background-position-x:right;background-position-y:80px;background-repeat:no-repeat;height:472px}.meso-settlement-hero-container .transparent-style-content-container{background-color:rgba(210,239,255,.5);width:65%;position:relative;top:110px;padding-bottom:20px}.meso-settlement-hero-content-container{width:90%;margin:auto;margin-top:-70px;padding-top:20px}.case-settlement-steps-content-container .asbestos-law-content-container{width:86%;margin:0;padding-left:20px;padding-right:20px;position:relative;top:40px}.case-settlement-steps-card-container{width:400px;margin:auto;margin:30px;padding-right:15px;padding-left:15px}.carousel-slide-container{display:-ms-flexbox;display:flex}.settlement-example-carousel-box-container{width:700px;margin:auto;padding-top:20px}.prev-btn{bottom:125px;left:-15px}.next-btn{bottom:125px;left:680px}.how-meso-lawyer-can-help-flex-container{display:-ms-flexbox;display:flex}.how-meso-lawyer-can-help-flex-container .asbestos-law-bullet-list .bullet-tablet-flex{display:block}.how-meso-lawyer-can-help-section-container .asbestos-law-content-container{width:48%;margin:0;padding-left:20px;padding-right:20px;position:relative}.how-meso-lawyer-can-help-section-container .page-form-wrapper-container{margin-bottom:80px}}@media screen and (min-width:1000px){.mobile-slide{display:none!important}.desktop-slide{display:-ms-flexbox!important;display:flex!important}.desktop-slide.desktop-slide-xs{-ms-flex-pack:center;justify-content:center}.desktop-slide.desktop-slide-xs .settlement-example-box.mobile-settlement-example-box{margin-left:21px;margin-right:21px}.meso-settlement-hero-container{background-image:url(https://media-asbestoslaw-com.s3.amazonaws.com/dev/settlements-lawsuits-page/settlementsherodesktop.png);background-position-x:right;background-repeat:no-repeat;max-width:1440px;height:438px;margin:auto;border-bottom:none}.meso-settlement-hero-wrapper-container{background:#6bcaff;border-bottom:5px solid #b8e6ff}.case-settlement-steps-wrapper-container,.how-meso-lawyer-can-help-wrapper-container{background:#effaff}.case-settlement-steps-section-container,.examples-of-settlements-section-container,.how-meso-lawyer-can-help-section-container{width:1000px;margin:auto}.examples-of-settlements-section-container{overflow:hidden}.meso-settlement-hero-content-container{width:95%}.meso-settlement-hero-container .transparent-style-content-container{top:146px}.settlement-example-carousel-box-container-desktop{display:block!important;width:860px;margin:auto;padding-top:20px}.prev-btn{bottom:125px;left:-70px}.next-btn{bottom:125px;left:900px}.settlement-example-carousel-box-container{display:none!important}.how-meso-lawyer-can-help-section-container .asbestos-law-content-container{top:40px;width:56%}.how-meso-lawyer-can-help-flex-container .asbestos-law-bullet-list .bullet-tablet-flex{display:-ms-flexbox;display:flex}}.start-your-claim-hero-container{background-color:#6bcaff;border-bottom:5px solid #b8e6ff}.start-your-claim-hero-img-320 img{width:100%}.start-your-claim-hero-img-375{display:none}.start-your-claim-hero-content-container{width:90%;margin:auto;margin-top:-70px}.start-your-claim-hero-content-container h1{font-size:30px;color:#444748;letter-spacing:0;line-height:36px;text-align:center}.start-your-claim-hero-content-container p{font-size:18px;font-family:Roboto,sans-serif;color:#545d5f;letter-spacing:0;line-height:28px;padding-top:40px;text-align:center}.bold-italics,.italics{font-style:italic}.bold-italics{font-weight:700}.start-your-claim-hero-container .page-form-wrapper-container{margin-top:40px;margin-bottom:10px}.start-your-claim-hero-container .page-form-header-container{padding-top:15px;padding-bottom:15px}.simplified-process-header-container{width:90%;margin:auto;padding-top:20px;padding-bottom:30px}.simplified-process-icon-flex-container{display:-ms-flexbox;display:flex;padding-bottom:30px}.simplified-process-icon{position:relative;top:5px;padding-left:10px}.simplified-process-content{width:217px;padding-left:20px}.simplified-process-content p{font-size:18px;color:#60686a;letter-spacing:0;line-height:28px}.two-line-content{position:relative;top:10px}.form-notice-content{width:90%;margin:auto;padding-bottom:30px}.form-notice-content p{font-style:italic;color:#545d5f;line-height:28px}.form-notice-content p,.return-to-form-btn{font-size:18px;letter-spacing:0;text-align:center}.return-to-form-btn{padding:13px;width:268px;font-weight:700;text-decoration:none;color:#fff;line-height:24px;background-color:#ef654b;border-radius:7px;margin:auto;display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;margin-bottom:60px}.return-to-form-btn:hover{background-color:#0c5a9c;color:#fff;transition:.5s}.arrow-up-img-left{width:0;position:relative;right:198px}.arrow-up-img-right{width:0;position:relative;left:40px}.input-container textarea{width:274px;background:#f9fafb;border:1px solid #dadee0;border-radius:3px;padding-bottom:76px;font-family:Roboto,sans-serif}#diagnosis,.input-container textarea{font-size:18px;color:#545d5f;letter-spacing:0;line-height:28px}#diagnosis{padding-top:8px;padding-bottom:8px;opacity:.85}#diagnosis option{color:#353535}#diagnosis{width:274px;background:#f9fafb;border:1px solid #dadee0;border-radius:3px}@media screen and (min-width:375px){.input-container textarea{width:332px}.start-your-claim-hero-img-375{display:block}.start-your-claim-hero-img-375 img{width:100%}.start-your-claim-hero-img-320{display:none}.lp-page-form-flex{display:-ms-flexbox;display:flex;margin:auto;-ms-flex-pack:justify;justify-content:space-between;padding-left:10px}.lp-page-form .page-form input{width:160px;box-sizing:border-box}.lp-page-form .page-form .form-submit{width:268px}.simplified-process-header-container{width:349px;margin:auto;padding-top:30px;padding-bottom:20px}.simplified-process-header-container p{padding-bottom:20px}.simplified-process-icon-flex-container{display:-ms-flexbox;display:flex;padding-bottom:30px;width:375px;margin:auto}.simplified-process-content{width:277px;padding-left:20px;position:relative;top:5px}.two-line-content{top:10px}.single-line-content{position:relative;top:24px}#diagnosis{width:332px;background:#f9fafb;border:1px solid #dadee0;border-radius:3px}}@media screen and (min-width:700px){.start-your-claim-hero-container{background-image:url(https://media-asbestoslaw-com.s3.amazonaws.com/dev/general-lp/generallpherotablet.png)}.start-your-claim-hero-container,.trust-fund-lp-hero{padding-top:180px;background-repeat:no-repeat;background-size:cover}.trust-fund-lp-hero{background-image:url(https://media-asbestoslaw-com.s3.amazonaws.com/dev/trust-fund-lp/trustfundlpherotablet.png)}.start-your-claim-hero-container .shell-container{width:100%}.start-your-claim-hero-container .page-form-wrapper-container{width:350px}.start-your-claim-hero-img-375{display:none}.start-your-claim-hero-container .transparent-style-content-container{background-color:rgba(210,239,255,.5);width:100%;position:relative;top:40px;padding-bottom:20px}.start-your-claim-hero-container .page-form-wrapper-container{position:relative;bottom:412px;margin-bottom:-400px;margin-right:20px}.start-your-claim-hero-content-container{width:44%;padding-top:20px;padding-left:20px;margin:0;margin-top:-70px}.simplified-process-header-container{width:665px}.start-your-claim-flex{margin-top:10px}.start-your-claim-hero-content-container h1,.start-your-claim-hero-content-container p{text-align:left}}@media screen and (min-width:760px){.simplified-process-master-flex{display:-ms-flexbox;display:flex;width:750px;margin:auto}.return-to-form-btn{display:none}.start-your-claim-hero-container{max-width:860px;margin:auto}.start-your-claim-hero-wrapper-container{background-color:#6bcaff;border-bottom:none}}@media screen and (min-width:860px){.start-your-claim-hero-wrapper-container{background-color:#6bcaff;border-bottom:5px solid #b8e6ff}.trust-fund-lp-secondary-wrapper-container{background-image:url(https://media-asbestoslaw-com.s3.amazonaws.com/dev/trust-fund-lp/trustfundlpherodesktop.png);background-repeat:no-repeat;background-position-x:20%;background-position-y:-22px;background-size:1026px;height:654px;margin:auto;padding-top:1px}.trust-fund-lp-wrapper{padding-top:0}.trust-fund-lp-flex{margin-top:0;position:relative;top:-21px}.trust-fund-lp-hero-content-container{width:44%;padding-top:20px;padding-left:20px;margin:0;margin-top:-28px}.start-your-claim-hero-container .trust-fund-lp-parge-form-wrapper{position:relative;bottom:426px;margin-bottom:-411px;margin-right:20px}.start-your-claim-hero-container{border-bottom:none;background-image:url(https://media-asbestoslaw-com.s3.amazonaws.com/dev/general-lp/generallphero.png);background-repeat:no-repeat;background-size:cover}.trust-fund-lp-hero{border-bottom:none;background-image:none;background-color:transparent}.transparent-wrapper-container-desktop{background-color:rgba(210,239,255,.5);width:100%;padding-bottom:20px;position:relative;top:487px;padding:164px;margin-top:-352px}.start-your-claim-hero-container .transparent-style-content-container{background-color:transparent}}@media screen and (min-width:1000px){.start-your-claim-hero-container .page-form-wrapper-container{width:475px;bottom:371px;left:60px}.start-your-claim-hero-content-container{width:48%;padding-top:20px;padding-left:0;margin:0;margin-top:-70px;position:relative;right:68px}.start-your-claim-hero-container{padding-bottom:80px}.lp-page-form .page-form input{width:220px;box-sizing:content-box}#diagnosis,.input-container textarea{width:454px}.start-your-claim-hero-wrapper-container{padding-top:30px}.simplified-process-header-container{width:772px;padding-top:40px}.simplified-process-master-flex{display:-ms-flexbox;display:flex;width:1000px;-ms-flex-pack:justify;justify-content:space-between;margin:auto}.simplified-process-icon-flex-container{display:-ms-flexbox;display:flex;padding-bottom:30px;width:475px;margin:auto}.simplified-process-content{width:700px}.start-your-claim-hero-container .transparent-style-content-container{top:64px}.two-line-content{top:21px}.form-notice-content{padding-top:20px;padding-bottom:60px}.trust-fund-lp-hero-content-container{width:44%;padding-top:20px;padding-left:20px;margin:0;margin-top:-49px}.start-your-claim-hero-container .trust-fund-lp-parge-form-wrapper{position:relative;bottom:388px;margin-bottom:-411px;margin-right:20px}.trust-fund-lp-wrapper{padding-top:0}}.process-steps-header{width:90%;margin:auto;margin-top:30px;margin-bottom:30px}.process-steps-header p{font-size:22px;font-family:Georgia-Bold,serif;font-weight:700;color:#545d5f;letter-spacing:0;text-align:center;line-height:30px}.process-step-container{display:-ms-flexbox;display:flex;width:262px;position:relative;left:12px;background:#e4f4fc;border-radius:10px;height:80px;margin:auto;margin-bottom:30px;padding-right:10px}.process-step-img{position:relative;right:28px;width:21%}.process-step-content{background:#e4f4fc;border-radius:10px;height:80px;margin:auto}.process-step-content p{font-size:16px;font-weight:700;color:#545d5f;letter-spacing:0;line-height:25px;padding-top:18px}@media screen and (min-width:375px){.process-step-container{width:328px;position:relative;left:10px}.process-step-content{margin:0}.process-step-content p{font-size:18px}.step-one p,.step-two p{padding-top:28px}.process-step-img{position:relative;right:24px;width:18%}}@media screen and (min-width:760px){.process-step-container{-ms-flex-wrap:wrap;flex-wrap:wrap;background-color:transparent;height:100%;left:0}.process-steps-header{margin-bottom:0}.process-step-img{position:relative;top:45px;right:0;width:80px;margin:auto}.process-steps-master-container{display:-ms-flexbox;display:flex;width:745px;margin:auto}.step-one p,.step-two p{padding-top:50px}.step-three p{padding-top:45px}.process-step-content{background:#e4f4fc;border-radius:0 0 10px 10px;width:218px;height:146px;margin:auto}.process-step-content p{text-align:center;width:90%;margin:auto}}@media screen and (min-width:1000px){.process-steps-master-container{display:-ms-flexbox;display:flex;width:1000px;margin:auto}.process-step-content{width:260px}.step-one p,.step-two p{padding-top:55px;width:60%}.step-three p{width:88%;padding-top:55px}}#lp-page-form-master-container{padding-top:25px;margin-top:-25px}.form-success-message-container{display:none}.form-success-img{width:112px;margin:auto;padding-top:30px;padding-bottom:30px}.form-success{width:90%;margin:auto;padding-bottom:60px}.form-success p{font-size:18px;color:#545d5f;letter-spacing:0;text-align:center;line-height:28px}@media screen and (min-width:700px){.form-success{width:90%;margin:auto;padding-bottom:160px}}@media screen and (min-width:1000px){.form-success{width:90%;margin:auto;padding-bottom:225px}}.asbestos-law-header-hero{background-color:#6bcaff;padding-bottom:30px;border-bottom:5px solid #b8e6ff}.asbestos-law-header-hero-content-container{width:90%;margin:auto;padding-bottom:30px}.asbestos-law-header-hero-content-container h1{font-size:22px;color:#444748;letter-spacing:0;text-align:center;line-height:30px;margin-top:-115px}.bold{font-weight:700}.truck-injury-home-hero-img-320 img{width:100%}.asbestos-law-content-container{width:90%;margin:auto}.asbestos-law-content-container h2{font-size:30px;font-weight:700;color:#444748;letter-spacing:0;line-height:36px}.asbestos-law-content-container h3{font-size:26px;color:#5b93b8;letter-spacing:0;line-height:30px;font-weight:700}.asbestos-law-content-container p{font-family:Roboto,sans-serif;font-size:18px;color:#545d5f;letter-spacing:0;line-height:28px;margin-bottom:20px}.hero-italics{padding-top:20px}.hero-bold-italics,.hero-italics{font-size:20px;font-style:italic;color:#444748;letter-spacing:0;text-align:center;line-height:30px}.hero-bold-italics{font-weight:700}.bottom-hero-header-content{padding-top:20px}.asbestos-law-home-btn{padding:13px;width:215px}.asbestos-law-home-btn,.asbestos-law-home-btn-double{font-size:18px;font-weight:700;text-decoration:none;color:#fff;letter-spacing:0;text-align:center;line-height:24px;background-color:#ef654b;border-radius:7px;margin:auto;display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center}.asbestos-law-home-btn-double{padding:10px 25px;width:205px}.asbestos-law-home-btn-double:hover,.asbestos-law-home-btn:hover{background-color:#0c5a9c;color:#fff;transition:.5s}.bottom-header .header-menu .header-menu-item:hover{color:#545d5f;transition:.5s}.asbestos-legal-claims-home-legal-claims-section-container{background-color:#effaff;padding-top:20px;padding-bottom:40px}.asbestos-law-bullet-list{padding-top:10px;width:98%;margin:auto}.asbestos-law-bullet-list li{font-size:18px;font-family:Roboto,sans-serif;font-weight:500;color:#545d5f;letter-spacing:0;line-height:28px}.asbestos-law-bullet-list li:before{content:\"\";height:.5em;width:.5em;background:#528bb1;display:block;position:absolute;transform:rotate(45deg);top:.4em;left:0}.asbestos-law-home-card-container{background:#fff;box-shadow:2px 2px 12px 0 rgba(9,8,8,.25);border-radius:0 0 10px 10px;border-top:10px solid #5b93b8;width:294px;margin:auto;padding-bottom:20px;margin-bottom:30px}.asbestos-law-home-card-content-container{padding-top:10px;padding-bottom:20px;width:90%;margin:auto}.asbestos-law-home-card-content-container p{font-size:18px;font-family:Roboto,sans-serif;color:#5f686a;letter-spacing:0;line-height:28px;font-weight:700}.quick-compensation-asbestos-trust-funds-section{padding-bottom:30px}.quick-compensation-asbestos-trust-funds-section .asbestos-law-home-btn-double{margin-top:30px;margin-bottom:20px}.quick-compensation-img-320 img{width:100%}.quick-compensation-asbestos-trust-funds-section .asbestos-law-content-container{margin-top:-98px}.immediate-access-asbestos-lawyers-section .asbestos-law-home-btn-double{margin-top:30px;margin-bottom:20px}.immediate-access-asbestos-lawyers-section{background-color:#effaff;padding-top:30px;padding-bottom:30px}.mesothelioma-case-worth-section{padding-bottom:40px}.mesothelioma-case-worth-img-320 img{width:100%}.mesothelioma-case-worth-section .asbestos-law-content-container{margin-top:-68px}.mesothelioma-case-worth-section .asbestos-law-home-btn-double{margin-top:30px;margin-bottom:20px}.asbestos-law-content-container h4{font-size:22px;font-family:Georgia-Bold,serif;font-weight:700;color:#545d5f;letter-spacing:0;line-height:30px}.asbestos-law-home-card-container .asbestos-law-bullet-list{width:90%;margin:auto;padding-top:0}.mesothelioma-settlements-victims-section{background-color:#effaff;padding-top:30px;padding-bottom:40px}.asbestos-law-home-card-container{margin-top:35px}.mesothelioma-settlements-victims-section .asbestos-law-home-btn-double{padding:10px 4px;width:268px}.mesothelioma-case-worth-img-375,.mesothelioma-case-worth-img-tablet,.quick-compensation-img-375,.quick-compensation-img-tablet,.truck-injury-home-hero-img-375{display:none}@media screen and (min-width:375px){.mesothelioma-case-worth-img-320,.quick-compensation-img-320,.truck-injury-home-hero-img-320{display:none}.mesothelioma-case-worth-img-375,.quick-compensation-img-375,.truck-injury-home-hero-img-375{display:block}.mesothelioma-case-worth-img-375 img,.quick-compensation-img-375 img,.truck-injury-home-hero-img-375 img{width:100%}.asbestos-law-home-card-container{width:349px}}@media screen and (min-width:750px){.mesothelioma-case-worth-img-375,.quick-compensation-img-375,.truck-injury-home-hero-img-375{display:none}.asbestos-law-header-hero{background-image:url(https://media-asbestoslaw-com.s3.amazonaws.com/dev/home-page/coupleherotablet.png);background-position-x:right;background-repeat:no-repeat;background-size:contain;height:335px}.asbestos-law-header-hero-content-container{margin-top:0;margin:0;padding-left:20px}.asbestos-law-header-hero-content-container h1{margin-top:0;padding-top:20px;text-align:left}.asbestos-law-tablet-flex{display:-ms-flexbox;display:flex}.mesothelioma-case-worth-img-tablet,.quick-compensation-img-tablet{display:block}.mesothelioma-case-worth-img-tablet img,.quick-compensation-img-tablet img{width:100%}.quick-compensation-asbestos-trust-funds-section .asbestos-law-content-container{margin-top:-160px}.mesothelioma-case-worth-section .asbestos-law-content-container{margin-top:-95px}.asbestos-legal-claims-home-legal-claims-section-container .asbestos-law-content-container{width:55%;padding-left:20px;margin:0;padding-right:20px}.asbestos-legal-claims-home-legal-claims-section-container .asbestos-law-home-card-container{height:200px;margin-right:20px}.asbestos-law-content-container{width:95%;margin:0;padding-left:20px}.transparent-style-content-container{background-color:rgba(1,27,40,.5);width:65%;position:relative;top:40px;padding-bottom:20px}.asbestos-law-btn-shell-container{padding-top:10px}.asbestos-law-btn-shell-container a{width:456px;padding:13px 22px}.mesothelioma-settlements-victims-section .asbestos-law-content-container{width:55%;padding-right:20px;position:relative;top:90px}.mesothelioma-settlements-victims-section .asbestos-law-home-card-container{margin-right:20px}.bullet-tablet-flex{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}.flex-container{padding-right:20px}.asbestos-law-home-btn{padding:13px;width:272px}}@media screen and (min-width:1000px){.asbestos-law-header-hero{width:100%;max-width:1536px;margin:auto;background-image:url(https://media-asbestoslaw-com.s3.amazonaws.com/dev/home-page/coupleherodesktop.png);background-position-x:right;background-repeat:no-repeat;border-bottom:none;height:365px}.asbestos-law-header-hero-content-container h1,.hero-bold-italics,.hero-italics{font-size:26px}.shell-container{width:1000px;margin:auto}.transparent-style-content-container{width:600px;position:relative;top:60px}.asbestos-legal-claims-home-legal-claims-section-container{width:1000px;margin:auto}.asbestos-legal-claims-home-legal-claims-outer-container{background-color:#effaff;padding-top:50px;padding-bottom:50px}.mesothelioma-case-worth-img-tablet,.quick-compensation-img-tablet{display:none}.mesothelioma-case-worth-section .asbestos-law-content-container{margin-top:0}.quick-compensation-asbestos-trust-funds-section .asbestos-law-content-container{width:1000px;margin:auto;margin-top:0}.quick-compensation-asbestos-trust-funds-section{background-image:url(https://media-asbestoslaw-com.s3.amazonaws.com/dev/home-page/compensationdesktop.png);background-position-x:62px;background-repeat:no-repeat;background-size:cover;max-width:1440px;height:680px;margin:auto}.asbestos-law-content-container{padding-left:0}.asbestos-legal-claims-home-legal-claims-section-container .asbestos-law-content-container{width:55%;padding-left:0;margin:0;padding-right:20px}.asbestos-law-content-container h3{margin-top:0;width:600px}.adjusted-width{width:558px}.two-column-background-container{width:1000px;margin:auto}.two-column-background-container .asbestos-law-content-container{width:55%;margin:0;padding-top:30px;position:relative;top:40px}.two-column-background-container .asbestos-law-home-btn-double{margin-top:0;margin:0;margin-left:20px;position:relative;top:60px}.immediate-access-asbestos-lawyers-section{width:1000px;margin:auto}.immediate-access-asbestos-lawyers-outer-container{background-color:#effaff;padding-top:50px;padding-bottom:50px}.mesothelioma-case-worth-section{background-image:url(https://media-asbestoslaw-com.s3.amazonaws.com/dev/home-page/workerdesktop.png);background-position-x:right;background-repeat:no-repeat;background-size:cover;max-width:1440px;height:750px;margin:auto}.mesothelioma-settlements-victims-section{width:1000px;margin:auto}.immediate-family{width:260px}.mesothelioma-settlements-victims-outer-container{background-color:#effaff}}@media screen and (min-width:1025px){.quick-compensation-asbestos-trust-funds-section{background-position-x:82px}}@media screen and (min-width:1125px){.quick-compensation-asbestos-trust-funds-section{background-position-x:100px}}@media screen and (min-width:1225px){.mesothelioma-case-worth-section,.quick-compensation-asbestos-trust-funds-section{background-size:contain;background-position-x:right}}.truck-injury-header-hero{background-color:#162d44;padding-bottom:30px;border-bottom:5px solid #efaf40}.truck-injury-header-hero-content-container{width:90%;margin:auto;padding-bottom:30px}.truck-injury-header-hero-content-container h1{font-size:22px;color:#fff;letter-spacing:0;text-align:center;line-height:30px;margin-top:-115px}.truck-injury-hero-italics{font-size:20px;font-style:italic;letter-spacing:0;text-align:center;line-height:30px;padding-top:20px}.truck-injury-home-btn{font-size:18px;font-weight:700;text-decoration:none;color:#25262e;letter-spacing:0;text-align:center;line-height:24px;background-color:#e6b523;border-radius:7px;padding:13px;width:245px;margin:auto;display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center}.truck-injury-home-btn:hover{background-color:#165ea5;color:#fff;transition:.5s}.diamond-indicator{transform:rotate(-315deg);background:#a1a5a6;width:10px;height:10px;margin:auto;margin-top:10px;margin-bottom:20px}.active{background:#e6b523!important}.truck-injury-mobile-carousel-container{background:#fff;box-shadow:2px 2px 12px 0 rgba(9,8,8,.25);padding-top:15px;padding-bottom:10px}.truck-injury-carousel-box{width:294px;margin:auto;border:1px solid #b4bbbd;border-radius:10px;margin-top:20px;margin-bottom:20px}.carousel-content-top{display:-ms-flexbox;display:flex;width:90%;margin:auto;border-bottom:1px solid #b4bbbd;padding-top:10px}.case-content{width:50%;border-right:1px solid #b4bbbd}.case-content p{font-family:Roboto,sans-serif;font-size:18px;color:#545d5f;letter-spacing:0;line-height:28px;position:relative;right:5px;text-align:center}.case-amount{width:48%;padding-left:10px}.case-amount p{font-family:Roboto,sans-serif;font-size:26px;font-weight:700;color:#165ea5;letter-spacing:0;line-height:30px;position:relative;bottom:3px}.carousel-content-bottom{padding-top:10px;padding-bottom:10px}.carousel-content-bottom p{width:70%;margin:auto;font-family:Roboto,sans-serif;font-size:22px;font-weight:700;color:#545d5f;letter-spacing:0;text-align:center;line-height:28px}.slide-indicator-container{display:-ms-flexbox;display:flex;width:250px;margin:auto}.truck-injury-content-container{width:90%;margin:auto}.truck-injury-content-container h2{font-size:30px;font-weight:700;color:#444748;letter-spacing:0;line-height:36px}.truck-injury-content-container h3{font-size:26px;color:#165ea5;letter-spacing:0;line-height:30px;font-weight:700}.truck-injury-content-container p{font-family:Roboto,sans-serif;font-size:18px;color:#545d5f;letter-spacing:0;line-height:28px;margin-bottom:20px}.truck-injury-bullet-list{padding-top:10px;width:98%;margin:auto}.truck-injury-bullet-list li{font-size:18px;font-family:Roboto,sans-serif;font-weight:500;color:#545d5f;letter-spacing:0;line-height:28px}.truck-injury-bullet-list li:before{content:\"\";height:.5em;width:.5em;background:#165ea5;display:block;position:absolute;transform:rotate(45deg);top:.5em;left:0}.truck-injury-home-card-container{background:#fff;box-shadow:2px 2px 12px 0 rgba(9,8,8,.25);border-radius:0 0 10px 10px;border-top:10px solid #0f3c68;width:294px;margin:auto;padding-bottom:20px;margin-top:40px;margin-bottom:30px}.truck-injury-home-card-content-container{padding-top:10px;padding-bottom:20px;width:90%;margin:auto}.truck-injury-home-card-content-container p{font-size:18px;font-family:Roboto,sans-serif;color:#5f686a;letter-spacing:0;line-height:28px;font-weight:700}.truck-injury-home-btn-double{font-size:18px;font-weight:700;text-decoration:none;color:#25262e;letter-spacing:0;text-align:center;line-height:24px;background-color:#e6b523;border-radius:7px;padding:10px 25px;width:215px;margin:auto;display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center}.truck-injury-home-btn-double:hover{background-color:#165ea5;color:#fff;transition:.5s}.bold-numbers-list-master-container{padding-bottom:20px}.bold-numbers-list-container{display:-ms-flexbox;display:flex;width:250px;margin:auto;padding-bottom:20px}.bold-number{padding-right:10px}.bold-number p{font-family:Georgia-Bold,serif;font-size:52px;color:#165ea5;letter-spacing:0;line-height:28px;font-weight:700}.bold-number-yellow{padding-right:20px}.bold-number-yellow p{font-family:Georgia-Bold,serif;font-size:52px;color:#efaf40;letter-spacing:0;line-height:28px;font-weight:700}.bold-number-content p{font-size:18px;color:#545d5f;letter-spacing:0;line-height:28px}.content-one{position:relative;left:5px;padding-bottom:20px}.content-three{position:relative;top:7px}.why-hire-accident-lawyer-section{background:#eef3f6;padding-top:20px;padding-bottom:30px;box-shadow:2px 2px 12px 0 rgba(9,8,8,.25)}.learn-the-accident-cause-section{padding-bottom:100px}.learn-the-accident-cause-section .truck-injury-content-container{margin-top:-80px}.truck-injury-btn-shell-container{padding-top:10px}.truck-injury-btn-shell-container a{width:456px;padding:13px 22px}.truck-accident-img-320 img,.truck-recoveries-img-320 img{width:100%}.truck-accident-img-375,.truck-recoveries-img-375{display:none}.truck-dangers-section{background:#eef3f6;padding-bottom:40px}.warning-icon{width:103px;margin:auto;position:relative;bottom:50px}.warning-icon img{width:103px}.truck-dangers-section .truck-injury-content-container{margin-top:-60px}.steps-to-accident-compensation-section{padding-top:40px;padding-bottom:60px}.truck-injury-yellow-card-container{background:#fbecd3;width:294px;margin:auto;margin-bottom:20px;border-top:10px solid #efaf40}.truck-injury-yellow-card-header{padding-top:10px;padding-bottom:20px}.truck-injury-yellow-card-header p{font-family:Open Sans,sans-serif;font-size:22px;color:#545d5f;letter-spacing:0;text-align:center;line-height:30px}.content-one-yellow{position:relative;left:5px}.types-of-recoveries-from-accidents-section{background:#eef3f6;padding-bottom:60px}.types-of-recoveries-from-accidents-section .truck-injury-content-container{margin-top:-60px}.tablet-desktop,.truck-accident-img-tablet,.truck-injury-tablet-carousel-container,.truck-recoveries-img-tablet{display:none}.clickable-diamond{cursor:pointer}.jb-hunt{font-size:18px!important;width:100%!important}.truck-injury-desktop-carousel-container{display:none}@media screen and (min-width:375px){.truck-accident-img-320,.truck-recoveries-img-320{display:none}.truck-accident-img-375,.truck-recoveries-img-375{display:block}.truck-accident-img-375 img,.truck-recoveries-img-375 img{width:100%}.truck-injury-home-card-container{width:349px;margin:auto;padding-bottom:20px;margin-top:40px;margin-bottom:30px}.truck-injury-yellow-card-container{width:349px;margin:auto;margin-bottom:20px}.bold-numbers-list-container{display:-ms-flexbox;display:flex;width:280px;margin:auto;padding-bottom:20px}.content-two{padding-bottom:20px;position:relative;top:3px}.truck-injury-yellow-card-header{width:90%;margin:auto}}@media screen and (min-width:750px){.truck-accident-img-375,.truck-injury-home-hero-img-375,.truck-recoveries-img-375{display:none}.tablet-list-flex{display:-ms-flexbox;display:flex}.tablet-list-flex li{width:252px;padding-right:20px}.corrected-line{position:relative;top:28px}.truck-injury-header-hero{background-image:url(https://media-truck-injury-site.s3.amazonaws.com/dev/homepage/truckhomepageherotablet.png);background-position-x:right;background-repeat:no-repeat;background-size:contain;height:335px}.truck-injury-header-hero-content-container{margin-top:0;margin:0;padding-left:20px}.truck-injury-header-hero-content-container h1{margin-top:0;padding-top:20px;text-align:left}.truck-injury-mobile-carousel-container{display:none}.truck-injury-tablet-carousel-container{display:block;background:#fff;box-shadow:2px 2px 12px 0 rgba(9,8,8,.25)}.tablet-slideshow{display:-ms-flexbox;display:flex;width:750px}.truck-injury-tablet-carousel-feature{display:-ms-flexbox;display:flex;width:700px;margin:auto}.truck-injury-tablet-carousel-feature .diamond-indicator{position:relative;top:48px;background:#e6b523}.why-hire-accident-lawyer-flex-container{display:-ms-flexbox;display:flex}.why-hire-accident-lawyer-section .truck-injury-content-container{width:45%;padding-top:20px}.truck-injury-home-card-container{height:435px}.truck-accident-img-tablet,.truck-recoveries-img-tablet{display:block}.truck-accident-img-tablet img,.truck-recoveries-img-tablet img{width:100%}.learn-the-accident-cause-section .truck-injury-content-container,.types-of-recoveries-from-accidents-section .truck-injury-content-container{margin-top:-180px}.truck-injuiry-btn-shell-container .truck-injury-home-btn-double{width:415px}.steps-to-accident-compensation-flex{display:-ms-flexbox;display:flex}.mobile-only{display:none}.tablet-desktop{display:block}.steps-to-accident-compensation-section .truck-injury-content-container{width:45%}.truck-injuiry-btn-shell-container{padding-top:20px}.truck-injury-carousel-prev-btn{background-image:url(https://media-truck-injury-site.s3.amazonaws.com/dev/homepage/prevarrowupdated.png);background-repeat:no-repeat;width:20px;height:40px;position:relative;right:10px;top:45px;cursor:pointer}.truck-injury-carousel-prev-btn:hover{background-image:url(https://media-truck-injury-site.s3.amazonaws.com/dev/homepage/prevarrow_hoverupdated.png);transition:.5s}.truck-injury-carousel-next-btn{background-image:url(https://media-truck-injury-site.s3.amazonaws.com/dev/homepage/nextarrowupdated.png);background-repeat:no-repeat;width:20px;height:40px;position:relative;left:10px;top:45px;cursor:pointer}.truck-injury-carousel-next-btn:hover{background-image:url(https://media-truck-injury-site.s3.amazonaws.com/dev/homepage/nextarrow_hoverupdated.png);transition:.5s}}@media screen and (min-width:1000px){.truck-injury-tablet-carousel-container{display:none}.truck-injury-hero-outer-container{background-color:#162d44}.truck-injury-header-hero{width:100%;max-width:1536px;margin:auto;background-image:url(https://media-truck-injury-site.s3.amazonaws.com/dev/homepage/truckhomepageherodesktop.png);background-position-x:right;background-repeat:no-repeat;border-bottom:none}.truck-injury-desktop-carousel-container{display:block;background:#fff;box-shadow:2px 2px 12px 0 rgba(9,8,8,.25);padding-top:20px;padding-bottom:20px}.truck-injury-desktop-carousel-feature{display:-ms-flexbox;display:flex;width:1000px;margin:auto}.truck-injury-desktop-carousel-feature .diamond-indicator{position:relative;top:48px;background:#e6b523}.why-hire-accident-lawyer-flex-container{width:1000px;margin:auto}.why-hire-accident-lawyer-section .truck-injury-content-container{width:58%;padding-top:20px}.truck-accident-img-tablet,.truck-recoveries-img-tablet{display:none}.learn-the-accident-cause-section .truck-injury-content-container,.types-of-recoveries-from-accidents-section .truck-injury-content-container{margin-top:0}.learn-the-accident-cause-outer-container{background-image:url(https://media-truck-injury-site.s3.amazonaws.com/dev/homepage/truckaccidentdesktop.png);background-repeat:no-repeat;background-size:cover;max-width:1440px;margin:auto;padding-top:20px}.learn-the-accident-cause-desktop-container,.types-of-recoveries-from-accidents-desktop-container{width:1000px;margin:auto}.learn-the-accident-cause-section,.types-of-recoveries-from-accidents-section{width:70%}.truck-dangers-outer-container{background:#eef3f6}.steps-to-accident-compensation-flex,.truck-dangers-section{width:1000px;margin:auto}.types-of-recoveries-from-accidents-outer-container{background-image:url(https://media-truck-injury-site.s3.amazonaws.com/dev/homepage/accidentrecoverydesktop.png);background-repeat:no-repeat;background-size:cover;max-width:1440px;margin:auto;padding-top:20px}.grey-desktop-background{background-color:#eef3f6}.types-of-recoveries-from-accidents-section{background:none}.desktop-list-flex{display:-ms-flexbox;display:flex}.desktop-list-flex li{width:260px}}.slideshow-container{max-width:1000px;position:relative;margin:auto}.mySlides,.mySlidesTablet{display:none}.fade{-webkit-animation-name:a;-webkit-animation-duration:1.5s;animation-name:a;animation-duration:1.5s}@keyframes a{0%{opacity:.4}to{opacity:1}}.dangerous-18-wheelers-hero-img-375{display:none}.dangerous-18-wheelers-hero-container{background-image:url(https://media-truck-injury-site.s3.amazonaws.com/dev/truck-injury-dangerous-page/truckhero320.png);background-repeat:no-repeat}.dangerous-18-wheelers-hero-wrapper-container{background:#162d44;border-bottom:5px solid #efaf40}.dangerous-18-wheelers-hero-content-container{width:90%;margin:auto}.dangerous-18-wheelers-hero-content-container h1{font-size:34px;color:#fff;letter-spacing:0;line-height:38px;padding-top:20px;font-weight:700}.dangerous-18-wheelers-hero-content-container p{font-size:20px;font-style:italic;color:#fff;letter-spacing:0;line-height:30px;padding-top:80px;padding-bottom:30px}.dangerous-18-wheelers-hero-container .truck-injury-home-btn{margin-bottom:30px}.common-injuries-from-18-wheelers-section{padding-top:30px;padding-bottom:40px;background:#eef3f6}.fatality-crash-statistics-section .truck-injury-content-container h3{margin-top:-100px}.fatality-crash-statistics-section{padding-bottom:20px}.info-graph-mobile-320{width:100%;margin:auto;padding-bottom:20px}.info-graph-mobile-320 img{width:100%;margin:auto}.federal-laws-for-18-wheelers-section{background:#eef3f6;padding-top:20px;padding-bottom:40px}.federal-laws-for-18-wheelers-section .truck-injuiry-btn-shell-container .truck-injury-home-btn-double{width:196px}.federal-laws-for-18-wheelers-section .truck-injuiry-btn-shell-container{padding-top:20px}.common-injuries-from-18-wheelers-section .truck-injury-content-container .desktop-list-flex,.dangerous-18-wheelers-tablet-header,.fatality-crash-desktop-content,.info-graph-mobile-375,.info-graph-mobile-desktop,.info-graph-mobile-tablet{display:none}.fatality-crash-mobile-content{display:block}.tablet-only-header{display:none}.federal-laws-for-18-wheelers-outer-container .truck-injury-content-container h3{width:250px}@media screen and (min-width:321px){.dangerous-18-wheelers-hero-container{background-image:url(https://media-truck-injury-site.s3.amazonaws.com/dev/truck-injury-dangerous-page/truckhero375.png);background-repeat:no-repeat}}@media screen and (min-width:375px){.info-graph-mobile-320{display:none}.info-graph-mobile-375{display:block;padding-bottom:20px}.info-graph-mobile-375,.info-graph-mobile-375 img{width:375px;margin:auto}}@media screen and (min-width:376px){.dangerous-18-wheelers-hero-container{background-size:cover;padding-bottom:30px}}@media screen and (min-width:425px){.mobile-only-header{display:none}.tablet-only-header{display:block}}@media screen and (min-width:450px){.federal-laws-for-18-wheelers-outer-container .truck-injury-content-container h3{width:100%}}@media screen and (min-width:700px){.dangerous-18-wheelers-hero-container{background-image:url(https://media-truck-injury-site.s3.amazonaws.com/dev/truck-injury-dangerous-page/truckherotablet.png);background-repeat:no-repeat;background-position-y:-100px}.dangerous-18-wheelers-hero-content-container h1{padding-top:40px}}@media screen and (min-width:750px){.dangerous-18-wheelers-hero-container{background-image:url(https://media-truck-injury-site.s3.amazonaws.com/dev/truck-injury-dangerous-page/truckherotablet.png);background-repeat:no-repeat;background-position:100%;background-size:initial;height:395px}.fatality-crash-desktop-content{display:block;padding-bottom:30px}.fatality-crash-mobile-content{display:none}.dangerous-18-wheelers-hero-content-container p{font-size:20px;font-style:italic;color:#fff;letter-spacing:0;line-height:30px;padding-top:20px;padding-bottom:30px}.dangerous-18-wheelers-hero-content-container h1{display:none}.dangerous-18-wheelers-hero-container .transparent-style-content-container{height:255px;top:20px}.dangerous-18-wheelers-tablet-header{display:block;padding-top:30px}.dangerous-18-wheelers-tablet-header h1{font-size:34px;color:#fff;letter-spacing:0;line-height:38px;padding-left:20px;font-weight:700;width:425px}.fatality-crash-statistics-section .truck-injury-content-container h3{margin-top:-300px}.info-graph-mobile-375{display:none}.info-graph-mobile-tablet{display:block;width:750px;margin:auto;padding-bottom:20px}.info-graph-mobile-tablet img{width:750px;margin:auto}.federal-laws-for-18-wheelers-section .truck-injuiry-btn-shell-container .truck-injury-home-btn-double{width:380px}.left-federal-law-list{padding-right:30px}.federal-laws-for-18-wheelers-section .tablet-list-flex li{width:305px}.common-injuries-left-list{padding-right:40px}}@media screen and (min-width:868px){.dangerous-18-wheelers-hero-container .transparent-style-content-container{height:230px;top:20px}}@media screen and (min-width:1000px){.fatality-crash-statistics-section .truck-injury-content-container h3{margin-top:0}.fatality-crash-statistics-section{width:100%}.common-injuries-from-18-wheelers-section .truck-injury-content-container .tablet-list-flex{display:none}.common-injuries-from-18-wheelers-section .truck-injury-content-container .desktop-list-flex{display:-ms-flexbox;display:flex}.common-injuries-from-18-wheelers-outer-container,.federal-laws-for-18-wheelers-outer-container{background:#eef3f6}.common-injuries-from-18-wheelers-section,.federal-laws-for-18-wheelers-section{width:1000px;margin:auto}.fatality-crash-statistics-inner-desktop-container{background-image:url(https://media-truck-injury-site.s3.amazonaws.com/dev/truck-injury-dangerous-page/crashdesktop.png);background-repeat:no-repeat;background-position:100%;max-width:1440px;margin:auto;padding-top:20px}.fatality-crash-statistics-inner-desktop-container .fatality-crash-statistics-inner-content-container-desktop{width:1000px;margin:auto;padding-top:20px;margin-bottom:40px}.fatality-crash-statistics-inner-desktop-container .fatality-crash-statistics-inner-content-container-desktop .truck-injury-content-container p{width:80%}.info-graph-mobile-tablet{display:none}.info-graph-mobile-desktop{display:block;width:1000px;margin:auto;padding-bottom:40px}.info-graph-mobile-desktop img{width:1000px;margin:auto}.dangerous-18-wheelers-tablet-header h1{padding-left:0;padding-top:30px;width:700px}.dangerous-18-wheelers-hero-container .transparent-style-content-container{height:230px;top:20px}.dangerous-18-wheelers-hero-container{width:100%;max-width:1536px;margin:auto;background-image:url(https://media-truck-injury-site.s3.amazonaws.com/dev/truck-injury-dangerous-page/truckherodesktop.png);background-position-x:right;background-repeat:no-repeat;height:375px}}.what-caused-your-accident-hero-container{background:#162d44;border-bottom:5px solid #efaf40}.what-caused-your-accident-hero-img-320 img{width:100%}.black-box-info-tablet,.what-caused-your-accident-hero-img-375{display:none}.what-caused-your-accident-hero-content-container{width:90%;margin:auto}.what-caused-your-accident-hero-content-container h1{font-size:30px;color:#fff;letter-spacing:0;line-height:36px;font-weight:700;padding-bottom:20px}.what-caused-your-accident-hero-content-container p{font-size:18px;color:#eef3f6;letter-spacing:0;line-height:28px;padding-bottom:30px}.what-caused-your-accident-hero-container .truck-injury-home-btn{width:260px;margin-bottom:30px}.what-caused-your-accident-page .truck-injury-content-container h2{font-size:26px;color:#165ea5;letter-spacing:0;line-height:30px;font-weight:700}.black-box-crash-section-container{padding-bottom:30px}.black-box-crash-section-container .truck-injury-content-container h2{padding-top:30px}.black-box-info-mobile-320{padding-bottom:20px}.black-box-info-mobile-320 img{width:100%}.who-is-responsible-section-container{padding-bottom:30px}.who-is-responsible-section-container .truck-injury-content-container h2{margin-top:-80px}.truck-companies-img-320 img{width:100%}.black-box-info-desktop,.truck-companies-img-375,.truck-companies-img-tablet{display:none}.reasons-for-an-accident-section-container{background:#eef3f6;padding-top:30px;padding-bottom:30px}.reasons-for-an-accident-card-icon{width:85px;margin:auto}.reasons-for-an-accident-card-icon img{width:85px}.reasons-for-an-accident-card-blue-box{width:268px;margin:auto;background:#1d2a3c;border-radius:10px;padding-top:55px;padding-bottom:20px;margin-top:-55px;margin-bottom:30px}.reasons-for-an-accident-card-blue-box p{font-size:18px;color:#fff;letter-spacing:0;text-align:center;line-height:28px;width:80%;margin:auto}.black-box-info-mobile-375,.reasons-for-an-accident-mobile-desktop-version{display:none}#page-form-outer-container .truck-injury-content-container p{padding-top:20px}@media screen and (min-width:375px){.truck-companies-img-320,.what-caused-your-accident-hero-img-320{display:none}.truck-companies-img-375,.what-caused-your-accident-hero-img-375{display:block}.truck-companies-img-375 img,.what-caused-your-accident-hero-img-375 img{width:100%}.black-box-info-mobile-320{display:none}.black-box-info-mobile-375{display:block;width:375px;margin:auto;padding-bottom:20px}.black-box-info-mobile-375 img{width:375px;margin:auto}.who-is-responsible-section-container .truck-injury-content-container h2{margin-top:-100px}}@media screen and (min-width:750px){.what-caused-your-accident-hero-img-375{display:none}.what-caused-your-accident-hero-container{background-image:url(https://media-truck-injury-site.s3.amazonaws.com/dev/truck-accident-causes/truckinjurycausesherotablet.png);background-position-x:right;background-repeat:no-repeat;height:425px}.what-caused-your-accident-hero-content-container h1{padding-top:20px}.what-caused-your-accident-hero-container .transparent-style-content-container{padding-bottom:2px}.black-box-info-mobile-375{display:none}.black-box-info-tablet{display:block;padding-top:30px;padding-bottom:30px}.black-box-info-tablet img{width:100%}.truck-companies-img-375{display:none}.truck-companies-img-tablet{display:block}.truck-companies-img-tablet img{width:100%}.who-is-responsible-section-container .truck-injury-content-container h2{margin-top:-145px}.reasons-for-an-accident-flex-container{display:-ms-flexbox;display:flex;width:100%;margin:auto}.reasons-for-an-accident-master-card-container{padding-right:30px;width:48%}.reasons-for-an-accident-section-container .page-form-wrapper-container{height:730px;margin-right:30px}.tablet-form-content{display:block;padding-top:30px;padding-bottom:30px}#left,.tablet-form-content{background:#eef3f6;float:left}#left{width:100%;height:1700px}#right.stick{position:fixed;width:349px;top:0;right:30px;margin:60px 0 0;margin-left:88%}#right,#right.stick{float:right;background:#eef3f6}#right{width:50%;height:200px;position:relative;right:auto}.reasons-for-an-accident-mobile-tablet-version{width:385px}}@media screen and (min-width:769px){.black-box-info-tablet{width:768px;margin:auto}.black-box-info-tablet img{width:768px}}@media screen and (min-width:1000px){.what-caused-your-accident-hero-container{background-image:url(https://media-truck-injury-site.s3.amazonaws.com/dev/truck-accident-causes/truckinjurycausesherodesktop.png);background-position-x:right;background-repeat:no-repeat;max-width:1440px;height:415px;margin:auto;border-bottom:none}#left,#right.stick{display:none}.what-caused-your-accident-hero-container .transparent-style-content-container{top:45px}.what-caused-your-accident-hero-wrapper-container{background:#162d44;border-bottom:5px solid #efaf40}.black-box-crash-section-container{width:1000px;margin:auto}.black-box-crash-section-container .truck-injury-content-container{width:100%}.black-box-info-tablet{display:none}.black-box-info-desktop{display:block;width:1000px;margin:auto;padding-top:30px;padding-bottom:30px}.black-box-info-desktop img{width:1000px}.truck-companies-img-tablet{display:none}.who-is-responsible-section-container .truck-injury-content-container h2{margin-top:0}.who-is-responsible-section-container{width:1000px;margin:auto}.who-is-responsible-section-container .truck-injury-content-container{width:68%;margin:0;position:relative;top:60px}.who-is-responsible-wrapper-container{background-image:url(https://media-truck-injury-site.s3.amazonaws.com/dev/truck-accident-causes/truckcompaniesdesktop.png);background-repeat:no-repeat;background-position-x:right;max-width:1440px;margin:auto;height:886px}.reasons-for-an-accident-flex-container{width:1000px;margin:auto}.reasons-for-an-accident-section-container .truck-injury-content-container{width:100%;margin:0}.reasons-for-an-accident-master-card-container{padding-right:30px;width:64%}.reasons-for-an-accident-mobile-tablet-version{display:none}.reasons-for-an-accident-mobile-desktop-version{display:block}.reason-flex{display:-ms-flexbox;display:flex}.left-reason{margin-right:40px}.reasons-for-an-accident-section-container .page-form-wrapper-container{margin-right:0}#page-form-outer-container .truck-injury-content-container{width:90%;margin:auto}.reasons-for-an-accident-section-container{display:block}}.begin-claim-btn,.begin-claim-btn-content{display:none}@media screen and (min-width:1125px){.begin-claim-btn{display:block;background:#165ea5;border-radius:7px;width:183px;padding-top:5px;padding-bottom:5px;position:relative;bottom:2px}.begin-claim-btn-content{display:block;width:188px;font-size:18px;color:#fff;letter-spacing:0;text-align:center;line-height:28px;font-weight:700}.begin-claim-btn:hover{background:#e6b523;transition:.5s}.begin-claim-btn:hover .begin-claim-btn-content{color:#25262e;transition:.5s}}.start-your-claim-hero-container .page-form-header-container{background:#165ea5}.start-your-claim-hero-container{background-color:#162d44;padding-bottom:40px;border-bottom:5px solid #efaf40}.start-your-claim-hero-content-container h1,.start-your-claim-hero-content-container p{color:#fff}.simplified-process-header-container p{font-family:Georgia-Bold,serif;font-size:22px;font-weight:700;color:#545d5f;letter-spacing:0;text-align:center;line-height:30px}.return-to-form-btn{background-color:#e6b523;color:#25262e}.hover-image{display:none}.return-to-form-btn:hover .arrow-up-img-left .hover-image,.return-to-form-btn:hover .arrow-up-img-right .hover-image{display:block;position:relative;top:5px;transition:.5}.return-to-form-btn:hover .arrow-up-img-left .normal-image,.return-to-form-btn:hover .arrow-up-img-right .normal-image{display:none}.lp-page-form .page-form .form-submit:hover{background:#165ea5}.prove-your-case-section-container{background:#eef3f6}@media screen and (min-width:375px){.single-line-content{position:relative;top:10px}}@media screen and (min-width:700px){.start-your-claim-hero-container .transparent-style-content-container{background-color:rgba(22,45,68,.5);width:100%;position:relative;top:40px;padding-bottom:20px}.start-your-claim-hero-container .page-form-wrapper-container{position:relative;bottom:392px;margin-bottom:-400px;margin-right:20px}}@media screen and (min-width:860px){.transparent-wrapper-container-desktop{background-color:rgba(22,45,68,.5);width:100%;padding-bottom:20px;position:relative;top:487px;padding:164px;margin-top:-352px}.start-your-claim-hero-wrapper-container{background-color:#162d44;border-bottom:5px solid #efaf40}.start-your-claim-hero-container{border-bottom:none}}@media screen and (min-width:1000px){.start-your-claim-hero-container .page-form-wrapper-container{width:475px;bottom:396px;left:60px}.lp-page-form .page-form .form-submit{height:30px}.single-line-content{position:relative;top:20px}}.prove-your-case-section-container{padding-top:20px;padding-bottom:30px}.contact-a-lawyer-section-container{padding-bottom:30px}.contact-a-lawyer-section-container .truck-injury-content-container h2{margin-top:-60px}.excellent-accident-lawyer-section-container{background:#eef3f6;padding-top:20px;padding-bottom:30px}.excellent-accident-lawyer-section-container .page-form .form-submit{height:26px}@media screen and (min-width:750px){#steps-to-compensation-page .what-caused-your-accident-hero-container{background-image:url(https://media-truck-injury-site.s3.amazonaws.com/dev/steps-to-compensation/stepstocompensationtablet.png)}.excellent-accident-lawyer-flex-container{display:-ms-flexbox;display:flex}.excellent-accident-lawyer-flex-container .truck-injury-content-container{width:50%;margin:auto}.excellent-accident-lawyer-flex-container .page-form-wrapper-container{height:560px}.contact-a-lawyer-section-container .truck-injury-content-container h2{margin-top:-100px}}@media screen and (min-width:1000px){#steps-to-compensation-page .what-caused-your-accident-hero-container{background-image:url(https://media-truck-injury-site.s3.amazonaws.com/dev/steps-to-compensation/stepstocompensationdesktop.png);height:390px}.contact-a-lawyer-section-container .truck-injury-content-container h2{margin-top:0}.prove-your-case-wrapper-container{background:#eef3f6;padding-top:20px;padding-bottom:20px}.prove-your-case-section-container{width:1000px;margin:auto}.contact-a-lawyer-inner-container{padding-top:66px;width:900px;margin:auto}.excellent-accident-lawyer-flex-container{width:1000px;margin:auto}.contact-a-lawyer-section-container .background-container{background-image:url(https://media-truck-injury-site.s3.amazonaws.com/dev/steps-to-compensation/accidentcalldesktop.png);background-repeat:no-repeat;background-position-x:right;max-width:1440px;margin:auto;height:445px}.contact-a-lawyer-inner-container .truck-injury-content-container{width:54%;margin:0;position:relative;bottom:20px}.excellent-accident-lawyer-section-container{background:#eef3f6;padding-top:40px;padding-bottom:40px}}@media screen and (min-width:1245px){.contact-a-lawyer-inner-container .truck-injury-content-container{width:68%;margin:0;bottom:0}}.mobile-begin-claim-btn{background:#e6b523;border-radius:7px;width:125px;padding-top:5px;padding-bottom:5px;position:relative;top:30px}.mobile-begin-claim-btn p{color:#25262e;font-weight:700;line-height:24px}.mobile-begin-claim-btn:hover{background:#165ea5;transition:.5s}.mobile-begin-claim-btn:hover p{color:#fff}@media screen and (min-width:1000px){.mobile-begin-claim-btn{display:none!important}}.header-logo-img{width:150px;position:relative;bottom:10px}.mobile-menu-logo-img{position:relative;right:5px}@media screen and (min-width:700px){.header-logo-img{width:192px}}@media screen and (min-width:1000px){.header-logo-img{width:220px;bottom:13px}}.footer-logo-img{width:195px}@media screen and (min-width:700px){.footer-logo-img{width:220px}}@media screen and (min-width:1000px){.footer-logo-img{width:220px;padding-bottom:20px}}"],"sourceRoot":""}]);
// Exports
/* harmony default export */ __webpack_exports__["default"] = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/next/dist/compiled/css-loader/cjs.js?!./node_modules/next/dist/compiled/postcss-loader/cjs.js?!./styles/footer.css":
/*!***************************************************************************************************************************!*\
  !*** (webpack)/css-loader/cjs.js??ref--5-oneOf-6-1!(webpack)/postcss-loader/cjs.js??ref--5-oneOf-6-2!./styles/footer.css ***!
  \***************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/next/dist/compiled/css-loader/api.js */ "./node_modules/next/dist/compiled/css-loader/api.js");
/* harmony import */ var _node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);
// Module
___CSS_LOADER_EXPORT___.push([module.i, "footer{background-color:#162d44;color:#eef3f6;box-sizing:border-box;padding:30px;font-family:Roboto,sans-serif}footer .top-footer .logo-footer-main{font-size:25px;display:block;text-align:center;margin-bottom:20px;font-family:Georgia,serif}footer .top-footer .logo-footer-secondary{font-size:18px;display:block;text-align:center;margin-bottom:20px;font-family:Georgia,serif}footer .top-footer .footer-flexbox-desktop-item{display:none}footer .bottom-footer .footer-site-identity{font-size:18px;text-align:center;line-height:21px}footer .bottom-footer .footer-site-identity:last-child{margin-top:20px;text-decoration:underline}footer .bottom-footer .footer-site-identity:last-child a{color:#eef3f6}@media screen and (min-width:700px){footer .footer-container{display:flex;max-width:1000px;margin:0 auto;justify-content:space-between}footer .footer-container .top-footer{width:45%}footer .footer-container .top-footer .logo-footer-main,footer .footer-container .top-footer .logo-footer-secondary{text-align:left}footer .footer-container .bottom-footer{width:55%;max-width:360px;display:flex;flex-wrap:wrap;justify-content:space-between}footer .footer-container .bottom-footer .footer-site-identity{display:inline-block;width:50%}footer .footer-container .bottom-footer .footer-site-identity:first-child{position:relative}footer .footer-container .bottom-footer .footer-site-identity:first-child:after{content:\"\";height:15px;width:1px;position:absolute;top:3px;right:-1.5%;background-color:#162d44}footer .footer-container .bottom-footer .footer-site-identity:last-child{display:block;width:100%;margin-top:0}}@media screen and (min-width:1000px){footer .footer-container{display:block;max-width:1000px}footer .footer-container .top-footer{display:flex;width:100%}footer .footer-container .top-footer .footer-flexbox-mobile-item{width:45%}footer .footer-container .top-footer .footer-flexbox-mobile-item .logo-footer-main{margin-bottom:10px}footer .footer-container .top-footer .footer-flexbox-desktop-item{display:flex;justify-content:space-between;width:88%;box-sizing:border-box;padding-top:5px}footer .footer-container .top-footer .footer-flexbox-desktop-item a{display:inline-block;text-decoration:none;color:#eef3f6;font-size:18px;font-weight:700}footer .footer-container .bottom-footer{display:block;width:auto;max-width:none}footer .footer-container .bottom-footer .footer-site-identity{width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;margin-right:20px}footer .footer-container .bottom-footer .footer-site-identity:first-child:after{right:-15px}footer .footer-container .bottom-footer .footer-site-identity:last-child{width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;display:inline-block;position:relative;text-decoration:none}footer .footer-container .bottom-footer .footer-site-identity:last-child a{text-decoration:none}footer .footer-container .bottom-footer .footer-site-identity:last-child:before{content:\"\";height:15px;width:1px;position:absolute;top:3px;left:-15px;background-color:#162d44}}", "",{"version":3,"sources":["webpack://styles/footer.css"],"names":[],"mappings":"AAAA,OAAO,wBAAwB,CAAC,aAAa,CAAC,qBAAqB,CAAC,YAAY,CAAC,6BAA6B,CAAC,qCAAqC,cAAc,CAAC,aAAa,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,yBAAyB,CAAC,0CAA0C,cAAc,CAAC,aAAa,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,yBAAyB,CAAC,gDAAgD,YAAY,CAAC,4CAA4C,cAAc,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,uDAAuD,eAAe,CAAC,yBAAyB,CAAC,yDAAyD,aAAa,CAAC,oCAAoC,yBAA6C,YAAY,CAAC,gBAAgB,CAAC,aAAa,CAAuB,6BAA6B,CAAC,qCAAqC,SAAS,CAAC,mHAAmH,eAAe,CAAC,wCAAwC,SAAS,CAAC,eAAe,CAAqB,YAAY,CAAoB,cAAc,CAAuB,6BAA6B,CAAC,8DAA8D,oBAAoB,CAAC,SAAS,CAAC,0EAA0E,iBAAiB,CAAC,gFAAgF,UAAU,CAAC,WAAW,CAAC,SAAS,CAAC,iBAAiB,CAAC,OAAO,CAAC,WAAW,CAAC,wBAAwB,CAAC,yEAAyE,aAAa,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,qCAAqC,yBAAyB,aAAa,CAAC,gBAAgB,CAAC,qCAAyD,YAAY,CAAC,UAAU,CAAC,iEAAiE,SAAS,CAAC,mFAAmF,kBAAkB,CAAC,kEAAsF,YAAY,CAAuB,6BAA6B,CAAC,SAAS,CAAC,qBAAqB,CAAC,eAAe,CAAC,oEAAoE,oBAAoB,CAAC,oBAAoB,CAAC,aAAa,CAAC,cAAc,CAAC,eAAe,CAAC,wCAAwC,aAAa,CAAC,UAAU,CAAC,cAAc,CAAC,8DAA8D,yBAAyB,CAAC,sBAAsB,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,gFAAgF,WAAW,CAAC,yEAAyE,yBAAyB,CAAC,sBAAsB,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,2EAA2E,oBAAoB,CAAC,gFAAgF,UAAU,CAAC,WAAW,CAAC,SAAS,CAAC,iBAAiB,CAAC,OAAO,CAAC,UAAU,CAAC,wBAAwB,CAAC","sourcesContent":["footer{background-color:#162d44;color:#eef3f6;box-sizing:border-box;padding:30px;font-family:Roboto,sans-serif}footer .top-footer .logo-footer-main{font-size:25px;display:block;text-align:center;margin-bottom:20px;font-family:Georgia,serif}footer .top-footer .logo-footer-secondary{font-size:18px;display:block;text-align:center;margin-bottom:20px;font-family:Georgia,serif}footer .top-footer .footer-flexbox-desktop-item{display:none}footer .bottom-footer .footer-site-identity{font-size:18px;text-align:center;line-height:21px}footer .bottom-footer .footer-site-identity:last-child{margin-top:20px;text-decoration:underline}footer .bottom-footer .footer-site-identity:last-child a{color:#eef3f6}@media screen and (min-width:700px){footer .footer-container{display:-ms-flexbox;display:flex;max-width:1000px;margin:0 auto;-ms-flex-pack:justify;justify-content:space-between}footer .footer-container .top-footer{width:45%}footer .footer-container .top-footer .logo-footer-main,footer .footer-container .top-footer .logo-footer-secondary{text-align:left}footer .footer-container .bottom-footer{width:55%;max-width:360px;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:justify;justify-content:space-between}footer .footer-container .bottom-footer .footer-site-identity{display:inline-block;width:50%}footer .footer-container .bottom-footer .footer-site-identity:first-child{position:relative}footer .footer-container .bottom-footer .footer-site-identity:first-child:after{content:\"\";height:15px;width:1px;position:absolute;top:3px;right:-1.5%;background-color:#162d44}footer .footer-container .bottom-footer .footer-site-identity:last-child{display:block;width:100%;margin-top:0}}@media screen and (min-width:1000px){footer .footer-container{display:block;max-width:1000px}footer .footer-container .top-footer{display:-ms-flexbox;display:flex;width:100%}footer .footer-container .top-footer .footer-flexbox-mobile-item{width:45%}footer .footer-container .top-footer .footer-flexbox-mobile-item .logo-footer-main{margin-bottom:10px}footer .footer-container .top-footer .footer-flexbox-desktop-item{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;width:88%;box-sizing:border-box;padding-top:5px}footer .footer-container .top-footer .footer-flexbox-desktop-item a{display:inline-block;text-decoration:none;color:#eef3f6;font-size:18px;font-weight:700}footer .footer-container .bottom-footer{display:block;width:auto;max-width:none}footer .footer-container .bottom-footer .footer-site-identity{width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;margin-right:20px}footer .footer-container .bottom-footer .footer-site-identity:first-child:after{right:-15px}footer .footer-container .bottom-footer .footer-site-identity:last-child{width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;display:inline-block;position:relative;text-decoration:none}footer .footer-container .bottom-footer .footer-site-identity:last-child a{text-decoration:none}footer .footer-container .bottom-footer .footer-site-identity:last-child:before{content:\"\";height:15px;width:1px;position:absolute;top:3px;left:-15px;background-color:#162d44}}"],"sourceRoot":""}]);
// Exports
/* harmony default export */ __webpack_exports__["default"] = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/next/dist/compiled/css-loader/cjs.js?!./node_modules/next/dist/compiled/postcss-loader/cjs.js?!./styles/header.css":
/*!***************************************************************************************************************************!*\
  !*** (webpack)/css-loader/cjs.js??ref--5-oneOf-6-1!(webpack)/postcss-loader/cjs.js??ref--5-oneOf-6-2!./styles/header.css ***!
  \***************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/next/dist/compiled/css-loader/api.js */ "./node_modules/next/dist/compiled/css-loader/api.js");
/* harmony import */ var _node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);
// Module
___CSS_LOADER_EXPORT___.push([module.i, ".entry-content{overflow:hidden}#wpadminbar{display:none!important}html{margin-top:0!important}.desktop-only-header{display:none}.header-menu.sidenav .active .header-menu-item{color:#f7a01c}#page:after{content:\"\";clear:both;display:table}.hide-mobile{display:none}.header-menu-item-container{position:relative}.header-menu-item-container .mobile-arrow{right:calc(50% - 115px);top:15px;transform:rotate(90deg);position:absolute}.sidenav .dropdown-menu{display:none}.sidenav .dropdown-menu a{font-weight:700;color:#162d44;font-size:15px;font-family:Open Sans;text-transform:uppercase;box-sizing:border-box;height:30px;padding-top:5px}.sidenav .dropdown-menu a.active{color:#f7a01c}.top-header{display:flex;justify-content:space-between;padding-top:32px;background-color:#fff;height:50px;box-sizing:border-box;padding:10px 20px 0;position:relative;transition:.3s;right:0}.top-header.isOpen{right:160px;background-color:#162d44}.top-header.isOpen .logo-container{opacity:0}.top-header .logo-container{transition:.3s;opacity:1}.top-header .logo-main{display:block;color:#545d5f;font-size:18px;margin-top:8px;font-family:Georgia,serif}.top-header .logo-secondary{display:none;font-family:Georgia,serif;font-style:italic}.top-header #mobile-nav-img{position:relative;top:2px}.top-header .mobile-phone img{height:45px}.top-header>.mobile-only{text-align:center}.top-header>.mobile-only.mobile-menu{width:75px;height:36px;margin-right:30px}.top-header>.mobile-only.mobile-menu a{display:inline-block;width:100%;height:100%}.top-header>.mobile-only.mobile-phone{width:38.1px;height:36px;position:relative;bottom:2px}.top-header>.mobile-only.mobile-phone a{display:inline-block;width:100%;height:100%}.mobile-menu.tablet-only{margin-right:0}.bottom-header{position:absolute;background-color:#fff;height:100vh;width:100vw;text-align:center}@media screen and (max-width:1000px){.bottom-header{right:100%}}.header-menu-mobile-cta{display:none}.logo-mobile{width:160px}.entry-header{display:none}.site-content-contain{padding-top:50px}#sidenav.active{right:0}.container{max-width:auto;padding-left:20px;padding-right:20px}.header-nav,.homepage-upper-hero{display:none}header{z-index:2;width:100%;transition:0s;background-color:#fff;position:fixed;font-family:Roboto,sans-serif}header .header-upper{height:50px}header .header-upper .logo{margin:0 auto;font-size:20px;line-height:1.3rem;width:215px;display:block;float:none}.sidenav{font-family:Lato,Arial,Helvetica,sans-serif;height:100%;width:160px;position:fixed;z-index:1;top:0;right:-202px;background-color:#162d44;color:#fff;overflow-x:hidden;padding-top:14px;transition:.3s;box-sizing:border-box;padding-left:15px}.sidenav .mobile-menu-logo{text-align:left;font-size:20px;margin-bottom:30px;margin-top:2px;font-family:Georgia,serif;color:#fff}.sidenav .header-menu-item{color:#fff;font-size:18px;font-family:Roboto,sans-serif;font-weight:400;box-sizing:border-box;height:75px;padding-top:17px;text-align:left;line-height:28px}.sidenav .header-menu-item br{display:none}.sidenav .header-menu-mobile-cta{display:block;font-family:Roboto,sans-serif;font-size:18px;color:#fcf8f8;text-align:center;background-color:#0c6c74;box-shadow:0 2px 4px 0 rgba(9,8,8,.3);border-radius:3px;margin:auto;font-weight:700;border:none;margin-top:20px;width:250px;padding:15px 0;text-decoration:none}.sidenav a{text-decoration:none;display:block}#page,.sidenav a{transition:.3s}.sidenav{border:none}.site-header{top:0}.site-header #mobile-nav-img-close{position:relative;top:9px;margin:0 auto}@media screen and (min-width:350px){.logo-mobile{width:100%}}@media screen and (min-width:700px){.top-header{background-color:#fff;height:60px;padding-top:15px}.top-header .logo{position:relative;left:0}.top-header .logo .logo-mobile{display:none}.top-header .logo .logo-desktop{display:block}.top-header .logo a{text-decoration:none}.top-header .logo .logo-container{display:flex}.top-header .logo .logo-container .logo-text{color:#0a6c74;font-weight:700;font-size:20px;margin-left:10px}.top-header .logo .logo-container .logo-main{font-size:25px;margin-top:3px}.top-header .logo .logo-container .logo-secondary{display:none;font-size:18px;margin-left:70px;margin-top:7px;position:relative;color:#fff}#sidenav .mobile-menu-logo{margin-top:8px}}@media screen and (min-width:1000px){.sidenav a:hover{color:#f1f1f1}.sidenav.active{right:0}.menu-wrapper-container{width:290px}.desktop-only-header{display:block}.mobile-only-header{display:none}.header-menu-item-container{position:relative}.header-menu-item-container .mobile-arrow{display:none}.header-menu-item-container:after{position:absolute;right:-25px;top:15px;content:\"\";background-image:url(https://wpmedia.bcbhlaw.com/images/dev/home/Navarrowdown.png);height:20px;width:20px;background-repeat:no-repeat}.header-menu-item-container.after-close:after{right:-5px}.header-menu-item-container .dropdown-menu{display:none!important}.header-menu-item-container:hover .dropdown-menu{display:block!important;position:absolute;top:98%;padding:20px 20px 0;width:150%;box-sizing:border-box;left:-25%;background-color:#0c6c74;padding-bottom:10px}.header-menu-item-container:hover .dropdown-menu a{font-size:16px;color:#f7f1ea;text-align:center;line-height:22px;font-family:Roboto,sans-serif;font-weight:700;width:130px;text-transform:uppercase;margin:0 auto 20px;padding-top:0}.header-menu-item-container:hover .dropdown-menu a.active,.header-menu-item-container:hover .dropdown-menu a:hover{color:#f7a01c}.site-content-contain{padding-top:115px}.site-header{position:fixed;width:100%;background-color:#fff;z-index:2;border-bottom:none;top:auto}.mobile-only,.tablet-only{display:none}.bottom-header{position:relative;height:50px;width:100%;right:0;background-color:#fff;box-sizing:border-box;padding-top:3px;box-shadow:2px 2px 12px 0 rgba(9,8,8,.25)}.bottom-header .container{padding-left:0}.bottom-header .header-menu{display:flex;align-items:center;justify-content:space-between;box-sizing:border-box;padding-top:2px;padding-left:68px}.bottom-header .header-menu .header-menu-mobile-only-cta{display:none}.bottom-header .header-menu .header-menu-item{font-size:18px;color:#545d5f;text-align:center;line-height:22px;font-family:Roboto,sans-serif;font-weight:400;padding-bottom:10px;width:235px}.top-header{max-width:1000px;margin:0 auto;padding:20px 0 0;height:74px;background-color:#fff;box-sizing:border-box}.top-header .logo{position:relative;left:0}.top-header .logo .logo-container .logo-main{color:#545d5f;font-size:30px;margin-top:4px}.top-header .logo .logo-container .logo-secondary{display:block;color:#545d5f;margin-top:12px;position:relative;left:465px;font-style:normal}.container{max-width:auto;padding-left:20px;padding-right:20px}.header-nav,.homepage-upper-hero{display:none}header{z-index:2;width:100%;transition:0s;background-color:#cadee7;border-bottom:2px solid #aec5c6;position:fixed}header .header-upper{height:50px}header .header-upper .logo{margin:0 auto;font-size:20px;line-height:1.3rem;width:215px;display:block;float:none}header .mobile-button{display:block;float:left;height:42px;padding-left:10px}header .mobile-button img{height:100%}.sidenav{width:650px;position:relative;height:auto;z-index:2;top:0;left:-62px;background-color:#fff;overflow-x:hidden;padding-top:14px;transition:.5s;border-right:none;overflow:visible}.sidenav .mobile-menu-logo{display:none}.sidenav .header-menu-item{font-weight:400;box-sizing:border-box;height:auto;padding-top:10px;border-bottom:none;transition:.5s;position:relative}.sidenav .header-menu-item:after{content:\"\";right:-28px;width:1px;height:26px;background-color:#fff;top:7px;position:absolute}.sidenav .header-menu-item br{display:block}.sidenav>a:last-child .header-menu-item:after{display:none}.bottom-header .header-menu .header-menu-item:hover{color:#0c5a9c;transition:.5s}#settlements-lawsuits-menu-item{width:235px}}@media screen and (max-width:1000px){#case-value-menu-item,#find-a-lawyer-menu-item,#settlements-lawsuits-menu-item,#trust-funds-menu-item{color:#fff!important;border-bottom:none!important}#case-value-menu-item:hover,#find-a-lawyer-menu-item:hover,#settlements-lawsuits-menu-item:hover,#trust-funds-menu-item:hover{color:#ef654b!important;transition:.5s}.sidenav .header-menu-item:hover{color:#ef654b!important;transition:.5s!important}}#sidenav.active{background:#162d44!important}", "",{"version":3,"sources":["webpack://styles/header.css"],"names":[],"mappings":"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","sourcesContent":[".entry-content{overflow:hidden}#wpadminbar{display:none!important}html{margin-top:0!important}.desktop-only-header{display:none}.header-menu.sidenav .active .header-menu-item{color:#f7a01c}#page:after{content:\"\";clear:both;display:table}.hide-mobile{display:none}.header-menu-item-container{position:relative}.header-menu-item-container .mobile-arrow{right:calc(50% - 115px);top:15px;transform:rotate(90deg);position:absolute}.sidenav .dropdown-menu{display:none}.sidenav .dropdown-menu a{font-weight:700;color:#162d44;font-size:15px;font-family:Open Sans;text-transform:uppercase;box-sizing:border-box;height:30px;padding-top:5px}.sidenav .dropdown-menu a.active{color:#f7a01c}.top-header{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;padding-top:32px;background-color:#fff;height:50px;box-sizing:border-box;padding:10px 20px 0;position:relative;transition:.3s;right:0}.top-header.isOpen{right:160px;background-color:#162d44}.top-header.isOpen .logo-container{opacity:0}.top-header .logo-container{transition:.3s;opacity:1}.top-header .logo-main{display:block;color:#545d5f;font-size:18px;margin-top:8px;font-family:Georgia,serif}.top-header .logo-secondary{display:none;font-family:Georgia,serif;font-style:italic}.top-header #mobile-nav-img{position:relative;top:2px}.top-header .mobile-phone img{height:45px}.top-header>.mobile-only{text-align:center}.top-header>.mobile-only.mobile-menu{width:75px;height:36px;margin-right:30px}.top-header>.mobile-only.mobile-menu a{display:inline-block;width:100%;height:100%}.top-header>.mobile-only.mobile-phone{width:38.1px;height:36px;position:relative;bottom:2px}.top-header>.mobile-only.mobile-phone a{display:inline-block;width:100%;height:100%}.mobile-menu.tablet-only{margin-right:0}.bottom-header{position:absolute;background-color:#fff;height:100vh;width:100vw;text-align:center}@media screen and (max-width:1000px){.bottom-header{right:100%}}.header-menu-mobile-cta{display:none}.logo-mobile{width:160px}.entry-header{display:none}.site-content-contain{padding-top:50px}#sidenav.active{right:0}.container{max-width:auto;padding-left:20px;padding-right:20px}.header-nav,.homepage-upper-hero{display:none}header{z-index:2;width:100%;transition:0s;background-color:#fff;position:fixed;font-family:Roboto,sans-serif}header .header-upper{height:50px}header .header-upper .logo{margin:0 auto;font-size:20px;line-height:1.3rem;width:215px;display:block;float:none}.sidenav{font-family:Lato,Arial,Helvetica,sans-serif;height:100%;width:160px;position:fixed;z-index:1;top:0;right:-202px;background-color:#162d44;color:#fff;overflow-x:hidden;padding-top:14px;transition:.3s;box-sizing:border-box;padding-left:15px}.sidenav .mobile-menu-logo{text-align:left;font-size:20px;margin-bottom:30px;margin-top:2px;font-family:Georgia,serif;color:#fff}.sidenav .header-menu-item{color:#fff;font-size:18px;font-family:Roboto,sans-serif;font-weight:400;box-sizing:border-box;height:75px;padding-top:17px;text-align:left;line-height:28px}.sidenav .header-menu-item br{display:none}.sidenav .header-menu-mobile-cta{display:block;font-family:Roboto,sans-serif;font-size:18px;color:#fcf8f8;text-align:center;background-color:#0c6c74;box-shadow:0 2px 4px 0 rgba(9,8,8,.3);border-radius:3px;margin:auto;font-weight:700;border:none;margin-top:20px;width:250px;padding:15px 0;text-decoration:none}.sidenav a{text-decoration:none;display:block}#page,.sidenav a{transition:.3s}.sidenav{border:none}.site-header{top:0}.site-header #mobile-nav-img-close{position:relative;top:9px;margin:0 auto}@media screen and (min-width:350px){.logo-mobile{width:100%}}@media screen and (min-width:700px){.top-header{background-color:#fff;height:60px;padding-top:15px}.top-header .logo{position:relative;left:0}.top-header .logo .logo-mobile{display:none}.top-header .logo .logo-desktop{display:block}.top-header .logo a{text-decoration:none}.top-header .logo .logo-container{display:-ms-flexbox;display:flex}.top-header .logo .logo-container .logo-text{color:#0a6c74;font-weight:700;font-size:20px;margin-left:10px}.top-header .logo .logo-container .logo-main{font-size:25px;margin-top:3px}.top-header .logo .logo-container .logo-secondary{display:none;font-size:18px;margin-left:70px;margin-top:7px;position:relative;color:#fff}#sidenav .mobile-menu-logo{margin-top:8px}}@media screen and (min-width:1000px){.sidenav a:hover{color:#f1f1f1}.sidenav.active{right:0}.menu-wrapper-container{width:290px}.desktop-only-header{display:block}.mobile-only-header{display:none}.header-menu-item-container{position:relative}.header-menu-item-container .mobile-arrow{display:none}.header-menu-item-container:after{position:absolute;right:-25px;top:15px;content:\"\";background-image:url(https://wpmedia.bcbhlaw.com/images/dev/home/Navarrowdown.png);height:20px;width:20px;background-repeat:no-repeat}.header-menu-item-container.after-close:after{right:-5px}.header-menu-item-container .dropdown-menu{display:none!important}.header-menu-item-container:hover .dropdown-menu{display:block!important;position:absolute;top:98%;padding:20px 20px 0;width:150%;box-sizing:border-box;left:-25%;background-color:#0c6c74;padding-bottom:10px}.header-menu-item-container:hover .dropdown-menu a{font-size:16px;color:#f7f1ea;text-align:center;line-height:22px;font-family:Roboto,sans-serif;font-weight:700;width:130px;text-transform:uppercase;margin:0 auto 20px;padding-top:0}.header-menu-item-container:hover .dropdown-menu a.active,.header-menu-item-container:hover .dropdown-menu a:hover{color:#f7a01c}.site-content-contain{padding-top:115px}.site-header{position:fixed;width:100%;background-color:#fff;z-index:2;border-bottom:none;top:auto}.mobile-only,.tablet-only{display:none}.bottom-header{position:relative;height:50px;width:100%;right:0;background-color:#fff;box-sizing:border-box;padding-top:3px;box-shadow:2px 2px 12px 0 rgba(9,8,8,.25)}.bottom-header .container{padding-left:0}.bottom-header .header-menu{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between;box-sizing:border-box;padding-top:2px;padding-left:68px}.bottom-header .header-menu .header-menu-mobile-only-cta{display:none}.bottom-header .header-menu .header-menu-item{font-size:18px;color:#545d5f;text-align:center;line-height:22px;font-family:Roboto,sans-serif;font-weight:400;padding-bottom:10px;width:235px}.top-header{max-width:1000px;margin:0 auto;padding:20px 0 0;height:74px;background-color:#fff;box-sizing:border-box}.top-header .logo{position:relative;left:0}.top-header .logo .logo-container .logo-main{color:#545d5f;font-size:30px;margin-top:4px}.top-header .logo .logo-container .logo-secondary{display:block;color:#545d5f;margin-top:12px;position:relative;left:465px;font-style:normal}.container{max-width:auto;padding-left:20px;padding-right:20px}.header-nav,.homepage-upper-hero{display:none}header{z-index:2;width:100%;transition:0s;background-color:#cadee7;border-bottom:2px solid #aec5c6;position:fixed}header .header-upper{height:50px}header .header-upper .logo{margin:0 auto;font-size:20px;line-height:1.3rem;width:215px;display:block;float:none}header .mobile-button{display:block;float:left;height:42px;padding-left:10px}header .mobile-button img{height:100%}.sidenav{width:650px;position:relative;height:auto;z-index:2;top:0;left:-62px;background-color:#fff;overflow-x:hidden;padding-top:14px;transition:.5s;border-right:none;overflow:visible}.sidenav .mobile-menu-logo{display:none}.sidenav .header-menu-item{font-weight:400;box-sizing:border-box;height:auto;padding-top:10px;border-bottom:none;transition:.5s;position:relative}.sidenav .header-menu-item:after{content:\"\";right:-28px;width:1px;height:26px;background-color:#fff;top:7px;position:absolute}.sidenav .header-menu-item br{display:block}.sidenav>a:last-child .header-menu-item:after{display:none}.bottom-header .header-menu .header-menu-item:hover{color:#0c5a9c;transition:.5s}#settlements-lawsuits-menu-item{width:235px}}@media screen and (max-width:1000px){#case-value-menu-item,#find-a-lawyer-menu-item,#settlements-lawsuits-menu-item,#trust-funds-menu-item{color:#fff!important;border-bottom:none!important}#case-value-menu-item:hover,#find-a-lawyer-menu-item:hover,#settlements-lawsuits-menu-item:hover,#trust-funds-menu-item:hover{color:#ef654b!important;transition:.5s}.sidenav .header-menu-item:hover{color:#ef654b!important;transition:.5s!important}}#sidenav.active{background:#162d44!important}"],"sourceRoot":""}]);
// Exports
/* harmony default export */ __webpack_exports__["default"] = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/next/dist/compiled/css-loader/cjs.js?!./node_modules/next/dist/compiled/postcss-loader/cjs.js?!./styles/main.css":
/*!*************************************************************************************************************************!*\
  !*** (webpack)/css-loader/cjs.js??ref--5-oneOf-6-1!(webpack)/postcss-loader/cjs.js??ref--5-oneOf-6-2!./styles/main.css ***!
  \*************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/next/dist/compiled/css-loader/api.js */ "./node_modules/next/dist/compiled/css-loader/api.js");
/* harmony import */ var _node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_next_dist_compiled_css_loader_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);
// Module
___CSS_LOADER_EXPORT___.push([module.i, "/** Import theme styles */\r\n/** Breakpoints */\r\n/** Colors */\r\n/** Typography */\r\n@font-face {\r\n    font-family: \"Roboto\";\r\n    src: url(\"https://fonts.googleapis.com/css?family=Roboto:400, 500&display=swap\");\r\n    font-style: normal;\r\n    font-weight: 400; }\r\n  /* http://meyerweb.com/eric/tools/css/reset/ \r\n     v2.0 | 20110126\r\n     License: none (public domain)\r\n  */\r\n  html, body, div, span, applet, object, iframe,\r\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\n  a, abbr, acronym, address, big, cite, code,\r\n  del, dfn, em, img, ins, kbd, q, s, samp,\r\n  small, strike, strong, sub, sup, tt, var,\r\n  b, u, i, center,\r\n  dl, dt, dd, ol, ul, li,\r\n  fieldset, form, label, legend,\r\n  table, caption, tbody, tfoot, thead, tr, th, td,\r\n  article, aside, canvas, details, embed,\r\n  figure, figcaption, footer, header, hgroup,\r\n  menu, nav, output, ruby, section, summary,\r\n  time, mark, audio, video {\r\n    margin: 0;\r\n    padding: 0;\r\n    border: 0;\r\n    font-size: 100%;\r\n    font: inherit;\r\n    vertical-align: baseline; }\r\n  \r\n  /* HTML5 display-role reset for older browsers */\r\n  article, aside, details, figcaption, figure,\r\n  footer, header, hgroup, menu, nav, section {\r\n    display: block; }\r\n  \r\n  body {\r\n    line-height: 1; }\r\n  \r\n  ol, ul {\r\n    list-style: none; }\r\n  \r\n  blockquote, q {\r\n    quotes: none; }\r\n  \r\n  blockquote:before, blockquote:after,\r\n  q:before, q:after {\r\n    content: '';\r\n    content: none; }\r\n  \r\n  table {\r\n    border-collapse: collapse;\r\n    border-spacing: 0; }\r\n  \r\n  .entry-header {\r\n    display: none; }\r\n  \r\n  .site-footer {\r\n    background: #A6D5DD;\r\n    height: 312px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 10px; }\r\n    @media (min-width: 1088px) {\r\n      .site-footer {\r\n        max-height: 159px;\r\n        flex-direction: row;\r\n        flex-wrap: wrap;\r\n        padding: 0 70px;\r\n        justify-content: center;\r\n        align-items: center; } }\r\n    .site-footer .logo {\r\n      margin-right: 0; }\r\n      @media (min-width: 769px) {\r\n        .site-footer .logo {\r\n          margin-right: 0; } }\r\n      @media (min-width: 1088px) {\r\n        .site-footer .logo {\r\n          margin-right: 80px; } }\r\n      .site-footer .logo p {\r\n        font-family: \"Georgia-Bold\", serif;\r\n        font-size: 24px;\r\n        margin-top: 20px;\r\n        padding: 0 20px;\r\n        text-align: center;\r\n        line-height: 28px; }\r\n    .site-footer .phone p {\r\n      font-family: \"Georgia-Bold\", serif;\r\n      font-size: 24px;\r\n      margin-top: 20px;\r\n      padding: 0 20px;\r\n      text-align: center;\r\n      line-height: 28px; }\r\n    .site-footer p {\r\n      text-align: center;\r\n      font-size: 18px;\r\n      margin-top: 25px;\r\n      line-height: 21px; }\r\n      @media (min-width: 1088px) {\r\n        .site-footer p {\r\n          margin-top: -45px;\r\n          margin-right: 50px; } }\r\n    .site-footer .small {\r\n      font-size: 14px;\r\n      line-height: 21px; }\r\n  \r\n  .heroCover {\r\n    background: #A6D5DD;\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n    background-position: left 500%;\r\n    padding: 30px 20px 0;\r\n    display: flex;\r\n    justify-content: center;\r\n    text-align: center;\r\n    min-height: 210px; }\r\n    @media (min-width: 769px) {\r\n      .heroCover {\r\n        background-size: contain;\r\n        align-items: center;\r\n        padding: 30px 20px 30px;\r\n        max-height: 284px;\r\n        background-position: -10% 0%; } }\r\n    @media (min-width: 1024px) {\r\n      .heroCover {\r\n        min-height: 325px;\r\n        background-position: 17%; } }\r\n    .heroCover .inner-container {\r\n      width: 100%; }\r\n    .heroCover h1 {\r\n      font-family: \"Georgia-Bold\", serif;\r\n      font-size: 32px;\r\n      color: #545D5F;\r\n      line-height: 34px;\r\n      text-shadow: 0 2px 6px rgba(0, 0, 0, 0.15);\r\n      text-align: center; }\r\n      @media (min-width: 769px) {\r\n        .heroCover h1 {\r\n          width: 430px;\r\n          font-size: 42px;\r\n          line-height: 52px; } }\r\n      @media (min-width: 1024px) {\r\n        .heroCover h1 {\r\n          font-size: 45px;\r\n          line-height: 56px;\r\n          width: 522px;\r\n          margin-left: 60px; } }\r\n    .heroCover button {\r\n      width: 246px;\r\n      height: 54px;\r\n      font-size: 18px;\r\n      margin-top: 25px; }\r\n      @media (min-width: 769px) {\r\n        .heroCover button {\r\n          display: none; } }\r\n  \r\n  .two-column {\r\n    overflow: hidden;\r\n    display: flex; }\r\n    @media (min-width: 769px) {\r\n      .two-column .leftMed {\r\n        width: 60%; }\r\n        .two-column .leftMed .p20 {\r\n          padding: 20px; } }\r\n    .two-column .rightMed {\r\n      justify-content: center;\r\n      display: flex;\r\n      flex-direction: column;\r\n      padding: 0 20px; }\r\n      @media (min-width: 769px) {\r\n        .two-column .rightMed {\r\n          width: 40%; }\r\n          .two-column .rightMed.center {\r\n            text-align: center; } }\r\n    .two-column h2 {\r\n      line-height: 36px; }\r\n      .two-column h2.lh {\r\n        font-size: 32px; }\r\n    .two-column h4 {\r\n      font-size: 24px;\r\n      text-align: center;\r\n      line-height: 36px;\r\n      padding: 0 30px; }\r\n    .two-column p {\r\n      line-height: 28px; }\r\n    .two-column button {\r\n      padding: 12px 55px;\r\n      font-size: 18px; }\r\n    .two-column .cta {\r\n      margin-bottom: 40px; }\r\n    .two-column .longCta {\r\n      padding: 12px 35px;\r\n      margin: 20px 20px 40px; }\r\n      @media (min-width: 769px) {\r\n        .two-column .longCta {\r\n          margin-top: 0;\r\n          margin-left: 0; } }\r\n    .two-column .bolder {\r\n      font-weight: 700; }\r\n      @media (min-width: 1024px) {\r\n        .two-column .bolder {\r\n          font-size: 28px;\r\n          line-height: 36px; } }\r\n      .two-column .bolder.larger {\r\n        font-size: 20px;\r\n        line-height: 31px; }\r\n        @media (min-width: 1024px) {\r\n          .two-column .bolder.larger {\r\n            font-size: 20px; } }\r\n    .two-column img {\r\n      max-width: 100%; }\r\n      @media (min-width: 1024px) {\r\n        .two-column img {\r\n          max-width: none; } }\r\n    .two-column .imgObj {\r\n      object-fit: cover;\r\n      object-position: 5% 0%;\r\n      height: 280px; }\r\n      @media (min-width: 375px) {\r\n        .two-column .imgObj {\r\n          object-fit: none;\r\n          object-position: 5% 0%;\r\n          height: 320px; } }\r\n      @media (min-width: 769px) {\r\n        .two-column .imgObj {\r\n          object-fit: contain;\r\n          object-position: unset;\r\n          height: auto; } }\r\n    @media (min-width: 769px) {\r\n      .two-column .colImg {\r\n        background: url(\"http://localhost:8888/bcbh/wp-content/uploads/2020/01/doctortablet.png\");\r\n        width: 50%;\r\n        height: 460px;\r\n        width: 60%;\r\n        background-repeat: no-repeat;\r\n        background-position: right;\r\n        overflow: visible; } }\r\n    @media (min-width: 769px) and (min-width: 1024px) {\r\n      .two-column .colImg {\r\n        position: absolute;\r\n        right: 0;\r\n        width: 65%;\r\n        background: none; } }\r\n    @media (min-width: 769px) {\r\n        .two-column .colImg.land {\r\n          height: 100%;\r\n          width: 100%; } }\r\n      @media (min-width: 769px) and (min-width: 769px) {\r\n        .two-column .colImg.land {\r\n          display: block;\r\n          width: 50%;\r\n          min-height: 566px;\r\n          height: 100%;\r\n          width: 62%;\r\n          background: url(\"http://localhost:8888/bcbh/wp-content/uploads/2020/01/hands_tablet.png\");\r\n          background-position: 100% 0; } }\r\n      @media (min-width: 769px) and (min-width: 1024px) {\r\n        .two-column .colImg.land {\r\n          height: 100%;\r\n          width: 100%;\r\n          background: none; } }\r\n    @media (min-width: 769px) {\r\n        .two-column .colImg .mobileImg {\r\n          display: none; } }\r\n      @media (min-width: 769px) and (min-width: 1024px) {\r\n        .two-column .colImg .mobileImg {\r\n          display: block; }\r\n          .two-column .colImg .mobileImg.numb {\r\n            max-width: 100%;\r\n            object-fit: cover;\r\n            height: 100%;\r\n            object-position: right; } }\r\n  \r\n    .two-column .colImg.mobileImgLand {\r\n      background: none; }\r\n      @media (min-width: 769px) {\r\n        .two-column .colImg.mobileImgLand {\r\n          display: block;\r\n          background: url(\"http://localhost:8888/bcbh/wp-content/uploads/2020/01/hands320.png\");\r\n          background-repeat: no-repeat;\r\n          background-size: contain; } }\r\n    .two-column .innerP {\r\n      padding: 20px; }\r\n      .two-column .innerP.tabl span {\r\n        font-weight: 700;\r\n        font-style: italic; }\r\n      @media (min-width: 769px) {\r\n        .two-column .innerP.tabl {\r\n          display: flex;\r\n          width: 100%;\r\n          justify-content: space-between; }\r\n          .two-column .innerP.tabl p {\r\n            width: 50%; }\r\n          .two-column .innerP.tabl img {\r\n            width: 40%; } }\r\n      @media (min-width: 769px) and (min-width: 1024px) {\r\n        .two-column .innerP.tabl img {\r\n          margin-top: -175px;\r\n          width: 45%; } }\r\n  \r\n      @media (min-width: 769px) {\r\n        .two-column .innerP {\r\n          width: 50%; } }\r\n      @media (min-width: 1024px) {\r\n        .two-column .innerP {\r\n          width: 40%;\r\n          z-index: 1;\r\n          margin-right: auto; }\r\n          .two-column .innerP.numb {\r\n            width: 45%;\r\n            padding: 0;\r\n            margin-top: 30px;\r\n            margin-bottom: 30px; }\r\n            .two-column .innerP.numb p {\r\n              font-weight: 700; } }\r\n    .two-column .innerPout {\r\n      margin-bottom: 20px; }\r\n      @media (min-width: 769px) {\r\n        .two-column .innerPout {\r\n          width: 100%; } }\r\n      @media (min-width: 1024px) {\r\n        .two-column .innerPout {\r\n          width: 50%; } }\r\n    @media (min-width: 769px) {\r\n      .two-column .wrap {\r\n        flex-wrap: wrap; } }\r\n    .two-column .headerLeft {\r\n      padding: 0 20px;\r\n      margin-top: 30px; }\r\n      .two-column .headerLeft .deskImg {\r\n        display: none; }\r\n      @media (min-width: 769px) {\r\n        .two-column .headerLeft {\r\n          justify-content: flex-start;\r\n          padding: 20px 20px; } }\r\n      @media (min-width: 1024px) {\r\n        .two-column .headerLeft .deskImg {\r\n          display: block;\r\n          margin-left: auto;\r\n          margin-right: 80px;\r\n          margin-top: -50px; } }\r\n    @media (min-width: 769px) {\r\n      .two-column .headerTab {\r\n        margin-top: 40px;\r\n        width: 375px;\r\n        margin-right: 80px;\r\n        font-size: 32px; } }\r\n    @media (min-width: 1024px) {\r\n      .two-column .headerTab {\r\n        margin-right: 200px;\r\n        margin-top: 0;\r\n        width: 527px; } }\r\n    .two-column .mobileImgSmall {\r\n      max-width: 200px; }\r\n      @media (min-width: 769px) {\r\n        .two-column .mobileImgSmall {\r\n          max-width: 160px; } }\r\n      @media (min-width: 1024px) {\r\n        .two-column .mobileImgSmall {\r\n          display: none; } }\r\n    .two-column .order1 {\r\n      order: 1; }\r\n      @media (min-width: 769px) {\r\n        .two-column .order1 {\r\n          order: unset; } }\r\n    .two-column .order2 {\r\n      order: 2; }\r\n      @media (min-width: 769px) {\r\n        .two-column .order2 {\r\n          order: unset; } }\r\n    .two-column .order3 {\r\n      order: 3; }\r\n      @media (min-width: 769px) {\r\n        .two-column .order3 {\r\n          order: unset; } }\r\n    .two-column .warnMobpic {\r\n      display: block; }\r\n      @media (min-width: 769px) {\r\n        .two-column .warnMobpic {\r\n          display: none; } }\r\n      @media (min-width: 1024px) {\r\n        .two-column .warnMobpic {\r\n          display: none; } }\r\n    .two-column .warnMobpicB {\r\n      display: none; }\r\n      @media (min-width: 769px) {\r\n        .two-column .warnMobpicB {\r\n          display: block; } }\r\n      @media (min-width: 1024px) {\r\n        .two-column .warnMobpicB {\r\n          display: block; } }\r\n  \r\n  .list-section {\r\n    margin-bottom: 40px; }\r\n    .list-section .dark-bg {\r\n      background-color: #EFEBE6; }\r\n      @media (min-width: 375px) {\r\n        .list-section .dark-bg {\r\n          margin: 0 20px; }\r\n          .list-section .dark-bg h3 {\r\n            font-size: 26px; }\r\n          .list-section .dark-bg .ulCon {\r\n            width: 100%;\r\n            margin: 0 auto;\r\n            display: flex;\r\n            flex-direction: column; } }\r\n      @media (min-width: 375px) and (min-width: 769px) {\r\n        .list-section .dark-bg .ulCon {\r\n          flex-direction: row; } }\r\n      @media (min-width: 375px) and (min-width: 1024px) {\r\n        .list-section .dark-bg .ulCon {\r\n          flex-direction: row;\r\n          width: 590px; } }\r\n  \r\n    .list-section h3 {\r\n      font-size: 24px;\r\n      text-align: center;\r\n      line-height: 36px;\r\n      padding: 0 20px; }\r\n    .list-section ul {\r\n      margin: 0 30px; }\r\n    @media (min-width: 769px) {\r\n      .list-section .wrap {\r\n        flex-wrap: wrap; } }\r\n    .list-section.landing {\r\n      width: 100%;\r\n      background-color: #EFEBE6;\r\n      min-height: 280px;\r\n      margin-bottom: 0; }\r\n      .list-section.landing h3 {\r\n        font-size: 22px;\r\n        color: #6DA7AC;\r\n        line-height: 36px;\r\n        margin-top: 40px; }\r\n        @media (min-width: 769px) {\r\n          .list-section.landing h3 {\r\n            text-align: left; } }\r\n      .list-section.landing .ulCon {\r\n        width: 100%;\r\n        margin: 0 auto;\r\n        display: flex;\r\n        flex-direction: column; }\r\n        @media (min-width: 769px) {\r\n          .list-section.landing .ulCon {\r\n            flex-direction: row; } }\r\n        @media (min-width: 1024px) {\r\n          .list-section.landing .ulCon {\r\n            flex-direction: row;\r\n            width: 760px; } }\r\n        .list-section.landing .ulCon li {\r\n          width: 100%; }\r\n          @media (min-width: 1024px) {\r\n            .list-section.landing .ulCon li {\r\n              width: 300px; } }\r\n          @media (min-width: 1024px) {\r\n            .list-section.landing .ulCon li {\r\n              width: 300px; } }\r\n  \r\n  .formCover {\r\n    background: #A6D5DD;\r\n    padding: 30px 20px 0;\r\n    border-top: 1px solid #979797;\r\n    border-bottom: 1px solid #979797; }\r\n    @media (min-width: 769px) {\r\n      .formCover {\r\n        flex-direction: column; } }\r\n    .formCover .formHero {\r\n      display: flex;\r\n      background-repeat: no-repeat;\r\n      background-size: contain;\r\n      background-position: bottom;\r\n      min-height: 495px;\r\n      flex-wrap: wrap;\r\n      justify-content: center; }\r\n      @media (min-width: 769px) {\r\n        .formCover .formHero {\r\n          justify-content: center; } }\r\n      @media (min-width: 1024px) {\r\n        .formCover .formHero {\r\n          flex-wrap: nowrap; } }\r\n      .formCover .formHero .heroLeft {\r\n        width: 100%;\r\n        text-align: center; }\r\n        @media (min-width: 1024px) {\r\n          .formCover .formHero .heroLeft {\r\n            width: 50%;\r\n            text-align: left;\r\n            padding-right: 80px; } }\r\n        .formCover .formHero .heroLeft h1 {\r\n          margin-top: 30px;\r\n          margin-bottom: 20px;\r\n          margin-right: 0;\r\n          line-height: 46px; }\r\n          @media (min-width: 1024px) {\r\n            .formCover .formHero .heroLeft h1 {\r\n              margin-right: 40px;\r\n              font-size: 42px; } }\r\n        .formCover .formHero .heroLeft p {\r\n          line-height: 28px;\r\n          text-align: left; }\r\n  \r\n  div.wpforms-container-full {\r\n    max-width: 495px;\r\n    box-shadow: #adadad85 1px 8px 11px 0px;\r\n    min-height: 460px;\r\n    padding: 20px;\r\n    background: white; }\r\n    div.wpforms-container-full .wpforms-form input[type=text],\r\n    div.wpforms-container-full .wpforms-form input[type=email],\r\n    div.wpforms-container-full .wpforms-form input[type=number],\r\n    div.wpforms-container-full .wpforms-form textarea.wpforms-field-medium,\r\n    div.wpforms-container-full .wpforms-form textarea.wpforms-field-small {\r\n      background: #f5f5f5;\r\n      border: 1px solid #EEEBE7;\r\n      border-radius: 3px; }\r\n    div.wpforms-container-full .wpforms-form .wpforms-required-label {\r\n      color: orange; }\r\n    div.wpforms-container-full .wpforms-form .wpforms-field-label {\r\n      font-weight: normal; }\r\n    div.wpforms-container-full .wpforms-form button[type=submit] {\r\n      background: #DA6E6E;\r\n      border-radius: 3px;\r\n      color: white;\r\n      font-size: .6em;\r\n      text-transform: uppercase; }\r\n  \r\n  .privacyCover {\r\n    background: #A6D5DD;\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n    background-position: left 500%;\r\n    padding: 30px 20px 0;\r\n    display: flex;\r\n    justify-content: center;\r\n    text-align: center;\r\n    min-height: 210px; }\r\n    @media (min-width: 769px) {\r\n      .privacyCover {\r\n        background-size: contain;\r\n        align-items: center;\r\n        padding: 30px 20px 30px;\r\n        max-height: 284px;\r\n        background-position: -10% 0%; } }\r\n    @media (min-width: 1024px) {\r\n      .privacyCover {\r\n        min-height: 132px;\r\n        background-position: 17%; } }\r\n    .privacyCover .inner-container {\r\n      width: 100%; }\r\n    .privacyCover h1 {\r\n      font-family: \"Georgia-Bold\", serif;\r\n      font-size: 32px;\r\n      color: #545D5F;\r\n      line-height: 34px;\r\n      text-shadow: 0 2px 6px rgba(0, 0, 0, 0.15);\r\n      text-align: center; }\r\n      @media (min-width: 769px) {\r\n        .privacyCover h1 {\r\n          width: 430px;\r\n          font-size: 42px;\r\n          line-height: 52px; } }\r\n      @media (min-width: 1024px) {\r\n        .privacyCover h1 {\r\n          font-size: 45px;\r\n          line-height: 56px;\r\n          width: 522px;\r\n          margin-left: 60px; } }\r\n  \r\n  .privacy {\r\n    margin: 50px 20px; }\r\n    .privacy h2 {\r\n      font-size: 23px;\r\n      line-height: 28px; }\r\n    .privacy p {\r\n      font-size: 18px;\r\n      line-height: 28px; }\r\n      .privacy p span {\r\n        font-weight: bold; }\r\n    .privacy ul li {\r\n      font-weight: normal;\r\n      list-style: disc;\r\n      padding: 0; }\r\n    .privacy ul li:before {\r\n      display: none; }\r\n  \r\n  /** Typography */\r\n  html {\r\n    font-family: \"Roboto\", sans-serif;\r\n    font-size: 190%; }\r\n  \r\n  .container {\r\n    max-width: 1000px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    position: relative;\r\n    width: 100%; }\r\n    .container.flex {\r\n      display: flex; }\r\n  \r\n  .inner-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center; }\r\n    @media (min-width: 769px) {\r\n      .inner-container {\r\n        flex-direction: row;\r\n        align-items: flex-start; }\r\n        .inner-container .htabl {\r\n          padding: 20px 30px 20px 20px; } }\r\n      @media (min-width: 769px) and (min-width: 1024px) {\r\n        .inner-container .htabl {\r\n          width: 50%;\r\n          padding: 0 20px;\r\n          margin-top: 70px; }\r\n          .inner-container .htabl.right {\r\n            margin-left: auto;\r\n            margin-right: unset;\r\n            padding: 0;\r\n            width: 45.5%; } }\r\n    @media (min-width: 769px) {\r\n        .inner-container .flex {\r\n          display: flex; } }\r\n      @media (min-width: 769px) and (min-width: 769px) {\r\n        .inner-container .flex {\r\n          align-items: flex-start; }\r\n          .inner-container .flex .cta {\r\n            margin-top: 50px; } }\r\n  \r\n      @media (min-width: 769px) and (min-width: 769px) and (min-width: 1024px) {\r\n        .inner-container .flex .cta {\r\n          width: 430px;\r\n          padding: 15px 0;\r\n          margin-top: 20px;\r\n          margin-left: 0; } }\r\n      @media (min-width: 769px) and (min-width: 769px) {\r\n          .inner-container .flex .innerP {\r\n            width: 50%;\r\n            padding: 0 20px 20px 60px; } }\r\n  \r\n      @media (min-width: 769px) and (min-width: 769px) and (min-width: 1024px) {\r\n        .inner-container .flex .innerP {\r\n          padding: 0 20px 20px 70px; } }\r\n      @media (min-width: 769px) and (min-width: 769px) {\r\n          .inner-container .flex img {\r\n            width: 45%; } }\r\n  \r\n      @media (min-width: 769px) and (min-width: 769px) and (min-width: 1024px) {\r\n        .inner-container .flex img {\r\n          width: 58%;\r\n          margin-top: -150px; } }\r\n  \r\n    @media (min-width: 1024px) {\r\n      .inner-container h2 {\r\n        margin-right: auto; } }\r\n  \r\n  h1 {\r\n    font-family: \"Georgia-Bold\", serif;\r\n    color: #545D5F;\r\n    letter-spacing: 0;\r\n    text-shadow: 0 2px 6px rgba(0, 0, 0, 0.15); }\r\n  \r\n  h2 {\r\n    font-family: \"Georgia-Bold\", serif;\r\n    color: #6DA7AC;\r\n    margin: 15px 0; }\r\n  \r\n  h3 {\r\n    font-family: \"Georgia-Bold\", serif;\r\n    color: #545D5F;\r\n    margin: 18px 0; }\r\n  \r\n  h4 {\r\n    font-family: \"Roboto\", sans-serif;\r\n    color: #545D5F;\r\n    margin: 25px 0; }\r\n  \r\n  p {\r\n    font-family: \"Roboto\", sans-serif;\r\n    font-size: 18px;\r\n    color: #545D5F; }\r\n  \r\n  ul {\r\n    font-size: 20px;\r\n    letter-spacing: 0; }\r\n    ul li {\r\n      line-height: 28px;\r\n      position: relative;\r\n      margin-bottom: 1.3em;\r\n      padding-left: 1.5em;\r\n      color: #545D5F;\r\n      font-weight: 700;\r\n      font-size: 20px; }\r\n      ul li:before {\r\n        content: '';\r\n        height: .4em;\r\n        width: .4em;\r\n        background: #DA6E6E;\r\n        display: block;\r\n        position: absolute;\r\n        transform: rotate(45deg);\r\n        top: .4em;\r\n        left: 0; }\r\n  \r\n  ol {\r\n    list-style: none;\r\n    counter-reset: li;\r\n    font-size: 20px;\r\n    letter-spacing: 0;\r\n    margin-top: 40px; }\r\n    ol li {\r\n      counter-increment: li;\r\n      line-height: 28px;\r\n      position: relative;\r\n      margin-bottom: 1.3em;\r\n      color: #545D5F;\r\n      font-size: 20px;\r\n      display: flex; }\r\n      ol li:before {\r\n        content: counter(li);\r\n        color: #A6D5DD;\r\n        font-weight: 700;\r\n        font-family: \"Georgia-Bold\", serif;\r\n        margin-right: 30px;\r\n        font-size: 54px;\r\n        height: .4em;\r\n        width: .4em;\r\n        top: .4em;\r\n        left: 0; }\r\n  \r\n  /* Buttons */\r\n  button,\r\n  .wp-block-button__link {\r\n    background-color: #DA6E6E !important;\r\n    border-radius: 3px;\r\n    color: white;\r\n    outline: none;\r\n    text-transform: uppercase;\r\n    font-family: \"Roboto\", sans-serif;\r\n    border: none; }\r\n  \r\n  #sidebar {\r\n    display: none; }\r\n  \r\n  hr {\r\n    margin: 0;\r\n    border: 2px solid #EEEBE7;\r\n    width: 100%;\r\n    position: absolute; }\r\n    @media (min-width: 769px) {\r\n      hr.full {\r\n        width: 100%; } }\r\n    @media (min-width: 1024px) {\r\n      hr.full {\r\n        width: 50%;\r\n        margin: 0;\r\n        border: 2px solid #EEEBE7;\r\n        width: 50%;\r\n        position: absolute;\r\n        margin-top: 40px; } }\r\n    hr.full.right {\r\n      width: 46.5%;\r\n      position: absolute;\r\n      right: 0; }\r\n      @media (min-width: 769px) {\r\n        hr.full.right {\r\n          width: 100%; } }\r\n      @media (min-width: 1024px) {\r\n        hr.full.right {\r\n          width: 46.5%; } }\r\n  \r\n  /*# sourceMappingURL=main.css.map */\r\n  \r\n  \r\n  button:hover {\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .site-footer a {\r\n    color: #545D5F;\r\n  }\r\n  \r\n  .logo a {\r\n    text-decoration: none;\r\n  }\r\n  \r\n  .helpNumber {\r\n    margin-top: 30px;\r\n    color: #DA6E6E;\r\n    margin-left: auto;\r\n  }\r\n  \r\n  .entry-content hr {\r\n    box-sizing: border-box;\r\n  }\r\n  \r\n  @media screen and (min-width: 1000px) {\r\n    .site-footer .logo p {\r\n      padding-left: -30px;\r\n    }\r\n    .two-column .inner-container .flex .cta {\r\n      width: 440px;\r\n    }\r\n  }\r\n  \r\n  @media (min-width: 1088px) {\r\n    .site-footer .logo {\r\n        margin-right: 88px;\r\n    }\r\n    .formHero .heroRight {\r\n      width: 470px;\r\n    }\r\n    .formHero .heroRight .heroRight-inner {\r\n      padding: 2px 15px !important;\r\n    }\r\n    .wpforms-field-container input,\r\n    .wpforms-submit-container button {\r\n      max-width: 100% !important;\r\n      width: 100% !important;\r\n    }\r\n  }\r\n  \r\n  /*UPDATED STYLES ----- FOOTER*/\r\n  \r\n  @media screen and (min-width: 1336px) {\r\n    .email {\r\n      position: relative;\r\n      top: 35px;\r\n    }\r\n  \r\n    .site-footer .logo {\r\n      margin-right: 0px;\r\n    }\r\n  }\r\n  \r\n  ", "",{"version":3,"sources":["webpack://styles/main.css"],"names":[],"mappings":"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","sourcesContent":["/** Import theme styles */\r\n/** Breakpoints */\r\n/** Colors */\r\n/** Typography */\r\n@font-face {\r\n    font-family: \"Roboto\";\r\n    src: url(\"https://fonts.googleapis.com/css?family=Roboto:400, 500&display=swap\");\r\n    font-style: normal;\r\n    font-weight: 400; }\r\n  /* http://meyerweb.com/eric/tools/css/reset/ \r\n     v2.0 | 20110126\r\n     License: none (public domain)\r\n  */\r\n  html, body, div, span, applet, object, iframe,\r\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\n  a, abbr, acronym, address, big, cite, code,\r\n  del, dfn, em, img, ins, kbd, q, s, samp,\r\n  small, strike, strong, sub, sup, tt, var,\r\n  b, u, i, center,\r\n  dl, dt, dd, ol, ul, li,\r\n  fieldset, form, label, legend,\r\n  table, caption, tbody, tfoot, thead, tr, th, td,\r\n  article, aside, canvas, details, embed,\r\n  figure, figcaption, footer, header, hgroup,\r\n  menu, nav, output, ruby, section, summary,\r\n  time, mark, audio, video {\r\n    margin: 0;\r\n    padding: 0;\r\n    border: 0;\r\n    font-size: 100%;\r\n    font: inherit;\r\n    vertical-align: baseline; }\r\n  \r\n  /* HTML5 display-role reset for older browsers */\r\n  article, aside, details, figcaption, figure,\r\n  footer, header, hgroup, menu, nav, section {\r\n    display: block; }\r\n  \r\n  body {\r\n    line-height: 1; }\r\n  \r\n  ol, ul {\r\n    list-style: none; }\r\n  \r\n  blockquote, q {\r\n    quotes: none; }\r\n  \r\n  blockquote:before, blockquote:after,\r\n  q:before, q:after {\r\n    content: '';\r\n    content: none; }\r\n  \r\n  table {\r\n    border-collapse: collapse;\r\n    border-spacing: 0; }\r\n  \r\n  .entry-header {\r\n    display: none; }\r\n  \r\n  .site-footer {\r\n    background: #A6D5DD;\r\n    height: 312px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 10px; }\r\n    @media (min-width: 1088px) {\r\n      .site-footer {\r\n        max-height: 159px;\r\n        flex-direction: row;\r\n        flex-wrap: wrap;\r\n        padding: 0 70px;\r\n        justify-content: center;\r\n        align-items: center; } }\r\n    .site-footer .logo {\r\n      margin-right: 0; }\r\n      @media (min-width: 769px) {\r\n        .site-footer .logo {\r\n          margin-right: 0; } }\r\n      @media (min-width: 1088px) {\r\n        .site-footer .logo {\r\n          margin-right: 80px; } }\r\n      .site-footer .logo p {\r\n        font-family: \"Georgia-Bold\", serif;\r\n        font-size: 24px;\r\n        margin-top: 20px;\r\n        padding: 0 20px;\r\n        text-align: center;\r\n        line-height: 28px; }\r\n    .site-footer .phone p {\r\n      font-family: \"Georgia-Bold\", serif;\r\n      font-size: 24px;\r\n      margin-top: 20px;\r\n      padding: 0 20px;\r\n      text-align: center;\r\n      line-height: 28px; }\r\n    .site-footer p {\r\n      text-align: center;\r\n      font-size: 18px;\r\n      margin-top: 25px;\r\n      line-height: 21px; }\r\n      @media (min-width: 1088px) {\r\n        .site-footer p {\r\n          margin-top: -45px;\r\n          margin-right: 50px; } }\r\n    .site-footer .small {\r\n      font-size: 14px;\r\n      line-height: 21px; }\r\n  \r\n  .heroCover {\r\n    background: #A6D5DD;\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n    background-position: left 500%;\r\n    padding: 30px 20px 0;\r\n    display: flex;\r\n    justify-content: center;\r\n    text-align: center;\r\n    min-height: 210px; }\r\n    @media (min-width: 769px) {\r\n      .heroCover {\r\n        background-size: contain;\r\n        align-items: center;\r\n        padding: 30px 20px 30px;\r\n        max-height: 284px;\r\n        background-position: -10% 0%; } }\r\n    @media (min-width: 1024px) {\r\n      .heroCover {\r\n        min-height: 325px;\r\n        background-position: 17%; } }\r\n    .heroCover .inner-container {\r\n      width: 100%; }\r\n    .heroCover h1 {\r\n      font-family: \"Georgia-Bold\", serif;\r\n      font-size: 32px;\r\n      color: #545D5F;\r\n      line-height: 34px;\r\n      text-shadow: 0 2px 6px rgba(0, 0, 0, 0.15);\r\n      text-align: center; }\r\n      @media (min-width: 769px) {\r\n        .heroCover h1 {\r\n          width: 430px;\r\n          font-size: 42px;\r\n          line-height: 52px; } }\r\n      @media (min-width: 1024px) {\r\n        .heroCover h1 {\r\n          font-size: 45px;\r\n          line-height: 56px;\r\n          width: 522px;\r\n          margin-left: 60px; } }\r\n    .heroCover button {\r\n      width: 246px;\r\n      height: 54px;\r\n      font-size: 18px;\r\n      margin-top: 25px; }\r\n      @media (min-width: 769px) {\r\n        .heroCover button {\r\n          display: none; } }\r\n  \r\n  .two-column {\r\n    overflow: hidden;\r\n    display: flex; }\r\n    @media (min-width: 769px) {\r\n      .two-column .leftMed {\r\n        width: 60%; }\r\n        .two-column .leftMed .p20 {\r\n          padding: 20px; } }\r\n    .two-column .rightMed {\r\n      justify-content: center;\r\n      display: flex;\r\n      flex-direction: column;\r\n      padding: 0 20px; }\r\n      @media (min-width: 769px) {\r\n        .two-column .rightMed {\r\n          width: 40%; }\r\n          .two-column .rightMed.center {\r\n            text-align: center; } }\r\n    .two-column h2 {\r\n      line-height: 36px; }\r\n      .two-column h2.lh {\r\n        font-size: 32px; }\r\n    .two-column h4 {\r\n      font-size: 24px;\r\n      text-align: center;\r\n      line-height: 36px;\r\n      padding: 0 30px; }\r\n    .two-column p {\r\n      line-height: 28px; }\r\n    .two-column button {\r\n      padding: 12px 55px;\r\n      font-size: 18px; }\r\n    .two-column .cta {\r\n      margin-bottom: 40px; }\r\n    .two-column .longCta {\r\n      padding: 12px 35px;\r\n      margin: 20px 20px 40px; }\r\n      @media (min-width: 769px) {\r\n        .two-column .longCta {\r\n          margin-top: 0;\r\n          margin-left: 0; } }\r\n    .two-column .bolder {\r\n      font-weight: 700; }\r\n      @media (min-width: 1024px) {\r\n        .two-column .bolder {\r\n          font-size: 28px;\r\n          line-height: 36px; } }\r\n      .two-column .bolder.larger {\r\n        font-size: 20px;\r\n        line-height: 31px; }\r\n        @media (min-width: 1024px) {\r\n          .two-column .bolder.larger {\r\n            font-size: 20px; } }\r\n    .two-column img {\r\n      max-width: 100%; }\r\n      @media (min-width: 1024px) {\r\n        .two-column img {\r\n          max-width: none; } }\r\n    .two-column .imgObj {\r\n      object-fit: cover;\r\n      object-position: 5% 0%;\r\n      height: 280px; }\r\n      @media (min-width: 375px) {\r\n        .two-column .imgObj {\r\n          object-fit: none;\r\n          object-position: 5% 0%;\r\n          height: 320px; } }\r\n      @media (min-width: 769px) {\r\n        .two-column .imgObj {\r\n          object-fit: contain;\r\n          object-position: unset;\r\n          height: auto; } }\r\n    @media (min-width: 769px) {\r\n      .two-column .colImg {\r\n        background: url(\"http://localhost:8888/bcbh/wp-content/uploads/2020/01/doctortablet.png\");\r\n        width: 50%;\r\n        height: 460px;\r\n        width: 60%;\r\n        background-repeat: no-repeat;\r\n        background-position: right;\r\n        overflow: visible; } }\r\n    @media (min-width: 769px) and (min-width: 1024px) {\r\n      .two-column .colImg {\r\n        position: absolute;\r\n        right: 0;\r\n        width: 65%;\r\n        background: none; } }\r\n    @media (min-width: 769px) {\r\n        .two-column .colImg.land {\r\n          height: 100%;\r\n          width: 100%; } }\r\n      @media (min-width: 769px) and (min-width: 769px) {\r\n        .two-column .colImg.land {\r\n          display: block;\r\n          width: 50%;\r\n          min-height: 566px;\r\n          height: 100%;\r\n          width: 62%;\r\n          background: url(\"http://localhost:8888/bcbh/wp-content/uploads/2020/01/hands_tablet.png\");\r\n          background-position: 100% 0; } }\r\n      @media (min-width: 769px) and (min-width: 1024px) {\r\n        .two-column .colImg.land {\r\n          height: 100%;\r\n          width: 100%;\r\n          background: none; } }\r\n    @media (min-width: 769px) {\r\n        .two-column .colImg .mobileImg {\r\n          display: none; } }\r\n      @media (min-width: 769px) and (min-width: 1024px) {\r\n        .two-column .colImg .mobileImg {\r\n          display: block; }\r\n          .two-column .colImg .mobileImg.numb {\r\n            max-width: 100%;\r\n            object-fit: cover;\r\n            height: 100%;\r\n            object-position: right; } }\r\n  \r\n    .two-column .colImg.mobileImgLand {\r\n      background: none; }\r\n      @media (min-width: 769px) {\r\n        .two-column .colImg.mobileImgLand {\r\n          display: block;\r\n          background: url(\"http://localhost:8888/bcbh/wp-content/uploads/2020/01/hands320.png\");\r\n          background-repeat: no-repeat;\r\n          background-size: contain; } }\r\n    .two-column .innerP {\r\n      padding: 20px; }\r\n      .two-column .innerP.tabl span {\r\n        font-weight: 700;\r\n        font-style: italic; }\r\n      @media (min-width: 769px) {\r\n        .two-column .innerP.tabl {\r\n          display: flex;\r\n          width: 100%;\r\n          justify-content: space-between; }\r\n          .two-column .innerP.tabl p {\r\n            width: 50%; }\r\n          .two-column .innerP.tabl img {\r\n            width: 40%; } }\r\n      @media (min-width: 769px) and (min-width: 1024px) {\r\n        .two-column .innerP.tabl img {\r\n          margin-top: -175px;\r\n          width: 45%; } }\r\n  \r\n      @media (min-width: 769px) {\r\n        .two-column .innerP {\r\n          width: 50%; } }\r\n      @media (min-width: 1024px) {\r\n        .two-column .innerP {\r\n          width: 40%;\r\n          z-index: 1;\r\n          margin-right: auto; }\r\n          .two-column .innerP.numb {\r\n            width: 45%;\r\n            padding: 0;\r\n            margin-top: 30px;\r\n            margin-bottom: 30px; }\r\n            .two-column .innerP.numb p {\r\n              font-weight: 700; } }\r\n    .two-column .innerPout {\r\n      margin-bottom: 20px; }\r\n      @media (min-width: 769px) {\r\n        .two-column .innerPout {\r\n          width: 100%; } }\r\n      @media (min-width: 1024px) {\r\n        .two-column .innerPout {\r\n          width: 50%; } }\r\n    @media (min-width: 769px) {\r\n      .two-column .wrap {\r\n        flex-wrap: wrap; } }\r\n    .two-column .headerLeft {\r\n      padding: 0 20px;\r\n      margin-top: 30px; }\r\n      .two-column .headerLeft .deskImg {\r\n        display: none; }\r\n      @media (min-width: 769px) {\r\n        .two-column .headerLeft {\r\n          justify-content: flex-start;\r\n          padding: 20px 20px; } }\r\n      @media (min-width: 1024px) {\r\n        .two-column .headerLeft .deskImg {\r\n          display: block;\r\n          margin-left: auto;\r\n          margin-right: 80px;\r\n          margin-top: -50px; } }\r\n    @media (min-width: 769px) {\r\n      .two-column .headerTab {\r\n        margin-top: 40px;\r\n        width: 375px;\r\n        margin-right: 80px;\r\n        font-size: 32px; } }\r\n    @media (min-width: 1024px) {\r\n      .two-column .headerTab {\r\n        margin-right: 200px;\r\n        margin-top: 0;\r\n        width: 527px; } }\r\n    .two-column .mobileImgSmall {\r\n      max-width: 200px; }\r\n      @media (min-width: 769px) {\r\n        .two-column .mobileImgSmall {\r\n          max-width: 160px; } }\r\n      @media (min-width: 1024px) {\r\n        .two-column .mobileImgSmall {\r\n          display: none; } }\r\n    .two-column .order1 {\r\n      order: 1; }\r\n      @media (min-width: 769px) {\r\n        .two-column .order1 {\r\n          order: unset; } }\r\n    .two-column .order2 {\r\n      order: 2; }\r\n      @media (min-width: 769px) {\r\n        .two-column .order2 {\r\n          order: unset; } }\r\n    .two-column .order3 {\r\n      order: 3; }\r\n      @media (min-width: 769px) {\r\n        .two-column .order3 {\r\n          order: unset; } }\r\n    .two-column .warnMobpic {\r\n      display: block; }\r\n      @media (min-width: 769px) {\r\n        .two-column .warnMobpic {\r\n          display: none; } }\r\n      @media (min-width: 1024px) {\r\n        .two-column .warnMobpic {\r\n          display: none; } }\r\n    .two-column .warnMobpicB {\r\n      display: none; }\r\n      @media (min-width: 769px) {\r\n        .two-column .warnMobpicB {\r\n          display: block; } }\r\n      @media (min-width: 1024px) {\r\n        .two-column .warnMobpicB {\r\n          display: block; } }\r\n  \r\n  .list-section {\r\n    margin-bottom: 40px; }\r\n    .list-section .dark-bg {\r\n      background-color: #EFEBE6; }\r\n      @media (min-width: 375px) {\r\n        .list-section .dark-bg {\r\n          margin: 0 20px; }\r\n          .list-section .dark-bg h3 {\r\n            font-size: 26px; }\r\n          .list-section .dark-bg .ulCon {\r\n            width: 100%;\r\n            margin: 0 auto;\r\n            display: flex;\r\n            flex-direction: column; } }\r\n      @media (min-width: 375px) and (min-width: 769px) {\r\n        .list-section .dark-bg .ulCon {\r\n          flex-direction: row; } }\r\n      @media (min-width: 375px) and (min-width: 1024px) {\r\n        .list-section .dark-bg .ulCon {\r\n          flex-direction: row;\r\n          width: 590px; } }\r\n  \r\n    .list-section h3 {\r\n      font-size: 24px;\r\n      text-align: center;\r\n      line-height: 36px;\r\n      padding: 0 20px; }\r\n    .list-section ul {\r\n      margin: 0 30px; }\r\n    @media (min-width: 769px) {\r\n      .list-section .wrap {\r\n        flex-wrap: wrap; } }\r\n    .list-section.landing {\r\n      width: 100%;\r\n      background-color: #EFEBE6;\r\n      min-height: 280px;\r\n      margin-bottom: 0; }\r\n      .list-section.landing h3 {\r\n        font-size: 22px;\r\n        color: #6DA7AC;\r\n        line-height: 36px;\r\n        margin-top: 40px; }\r\n        @media (min-width: 769px) {\r\n          .list-section.landing h3 {\r\n            text-align: left; } }\r\n      .list-section.landing .ulCon {\r\n        width: 100%;\r\n        margin: 0 auto;\r\n        display: flex;\r\n        flex-direction: column; }\r\n        @media (min-width: 769px) {\r\n          .list-section.landing .ulCon {\r\n            flex-direction: row; } }\r\n        @media (min-width: 1024px) {\r\n          .list-section.landing .ulCon {\r\n            flex-direction: row;\r\n            width: 760px; } }\r\n        .list-section.landing .ulCon li {\r\n          width: 100%; }\r\n          @media (min-width: 1024px) {\r\n            .list-section.landing .ulCon li {\r\n              width: 300px; } }\r\n          @media (min-width: 1024px) {\r\n            .list-section.landing .ulCon li {\r\n              width: 300px; } }\r\n  \r\n  .formCover {\r\n    background: #A6D5DD;\r\n    padding: 30px 20px 0;\r\n    border-top: 1px solid #979797;\r\n    border-bottom: 1px solid #979797; }\r\n    @media (min-width: 769px) {\r\n      .formCover {\r\n        flex-direction: column; } }\r\n    .formCover .formHero {\r\n      display: flex;\r\n      background-repeat: no-repeat;\r\n      background-size: contain;\r\n      background-position: bottom;\r\n      min-height: 495px;\r\n      flex-wrap: wrap;\r\n      justify-content: center; }\r\n      @media (min-width: 769px) {\r\n        .formCover .formHero {\r\n          justify-content: center; } }\r\n      @media (min-width: 1024px) {\r\n        .formCover .formHero {\r\n          flex-wrap: nowrap; } }\r\n      .formCover .formHero .heroLeft {\r\n        width: 100%;\r\n        text-align: center; }\r\n        @media (min-width: 1024px) {\r\n          .formCover .formHero .heroLeft {\r\n            width: 50%;\r\n            text-align: left;\r\n            padding-right: 80px; } }\r\n        .formCover .formHero .heroLeft h1 {\r\n          margin-top: 30px;\r\n          margin-bottom: 20px;\r\n          margin-right: 0;\r\n          line-height: 46px; }\r\n          @media (min-width: 1024px) {\r\n            .formCover .formHero .heroLeft h1 {\r\n              margin-right: 40px;\r\n              font-size: 42px; } }\r\n        .formCover .formHero .heroLeft p {\r\n          line-height: 28px;\r\n          text-align: left; }\r\n  \r\n  div.wpforms-container-full {\r\n    max-width: 495px;\r\n    box-shadow: #adadad85 1px 8px 11px 0px;\r\n    min-height: 460px;\r\n    padding: 20px;\r\n    background: white; }\r\n    div.wpforms-container-full .wpforms-form input[type=text],\r\n    div.wpforms-container-full .wpforms-form input[type=email],\r\n    div.wpforms-container-full .wpforms-form input[type=number],\r\n    div.wpforms-container-full .wpforms-form textarea.wpforms-field-medium,\r\n    div.wpforms-container-full .wpforms-form textarea.wpforms-field-small {\r\n      background: #f5f5f5;\r\n      border: 1px solid #EEEBE7;\r\n      border-radius: 3px; }\r\n    div.wpforms-container-full .wpforms-form .wpforms-required-label {\r\n      color: orange; }\r\n    div.wpforms-container-full .wpforms-form .wpforms-field-label {\r\n      font-weight: normal; }\r\n    div.wpforms-container-full .wpforms-form button[type=submit] {\r\n      background: #DA6E6E;\r\n      border-radius: 3px;\r\n      color: white;\r\n      font-size: .6em;\r\n      text-transform: uppercase; }\r\n  \r\n  .privacyCover {\r\n    background: #A6D5DD;\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n    background-position: left 500%;\r\n    padding: 30px 20px 0;\r\n    display: flex;\r\n    justify-content: center;\r\n    text-align: center;\r\n    min-height: 210px; }\r\n    @media (min-width: 769px) {\r\n      .privacyCover {\r\n        background-size: contain;\r\n        align-items: center;\r\n        padding: 30px 20px 30px;\r\n        max-height: 284px;\r\n        background-position: -10% 0%; } }\r\n    @media (min-width: 1024px) {\r\n      .privacyCover {\r\n        min-height: 132px;\r\n        background-position: 17%; } }\r\n    .privacyCover .inner-container {\r\n      width: 100%; }\r\n    .privacyCover h1 {\r\n      font-family: \"Georgia-Bold\", serif;\r\n      font-size: 32px;\r\n      color: #545D5F;\r\n      line-height: 34px;\r\n      text-shadow: 0 2px 6px rgba(0, 0, 0, 0.15);\r\n      text-align: center; }\r\n      @media (min-width: 769px) {\r\n        .privacyCover h1 {\r\n          width: 430px;\r\n          font-size: 42px;\r\n          line-height: 52px; } }\r\n      @media (min-width: 1024px) {\r\n        .privacyCover h1 {\r\n          font-size: 45px;\r\n          line-height: 56px;\r\n          width: 522px;\r\n          margin-left: 60px; } }\r\n  \r\n  .privacy {\r\n    margin: 50px 20px; }\r\n    .privacy h2 {\r\n      font-size: 23px;\r\n      line-height: 28px; }\r\n    .privacy p {\r\n      font-size: 18px;\r\n      line-height: 28px; }\r\n      .privacy p span {\r\n        font-weight: bold; }\r\n    .privacy ul li {\r\n      font-weight: normal;\r\n      list-style: disc;\r\n      padding: 0; }\r\n    .privacy ul li:before {\r\n      display: none; }\r\n  \r\n  /** Typography */\r\n  html {\r\n    font-family: \"Roboto\", sans-serif;\r\n    font-size: 190%; }\r\n  \r\n  .container {\r\n    max-width: 1000px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    position: relative;\r\n    width: 100%; }\r\n    .container.flex {\r\n      display: flex; }\r\n  \r\n  .inner-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center; }\r\n    @media (min-width: 769px) {\r\n      .inner-container {\r\n        flex-direction: row;\r\n        align-items: flex-start; }\r\n        .inner-container .htabl {\r\n          padding: 20px 30px 20px 20px; } }\r\n      @media (min-width: 769px) and (min-width: 1024px) {\r\n        .inner-container .htabl {\r\n          width: 50%;\r\n          padding: 0 20px;\r\n          margin-top: 70px; }\r\n          .inner-container .htabl.right {\r\n            margin-left: auto;\r\n            margin-right: unset;\r\n            padding: 0;\r\n            width: 45.5%; } }\r\n    @media (min-width: 769px) {\r\n        .inner-container .flex {\r\n          display: flex; } }\r\n      @media (min-width: 769px) and (min-width: 769px) {\r\n        .inner-container .flex {\r\n          align-items: flex-start; }\r\n          .inner-container .flex .cta {\r\n            margin-top: 50px; } }\r\n  \r\n      @media (min-width: 769px) and (min-width: 769px) and (min-width: 1024px) {\r\n        .inner-container .flex .cta {\r\n          width: 430px;\r\n          padding: 15px 0;\r\n          margin-top: 20px;\r\n          margin-left: 0; } }\r\n      @media (min-width: 769px) and (min-width: 769px) {\r\n          .inner-container .flex .innerP {\r\n            width: 50%;\r\n            padding: 0 20px 20px 60px; } }\r\n  \r\n      @media (min-width: 769px) and (min-width: 769px) and (min-width: 1024px) {\r\n        .inner-container .flex .innerP {\r\n          padding: 0 20px 20px 70px; } }\r\n      @media (min-width: 769px) and (min-width: 769px) {\r\n          .inner-container .flex img {\r\n            width: 45%; } }\r\n  \r\n      @media (min-width: 769px) and (min-width: 769px) and (min-width: 1024px) {\r\n        .inner-container .flex img {\r\n          width: 58%;\r\n          margin-top: -150px; } }\r\n  \r\n    @media (min-width: 1024px) {\r\n      .inner-container h2 {\r\n        margin-right: auto; } }\r\n  \r\n  h1 {\r\n    font-family: \"Georgia-Bold\", serif;\r\n    color: #545D5F;\r\n    letter-spacing: 0;\r\n    text-shadow: 0 2px 6px rgba(0, 0, 0, 0.15); }\r\n  \r\n  h2 {\r\n    font-family: \"Georgia-Bold\", serif;\r\n    color: #6DA7AC;\r\n    margin: 15px 0; }\r\n  \r\n  h3 {\r\n    font-family: \"Georgia-Bold\", serif;\r\n    color: #545D5F;\r\n    margin: 18px 0; }\r\n  \r\n  h4 {\r\n    font-family: \"Roboto\", sans-serif;\r\n    color: #545D5F;\r\n    margin: 25px 0; }\r\n  \r\n  p {\r\n    font-family: \"Roboto\", sans-serif;\r\n    font-size: 18px;\r\n    color: #545D5F; }\r\n  \r\n  ul {\r\n    font-size: 20px;\r\n    letter-spacing: 0; }\r\n    ul li {\r\n      line-height: 28px;\r\n      position: relative;\r\n      margin-bottom: 1.3em;\r\n      padding-left: 1.5em;\r\n      color: #545D5F;\r\n      font-weight: 700;\r\n      font-size: 20px; }\r\n      ul li:before {\r\n        content: '';\r\n        height: .4em;\r\n        width: .4em;\r\n        background: #DA6E6E;\r\n        display: block;\r\n        position: absolute;\r\n        transform: rotate(45deg);\r\n        top: .4em;\r\n        left: 0; }\r\n  \r\n  ol {\r\n    list-style: none;\r\n    counter-reset: li;\r\n    font-size: 20px;\r\n    letter-spacing: 0;\r\n    margin-top: 40px; }\r\n    ol li {\r\n      counter-increment: li;\r\n      line-height: 28px;\r\n      position: relative;\r\n      margin-bottom: 1.3em;\r\n      color: #545D5F;\r\n      font-size: 20px;\r\n      display: flex; }\r\n      ol li:before {\r\n        content: counter(li);\r\n        color: #A6D5DD;\r\n        font-weight: 700;\r\n        font-family: \"Georgia-Bold\", serif;\r\n        margin-right: 30px;\r\n        font-size: 54px;\r\n        height: .4em;\r\n        width: .4em;\r\n        top: .4em;\r\n        left: 0; }\r\n  \r\n  /* Buttons */\r\n  button,\r\n  .wp-block-button__link {\r\n    background-color: #DA6E6E !important;\r\n    border-radius: 3px;\r\n    color: white;\r\n    outline: none;\r\n    text-transform: uppercase;\r\n    font-family: \"Roboto\", sans-serif;\r\n    border: none; }\r\n  \r\n  #sidebar {\r\n    display: none; }\r\n  \r\n  hr {\r\n    margin: 0;\r\n    border: 2px solid #EEEBE7;\r\n    width: 100%;\r\n    position: absolute; }\r\n    @media (min-width: 769px) {\r\n      hr.full {\r\n        width: 100%; } }\r\n    @media (min-width: 1024px) {\r\n      hr.full {\r\n        width: 50%;\r\n        margin: 0;\r\n        border: 2px solid #EEEBE7;\r\n        width: 50%;\r\n        position: absolute;\r\n        margin-top: 40px; } }\r\n    hr.full.right {\r\n      width: 46.5%;\r\n      position: absolute;\r\n      right: 0; }\r\n      @media (min-width: 769px) {\r\n        hr.full.right {\r\n          width: 100%; } }\r\n      @media (min-width: 1024px) {\r\n        hr.full.right {\r\n          width: 46.5%; } }\r\n  \r\n  /*# sourceMappingURL=main.css.map */\r\n  \r\n  \r\n  button:hover {\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .site-footer a {\r\n    color: #545D5F;\r\n  }\r\n  \r\n  .logo a {\r\n    text-decoration: none;\r\n  }\r\n  \r\n  .helpNumber {\r\n    margin-top: 30px;\r\n    color: #DA6E6E;\r\n    margin-left: auto;\r\n  }\r\n  \r\n  .entry-content hr {\r\n    box-sizing: border-box;\r\n  }\r\n  \r\n  @media screen and (min-width: 1000px) {\r\n    .site-footer .logo p {\r\n      padding-left: -30px;\r\n    }\r\n    .two-column .inner-container .flex .cta {\r\n      width: 440px;\r\n    }\r\n  }\r\n  \r\n  @media (min-width: 1088px) {\r\n    .site-footer .logo {\r\n        margin-right: 88px;\r\n    }\r\n    .formHero .heroRight {\r\n      width: 470px;\r\n    }\r\n    .formHero .heroRight .heroRight-inner {\r\n      padding: 2px 15px !important;\r\n    }\r\n    .wpforms-field-container input,\r\n    .wpforms-submit-container button {\r\n      max-width: 100% !important;\r\n      width: 100% !important;\r\n    }\r\n  }\r\n  \r\n  /*UPDATED STYLES ----- FOOTER*/\r\n  \r\n  @media screen and (min-width: 1336px) {\r\n    .email {\r\n      position: relative;\r\n      top: 35px;\r\n    }\r\n  \r\n    .site-footer .logo {\r\n      margin-right: 0px;\r\n    }\r\n  }\r\n  \r\n  "],"sourceRoot":""}]);
// Exports
/* harmony default export */ __webpack_exports__["default"] = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/next/dist/compiled/webpack/harmony-module.js":
/*!*******************************************!*\
  !*** (webpack)/webpack/harmony-module.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/* WEBPACK VAR INJECTION */(function(__dirname) {module.exports =
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ 931:
/***/ (function(module) {

module.exports = function(originalModule) {
	if (!originalModule.webpackPolyfill) {
		var module = Object.create(originalModule);
		// module.parent = undefined by default
		if (!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		Object.defineProperty(module, "exports", {
			enumerable: true
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __nccwpck_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		var threw = true;
/******/ 		try {
/******/ 			__webpack_modules__[moduleId](module, module.exports, __nccwpck_require__);
/******/ 			threw = false;
/******/ 		} finally {
/******/ 			if(threw) delete __webpack_module_cache__[moduleId];
/******/ 		}
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat */
/******/ 	
/******/ 	__nccwpck_require__.ab = __dirname + "/";/************************************************************************/
/******/ 	// module exports must be returned from runtime so entry inlining is disabled
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	return __nccwpck_require__(931);
/******/ })()
;
/* WEBPACK VAR INJECTION */}.call(this, "/"))

/***/ }),

/***/ "./node_modules/next/dist/compiled/webpack/module.js":
/*!***********************************!*\
  !*** (webpack)/webpack/module.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

/* WEBPACK VAR INJECTION */(function(__dirname) {module.exports =
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ 880:
/***/ (function(module) {

module.exports = function(module) {
	if (!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if (!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __nccwpck_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		var threw = true;
/******/ 		try {
/******/ 			__webpack_modules__[moduleId](module, module.exports, __nccwpck_require__);
/******/ 			threw = false;
/******/ 		} finally {
/******/ 			if(threw) delete __webpack_module_cache__[moduleId];
/******/ 		}
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat */
/******/ 	
/******/ 	__nccwpck_require__.ab = __dirname + "/";/************************************************************************/
/******/ 	// module exports must be returned from runtime so entry inlining is disabled
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	return __nccwpck_require__(880);
/******/ })()
;
/* WEBPACK VAR INJECTION */}.call(this, "/"))

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/i18n/normalize-locale-path.js":
/*!******************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/i18n/normalize-locale-path.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

exports.__esModule = true;
exports.normalizeLocalePath = normalizeLocalePath;

function normalizeLocalePath(pathname, locales) {
  var detectedLocale; // first item will be empty string from splitting at first char

  var pathnameParts = pathname.split('/');
  (locales || []).some(function (locale) {
    if (pathnameParts[1].toLowerCase() === locale.toLowerCase()) {
      detectedLocale = locale;
      pathnameParts.splice(1, 1);
      pathname = pathnameParts.join('/') || '/';
      return true;
    }

    return false;
  });
  return {
    pathname: pathname,
    detectedLocale: detectedLocale
  };
}

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../compiled/webpack/module.js */ "./node_modules/next/dist/compiled/webpack/module.js")(module)))

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/mitt.js":
/*!********************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/mitt.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

exports.__esModule = true;
exports["default"] = mitt;
/*
MIT License
Copyright (c) Jason Miller (https://jasonformat.com/)
Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/
// This file is based on https://github.com/developit/mitt/blob/v1.1.3/src/index.js
// It's been edited for the needs of this script
// See the LICENSE at the top of the file

function mitt() {
  var all = Object.create(null);
  return {
    on: function on(type, handler) {
      ;
      (all[type] || (all[type] = [])).push(handler);
    },
    off: function off(type, handler) {
      if (all[type]) {
        all[type].splice(all[type].indexOf(handler) >>> 0, 1);
      }
    },
    emit: function emit(type) {
      for (var _len = arguments.length, evts = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        evts[_key - 1] = arguments[_key];
      }

      // eslint-disable-next-line array-callback-return
      ;
      (all[type] || []).slice().map(function (handler) {
        handler.apply(void 0, evts);
      });
    }
  };
}

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../compiled/webpack/module.js */ "./node_modules/next/dist/compiled/webpack/module.js")(module)))

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router-context.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router-context.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

exports.__esModule = true;
exports.RouterContext = void 0;

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

var RouterContext = /*#__PURE__*/_react["default"].createContext(null);

exports.RouterContext = RouterContext;

if (true) {
  RouterContext.displayName = 'RouterContext';
}

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../compiled/webpack/module.js */ "./node_modules/next/dist/compiled/webpack/module.js")(module)))

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/router.js":
/*!*****************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/router.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

var _regeneratorRuntime = __webpack_require__(/*! ./node_modules/@babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");

var _asyncToGenerator = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/asyncToGenerator */ "./node_modules/@babel/runtime/helpers/asyncToGenerator.js");

var _classCallCheck = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js");

var _createClass = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js");

var _slicedToArray = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/slicedToArray */ "./node_modules/@babel/runtime/helpers/slicedToArray.js");

exports.__esModule = true;
exports.getDomainLocale = getDomainLocale;
exports.addLocale = addLocale;
exports.delLocale = delLocale;
exports.hasBasePath = hasBasePath;
exports.addBasePath = addBasePath;
exports.delBasePath = delBasePath;
exports.isLocalURL = isLocalURL;
exports.interpolateAs = interpolateAs;
exports.resolveHref = resolveHref;
exports["default"] = void 0;

var _normalizeTrailingSlash = __webpack_require__(/*! ../../../client/normalize-trailing-slash */ "./node_modules/next/dist/client/normalize-trailing-slash.js");

var _routeLoader = __webpack_require__(/*! ../../../client/route-loader */ "./node_modules/next/dist/client/route-loader.js");

var _denormalizePagePath = __webpack_require__(/*! ../../server/denormalize-page-path */ "./node_modules/next/dist/next-server/server/denormalize-page-path.js");

var _normalizeLocalePath = __webpack_require__(/*! ../i18n/normalize-locale-path */ "./node_modules/next/dist/next-server/lib/i18n/normalize-locale-path.js");

var _mitt = _interopRequireDefault(__webpack_require__(/*! ../mitt */ "./node_modules/next/dist/next-server/lib/mitt.js"));

var _utils = __webpack_require__(/*! ../utils */ "./node_modules/next/dist/next-server/lib/utils.js");

var _isDynamic = __webpack_require__(/*! ./utils/is-dynamic */ "./node_modules/next/dist/next-server/lib/router/utils/is-dynamic.js");

var _parseRelativeUrl = __webpack_require__(/*! ./utils/parse-relative-url */ "./node_modules/next/dist/next-server/lib/router/utils/parse-relative-url.js");

var _querystring = __webpack_require__(/*! ./utils/querystring */ "./node_modules/next/dist/next-server/lib/router/utils/querystring.js");

var _resolveRewrites = _interopRequireDefault(__webpack_require__(/*! ./utils/resolve-rewrites */ "./node_modules/next/dist/next-server/lib/router/utils/resolve-rewrites-noop.js"));

var _routeMatcher = __webpack_require__(/*! ./utils/route-matcher */ "./node_modules/next/dist/next-server/lib/router/utils/route-matcher.js");

var _routeRegex = __webpack_require__(/*! ./utils/route-regex */ "./node_modules/next/dist/next-server/lib/router/utils/route-regex.js");

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}
/* global __NEXT_DATA__ */
// tslint:disable:no-console


var detectDomainLocale;

if (false) {}

var basePath =  false || '';

function buildCancellationError() {
  return Object.assign(new Error('Route Cancelled'), {
    cancelled: true
  });
}

function addPathPrefix(path, prefix) {
  return prefix && path.startsWith('/') ? path === '/' ? (0, _normalizeTrailingSlash.normalizePathTrailingSlash)(prefix) : "".concat(prefix).concat(pathNoQueryHash(path) === '/' ? path.substring(1) : path) : path;
}

function getDomainLocale(path, locale, locales, domainLocales) {
  if (false) { var detectedDomain; }

  return false;
}

function addLocale(path, locale, defaultLocale) {
  if (false) {}

  return path;
}

function delLocale(path, locale) {
  if (false) {}

  return path;
}

function pathNoQueryHash(path) {
  var queryIndex = path.indexOf('?');
  var hashIndex = path.indexOf('#');

  if (queryIndex > -1 || hashIndex > -1) {
    path = path.substring(0, queryIndex > -1 ? queryIndex : hashIndex);
  }

  return path;
}

function hasBasePath(path) {
  path = pathNoQueryHash(path);
  return path === basePath || path.startsWith(basePath + '/');
}

function addBasePath(path) {
  // we only add the basepath on relative urls
  return addPathPrefix(path, basePath);
}

function delBasePath(path) {
  path = path.slice(basePath.length);
  if (!path.startsWith('/')) path = "/".concat(path);
  return path;
}
/**
* Detects whether a given url is routable by the Next.js router (browser only).
*/


function isLocalURL(url) {
  // prevent a hydration mismatch on href for url with anchor refs
  if (url.startsWith('/') || url.startsWith('#')) return true;

  try {
    // absolute urls can be local if they are on the same origin
    var locationOrigin = (0, _utils.getLocationOrigin)();
    var resolved = new URL(url, locationOrigin);
    return resolved.origin === locationOrigin && hasBasePath(resolved.pathname);
  } catch (_) {
    return false;
  }
}

function interpolateAs(route, asPathname, query) {
  var interpolatedRoute = '';
  var dynamicRegex = (0, _routeRegex.getRouteRegex)(route);
  var dynamicGroups = dynamicRegex.groups;
  var dynamicMatches = // Try to match the dynamic route against the asPath
  (asPathname !== route ? (0, _routeMatcher.getRouteMatcher)(dynamicRegex)(asPathname) : '') || // Fall back to reading the values from the href
  // TODO: should this take priority; also need to change in the router.
  query;
  interpolatedRoute = route;
  var params = Object.keys(dynamicGroups);

  if (!params.every(function (param) {
    var value = dynamicMatches[param] || '';
    var _dynamicGroups$param = dynamicGroups[param],
        repeat = _dynamicGroups$param.repeat,
        optional = _dynamicGroups$param.optional; // support single-level catch-all
    // TODO: more robust handling for user-error (passing `/`)

    var replaced = "[".concat(repeat ? '...' : '').concat(param, "]");

    if (optional) {
      replaced = "".concat(!value ? '/' : '', "[").concat(replaced, "]");
    }

    if (repeat && !Array.isArray(value)) value = [value];
    return (optional || param in dynamicMatches) && ( // Interpolate group into data URL if present
    interpolatedRoute = interpolatedRoute.replace(replaced, repeat ? value.map( // these values should be fully encoded instead of just
    // path delimiter escaped since they are being inserted
    // into the URL and we expect URL encoded segments
    // when parsing dynamic route params
    function (segment) {
      return encodeURIComponent(segment);
    }).join('/') : encodeURIComponent(value)) || '/');
  })) {
    interpolatedRoute = ''; // did not satisfy all requirements
    // n.b. We ignore this error because we handle warning for this case in
    // development in the `<Link>` component directly.
  }

  return {
    params: params,
    result: interpolatedRoute
  };
}

function omitParmsFromQuery(query, params) {
  var filteredQuery = {};
  Object.keys(query).forEach(function (key) {
    if (!params.includes(key)) {
      filteredQuery[key] = query[key];
    }
  });
  return filteredQuery;
}
/**
* Resolves a given hyperlink with a certain router state (basePath not included).
* Preserves absolute urls.
*/


function resolveHref(currentPath, href, resolveAs) {
  // we use a dummy base url for relative urls
  var base = new URL(currentPath, 'http://n');
  var urlAsString = typeof href === 'string' ? href : (0, _utils.formatWithValidation)(href); // Return because it cannot be routed by the Next.js router

  if (!isLocalURL(urlAsString)) {
    return resolveAs ? [urlAsString] : urlAsString;
  }

  try {
    var finalUrl = new URL(urlAsString, base);
    finalUrl.pathname = (0, _normalizeTrailingSlash.normalizePathTrailingSlash)(finalUrl.pathname);
    var interpolatedAs = '';

    if ((0, _isDynamic.isDynamicRoute)(finalUrl.pathname) && finalUrl.searchParams && resolveAs) {
      var query = (0, _querystring.searchParamsToUrlQuery)(finalUrl.searchParams);

      var _interpolateAs = interpolateAs(finalUrl.pathname, finalUrl.pathname, query),
          result = _interpolateAs.result,
          params = _interpolateAs.params;

      if (result) {
        interpolatedAs = (0, _utils.formatWithValidation)({
          pathname: result,
          hash: finalUrl.hash,
          query: omitParmsFromQuery(query, params)
        });
      }
    } // if the origin didn't change, it means we received a relative href


    var resolvedHref = finalUrl.origin === base.origin ? finalUrl.href.slice(finalUrl.origin.length) : finalUrl.href;
    return resolveAs ? [resolvedHref, interpolatedAs || resolvedHref] : resolvedHref;
  } catch (_) {
    return resolveAs ? [urlAsString] : urlAsString;
  }
}

function stripOrigin(url) {
  var origin = (0, _utils.getLocationOrigin)();
  return url.startsWith(origin) ? url.substring(origin.length) : url;
}

function prepareUrlAs(router, url, as) {
  // If url and as provided as an object representation,
  // we'll format them into the string version here.
  var _resolveHref = resolveHref(router.pathname, url, true),
      _resolveHref2 = _slicedToArray(_resolveHref, 2),
      resolvedHref = _resolveHref2[0],
      resolvedAs = _resolveHref2[1];

  var origin = (0, _utils.getLocationOrigin)();
  var hrefHadOrigin = resolvedHref.startsWith(origin);
  var asHadOrigin = resolvedAs && resolvedAs.startsWith(origin);
  resolvedHref = stripOrigin(resolvedHref);
  resolvedAs = resolvedAs ? stripOrigin(resolvedAs) : resolvedAs;
  var preparedUrl = hrefHadOrigin ? resolvedHref : addBasePath(resolvedHref);
  var preparedAs = as ? stripOrigin(resolveHref(router.pathname, as)) : resolvedAs || resolvedHref;
  return {
    url: preparedUrl,
    as: asHadOrigin ? preparedAs : addBasePath(preparedAs)
  };
}

var manualScrollRestoration =  false && false;
var SSG_DATA_NOT_FOUND = Symbol('SSG_DATA_NOT_FOUND');

function fetchRetry(url, attempts) {
  return fetch(url, {
    // Cookies are required to be present for Next.js' SSG "Preview Mode".
    // Cookies may also be required for `getServerSideProps`.
    //
    // > `fetch` won’t send cookies, unless you set the credentials init
    // > option.
    // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch
    //
    // > For maximum browser compatibility when it comes to sending &
    // > receiving cookies, always supply the `credentials: 'same-origin'`
    // > option instead of relying on the default.
    // https://github.com/github/fetch#caveats
    credentials: 'same-origin'
  }).then(function (res) {
    if (!res.ok) {
      if (attempts > 1 && res.status >= 500) {
        return fetchRetry(url, attempts - 1);
      }

      if (res.status === 404) {
        return res.json().then(function (data) {
          if (data.notFound) {
            return {
              notFound: SSG_DATA_NOT_FOUND
            };
          }

          throw new Error("Failed to load static props");
        });
      }

      throw new Error("Failed to load static props");
    }

    return res.json();
  });
}

function fetchNextData(dataHref, isServerRender) {
  return fetchRetry(dataHref, isServerRender ? 3 : 1)["catch"](function (err) {
    // We should only trigger a server-side transition if this was caused
    // on a client-side transition. Otherwise, we'd get into an infinite
    // loop.
    if (!isServerRender) {
      (0, _routeLoader.markAssetError)(err);
    }

    throw err;
  });
}

var Router = /*#__PURE__*/function () {
  /**
  * Map of all components loaded in `Router`
  */
  // Static Data Cache
  function Router(_pathname, _query, _as, _ref) {
    var _this = this;

    var initialProps = _ref.initialProps,
        pageLoader = _ref.pageLoader,
        App = _ref.App,
        wrapApp = _ref.wrapApp,
        Component = _ref.Component,
        err = _ref.err,
        subscription = _ref.subscription,
        isFallback = _ref.isFallback,
        locale = _ref.locale,
        locales = _ref.locales,
        defaultLocale = _ref.defaultLocale,
        domainLocales = _ref.domainLocales;

    _classCallCheck(this, Router);

    this.route = void 0;
    this.pathname = void 0;
    this.query = void 0;
    this.asPath = void 0;
    this.basePath = void 0;
    this.components = void 0;
    this.sdc = {};
    this.sub = void 0;
    this.clc = void 0;
    this.pageLoader = void 0;
    this._bps = void 0;
    this.events = void 0;
    this._wrapApp = void 0;
    this.isSsr = void 0;
    this.isFallback = void 0;
    this._inFlightRoute = void 0;
    this._shallow = void 0;
    this.locale = void 0;
    this.locales = void 0;
    this.defaultLocale = void 0;
    this.domainLocales = void 0;
    this.isReady = void 0;
    this._idx = 0;

    this.onPopState = function (e) {
      var state = e.state;

      if (!state) {
        // We get state as undefined for two reasons.
        //  1. With older safari (< 8) and older chrome (< 34)
        //  2. When the URL changed with #
        //
        // In the both cases, we don't need to proceed and change the route.
        // (as it's already changed)
        // But we can simply replace the state with the new changes.
        // Actually, for (1) we don't need to nothing. But it's hard to detect that event.
        // So, doing the following for (1) does no harm.
        var _pathname2 = _this.pathname,
            query = _this.query;

        _this.changeState('replaceState', (0, _utils.formatWithValidation)({
          pathname: addBasePath(_pathname2),
          query: query
        }), (0, _utils.getURL)());

        return;
      }

      if (!state.__N) {
        return;
      }

      var forcedScroll;
      var url = state.url,
          as = state.as,
          options = state.options,
          idx = state.idx;

      if (false) { var v; }

      _this._idx = idx;

      var _ref2 = (0, _parseRelativeUrl.parseRelativeUrl)(url),
          pathname = _ref2.pathname; // Make sure we don't re-render on initial load,
      // can be caused by navigating back from an external site


      if (_this.isSsr && as === _this.asPath && pathname === _this.pathname) {
        return;
      } // If the downstream application returns falsy, return.
      // They will then be responsible for handling the event.


      if (_this._bps && !_this._bps(state)) {
        return;
      }

      _this.change('replaceState', url, as, Object.assign({}, options, {
        shallow: options.shallow && _this._shallow,
        locale: options.locale || _this.defaultLocale
      }), forcedScroll);
    }; // represents the current component key


    this.route = (0, _normalizeTrailingSlash.removePathTrailingSlash)(_pathname); // set up the component cache (by route keys)

    this.components = {}; // We should not keep the cache, if there's an error
    // Otherwise, this cause issues when when going back and
    // come again to the errored page.

    if (_pathname !== '/_error') {
      this.components[this.route] = {
        Component: Component,
        initial: true,
        props: initialProps,
        err: err,
        __N_SSG: initialProps && initialProps.__N_SSG,
        __N_SSP: initialProps && initialProps.__N_SSP
      };
    }

    this.components['/_app'] = {
      Component: App,
      styleSheets: [
        /* /_app does not need its stylesheets managed */
      ]
    }; // Backwards compat for Router.router.events
    // TODO: Should be remove the following major version as it was never documented

    this.events = Router.events;
    this.pageLoader = pageLoader;
    this.pathname = _pathname;
    this.query = _query; // if auto prerendered and dynamic route wait to update asPath
    // until after mount to prevent hydration mismatch

    var autoExportDynamic = (0, _isDynamic.isDynamicRoute)(_pathname) && self.__NEXT_DATA__.autoExport;

    this.asPath = autoExportDynamic ? _pathname : _as;
    this.basePath = basePath;
    this.sub = subscription;
    this.clc = null;
    this._wrapApp = wrapApp; // make sure to ignore extra popState in safari on navigating
    // back from external site

    this.isSsr = true;
    this.isFallback = isFallback;
    this.isReady = !!(self.__NEXT_DATA__.gssp || self.__NEXT_DATA__.gip || !autoExportDynamic && !self.location.search);

    if (false) {}

    if (true) {
      // make sure "as" doesn't start with double slashes or else it can
      // throw an error as it's considered invalid
      if (_as.substr(0, 2) !== '//') {
        // in order for `e.state` to work on the `onpopstate` event
        // we have to register the initial route upon initialization
        this.changeState('replaceState', (0, _utils.formatWithValidation)({
          pathname: addBasePath(_pathname),
          query: _query
        }), (0, _utils.getURL)(), {
          locale: locale
        });
      }

      window.addEventListener('popstate', this.onPopState); // enable custom scroll restoration handling when available
      // otherwise fallback to browser's default handling

      if (false) {}
    }
  }

  _createClass(Router, [{
    key: "reload",
    value: function reload() {
      window.location.reload();
    }
    /**
    * Go back in history
    */

  }, {
    key: "back",
    value: function back() {
      window.history.back();
    }
    /**
    * Performs a `pushState` with arguments
    * @param url of the route
    * @param as masks `url` for the browser
    * @param options object you can define `shallow` and other options
    */

  }, {
    key: "push",
    value: function push(url, as) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

      if (false) {}

      ;

      var _prepareUrlAs = prepareUrlAs(this, url, as);

      url = _prepareUrlAs.url;
      as = _prepareUrlAs.as;
      return this.change('pushState', url, as, options);
    }
    /**
    * Performs a `replaceState` with arguments
    * @param url of the route
    * @param as masks `url` for the browser
    * @param options object you can define `shallow` and other options
    */

  }, {
    key: "replace",
    value: function replace(url, as) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      ;

      var _prepareUrlAs2 = prepareUrlAs(this, url, as);

      url = _prepareUrlAs2.url;
      as = _prepareUrlAs2.as;
      return this.change('replaceState', url, as, options);
    }
  }, {
    key: "change",
    value: function () {
      var _change = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(method, url, as, options, forcedScroll) {
        var _this2 = this;

        var _options$scroll, localeChange, parsedAs, localePathResult, didNavigate, _this$locales, detectedDomain, asNoBasePath, _options$shallow, shallow, routeProps, cleanedAs, parsed, _parsed, pathname, query, pages, rewrites, _yield, route, resolvedAs, rewritesResult, _parsedAs, asPathname, routeRegex, routeMatch, shouldInterpolate, interpolatedAs, missingParams, routeInfo, _routeInfo, error, props, __N_SSG, __N_SSP, destination, parsedHref, _prepareUrlAs3, newUrl, newAs, notFoundRoute, appComp, isValidShallowRoute;

        return _regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (isLocalURL(url)) {
                  _context.next = 3;
                  break;
                }

                window.location.href = url;
                return _context.abrupt("return", false);

              case 3:
                // for static pages with query params in the URL we delay
                // marking the router ready until after the query is updated
                if (options._h) {
                  this.isReady = true;
                } // Default to scroll reset behavior unless explicitly specified to be
                // `false`! This makes the behavior between using `Router#push` and a
                // `<Link />` consistent.


                options.scroll = !!((_options$scroll = options.scroll) != null ? _options$scroll : true);
                localeChange = options.locale !== this.locale;

                if (true) {
                  _context.next = 18;
                  break;
                }

                this.locale = options.locale === false ? this.defaultLocale : options.locale || this.locale;

                if (typeof options.locale === 'undefined') {
                  options.locale = this.locale;
                }

                parsedAs = (0, _parseRelativeUrl.parseRelativeUrl)(hasBasePath(as) ? delBasePath(as) : as);
                localePathResult = (0, _normalizeLocalePath.normalizeLocalePath)(parsedAs.pathname, this.locales);

                if (localePathResult.detectedLocale) {
                  this.locale = localePathResult.detectedLocale;
                  parsedAs.pathname = addBasePath(parsedAs.pathname);
                  as = (0, _utils.formatWithValidation)(parsedAs);
                  url = addBasePath((0, _normalizeLocalePath.normalizeLocalePath)(hasBasePath(url) ? delBasePath(url) : url, this.locales).pathname);
                }

                didNavigate = false; // we need to wrap this in the env check again since regenerator runtime
                // moves this on its own due to the return

                if (false) {}

                detectedDomain = detectDomainLocale(this.domainLocales, undefined, this.locale); // we need to wrap this in the env check again since regenerator runtime
                // moves this on its own due to the return

                if (false) {}

                if (!didNavigate) {
                  _context.next = 18;
                  break;
                }

                return _context.abrupt("return", new Promise(function () {}));

              case 18:
                if (!options._h) {
                  this.isSsr = false;
                } // marking route changes as a navigation start entry


                if (_utils.ST) {
                  performance.mark('routeChange');
                }

                _options$shallow = options.shallow, shallow = _options$shallow === void 0 ? false : _options$shallow;
                routeProps = {
                  shallow: shallow
                };

                if (this._inFlightRoute) {
                  this.abortComponentLoad(this._inFlightRoute, routeProps);
                }

                as = addBasePath(addLocale(hasBasePath(as) ? delBasePath(as) : as, options.locale, this.defaultLocale));
                cleanedAs = delLocale(hasBasePath(as) ? delBasePath(as) : as, this.locale);
                this._inFlightRoute = as; // If the url change is only related to a hash change
                // We should not proceed. We should only change the state.
                // WARNING: `_h` is an internal option for handing Next.js client-side
                // hydration. Your app should _never_ use this property. It may change at
                // any time without notice.

                if (!(!options._h && this.onlyAHashChange(cleanedAs))) {
                  _context.next = 34;
                  break;
                }

                this.asPath = cleanedAs;
                Router.events.emit('hashChangeStart', as, routeProps); // TODO: do we need the resolved href when only a hash change?

                this.changeState(method, url, as, options);
                this.scrollToHash(cleanedAs);
                this.notify(this.components[this.route], null);
                Router.events.emit('hashChangeComplete', as, routeProps);
                return _context.abrupt("return", true);

              case 34:
                parsed = (0, _parseRelativeUrl.parseRelativeUrl)(url);
                _parsed = parsed, pathname = _parsed.pathname, query = _parsed.query; // The build manifest needs to be loaded before auto-static dynamic pages
                // get their query parameters to allow ensuring they can be parsed properly
                // when rewritten to

                _context.prev = 36;
                _context.next = 39;
                return this.pageLoader.getPageList();

              case 39:
                pages = _context.sent;
                _context.next = 42;
                return (0, _routeLoader.getClientBuildManifest)();

              case 42:
                _yield = _context.sent;
                rewrites = _yield.__rewrites;
                _context.next = 50;
                break;

              case 46:
                _context.prev = 46;
                _context.t0 = _context["catch"](36);
                // If we fail to resolve the page list or client-build manifest, we must
                // do a server-side transition:
                window.location.href = as;
                return _context.abrupt("return", false);

              case 50:
                parsed = this._resolveHref(parsed, pages);

                if (parsed.pathname !== pathname) {
                  pathname = parsed.pathname;
                  url = (0, _utils.formatWithValidation)(parsed);
                } // url and as should always be prefixed with basePath by this
                // point by either next/link or router.push/replace so strip the
                // basePath from the pathname to match the pages dir 1-to-1


                pathname = pathname ? (0, _normalizeTrailingSlash.removePathTrailingSlash)(delBasePath(pathname)) : pathname; // If asked to change the current URL we should reload the current page
                // (not location.reload() but reload getInitialProps and other Next.js stuffs)
                // We also need to set the method = replaceState always
                // as this should not go into the history (That's how browsers work)
                // We should compare the new asPath to the current asPath, not the url

                if (!this.urlIsNew(cleanedAs) && !localeChange) {
                  method = 'replaceState';
                }

                route = (0, _normalizeTrailingSlash.removePathTrailingSlash)(pathname); // we need to resolve the as value using rewrites for dynamic SSG
                // pages to allow building the data URL correctly

                resolvedAs = as;

                if (false) {}

                if (isLocalURL(as)) {
                  _context.next = 62;
                  break;
                }

                if (false) {}

                throw new Error("Invalid href: \"".concat(url, "\" and as: \"").concat(as, "\", received relative href and external as") + "\nSee more info: https://err.sh/next.js/invalid-relative-url-external-as");

              case 60:
                window.location.href = as;
                return _context.abrupt("return", false);

              case 62:
                resolvedAs = delLocale(delBasePath(resolvedAs), this.locale);

                if (!(0, _isDynamic.isDynamicRoute)(route)) {
                  _context.next = 78;
                  break;
                }

                _parsedAs = (0, _parseRelativeUrl.parseRelativeUrl)(resolvedAs);
                asPathname = _parsedAs.pathname;
                routeRegex = (0, _routeRegex.getRouteRegex)(route);
                routeMatch = (0, _routeMatcher.getRouteMatcher)(routeRegex)(asPathname);
                shouldInterpolate = route === asPathname;
                interpolatedAs = shouldInterpolate ? interpolateAs(route, asPathname, query) : {};

                if (!(!routeMatch || shouldInterpolate && !interpolatedAs.result)) {
                  _context.next = 77;
                  break;
                }

                missingParams = Object.keys(routeRegex.groups).filter(function (param) {
                  return !query[param];
                });

                if (!(missingParams.length > 0)) {
                  _context.next = 75;
                  break;
                }

                if (true) {
                  console.warn("".concat(shouldInterpolate ? "Interpolating href" : "Mismatching `as` and `href`", " failed to manually provide ") + "the params: ".concat(missingParams.join(', '), " in the `href`'s `query`"));
                }

                throw new Error((shouldInterpolate ? "The provided `href` (".concat(url, ") value is missing query values (").concat(missingParams.join(', '), ") to be interpolated properly. ") : "The provided `as` value (".concat(asPathname, ") is incompatible with the `href` value (").concat(route, "). ")) + "Read more: https://err.sh/vercel/next.js/".concat(shouldInterpolate ? 'href-interpolation-failed' : 'incompatible-href-as'));

              case 75:
                _context.next = 78;
                break;

              case 77:
                if (shouldInterpolate) {
                  as = (0, _utils.formatWithValidation)(Object.assign({}, _parsedAs, {
                    pathname: interpolatedAs.result,
                    query: omitParmsFromQuery(query, interpolatedAs.params)
                  }));
                } else {
                  // Merge params into `query`, overwriting any specified in search
                  Object.assign(query, routeMatch);
                }

              case 78:
                Router.events.emit('routeChangeStart', as, routeProps);
                _context.prev = 79;
                _context.next = 82;
                return this.getRouteInfo(route, pathname, query, as, resolvedAs, routeProps);

              case 82:
                routeInfo = _context.sent;
                _routeInfo = routeInfo, error = _routeInfo.error, props = _routeInfo.props, __N_SSG = _routeInfo.__N_SSG, __N_SSP = _routeInfo.__N_SSP; // handle redirect on client-transition

                if (!((__N_SSG || __N_SSP) && props)) {
                  _context.next = 108;
                  break;
                }

                if (!(props.pageProps && props.pageProps.__N_REDIRECT)) {
                  _context.next = 95;
                  break;
                }

                destination = props.pageProps.__N_REDIRECT; // check if destination is internal (resolves to a page) and attempt
                // client-navigation if it is falling back to hard navigation if
                // it's not

                if (!destination.startsWith('/')) {
                  _context.next = 93;
                  break;
                }

                parsedHref = (0, _parseRelativeUrl.parseRelativeUrl)(destination);

                this._resolveHref(parsedHref, pages, false);

                if (!pages.includes(parsedHref.pathname)) {
                  _context.next = 93;
                  break;
                }

                _prepareUrlAs3 = prepareUrlAs(this, destination, destination), newUrl = _prepareUrlAs3.url, newAs = _prepareUrlAs3.as;
                return _context.abrupt("return", this.change(method, newUrl, newAs, options));

              case 93:
                window.location.href = destination;
                return _context.abrupt("return", new Promise(function () {}));

              case 95:
                if (!(props.notFound === SSG_DATA_NOT_FOUND)) {
                  _context.next = 108;
                  break;
                }

                _context.prev = 96;
                _context.next = 99;
                return this.fetchComponent('/404');

              case 99:
                notFoundRoute = '/404';
                _context.next = 105;
                break;

              case 102:
                _context.prev = 102;
                _context.t1 = _context["catch"](96);
                notFoundRoute = '/_error';

              case 105:
                _context.next = 107;
                return this.getRouteInfo(notFoundRoute, notFoundRoute, query, as, resolvedAs, {
                  shallow: false
                });

              case 107:
                routeInfo = _context.sent;

              case 108:
                Router.events.emit('beforeHistoryChange', as, routeProps);
                this.changeState(method, url, as, options);

                if (true) {
                  appComp = this.components['/_app'].Component;
                  window.next.isPrerendered = appComp.getInitialProps === appComp.origGetInitialProps && !routeInfo.Component.getInitialProps;
                } // shallow routing is only allowed for same page URL changes.


                isValidShallowRoute = options.shallow && this.route === route;
                _context.next = 114;
                return this.set(route, pathname, query, cleanedAs, routeInfo, forcedScroll || (isValidShallowRoute || !options.scroll ? null : {
                  x: 0,
                  y: 0
                }))["catch"](function (e) {
                  if (e.cancelled) error = error || e;else throw e;
                });

              case 114:
                if (!error) {
                  _context.next = 117;
                  break;
                }

                Router.events.emit('routeChangeError', error, cleanedAs, routeProps);
                throw error;

              case 117:
                if (false) {}

                Router.events.emit('routeChangeComplete', as, routeProps);
                return _context.abrupt("return", true);

              case 122:
                _context.prev = 122;
                _context.t2 = _context["catch"](79);

                if (!_context.t2.cancelled) {
                  _context.next = 126;
                  break;
                }

                return _context.abrupt("return", false);

              case 126:
                throw _context.t2;

              case 127:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this, [[36, 46], [79, 122], [96, 102]]);
      }));

      function change(_x, _x2, _x3, _x4, _x5) {
        return _change.apply(this, arguments);
      }

      return change;
    }()
  }, {
    key: "changeState",
    value: function changeState(method, url, as) {
      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

      if (true) {
        if (typeof window.history === 'undefined') {
          console.error("Warning: window.history is not available.");
          return;
        }

        if (typeof window.history[method] === 'undefined') {
          console.error("Warning: window.history.".concat(method, " is not available"));
          return;
        }
      }

      if (method !== 'pushState' || (0, _utils.getURL)() !== as) {
        this._shallow = options.shallow;
        window.history[method]({
          url: url,
          as: as,
          options: options,
          __N: true,
          idx: this._idx = method !== 'pushState' ? this._idx : this._idx + 1
        }, // Most browsers currently ignores this parameter, although they may use it in the future.
        // Passing the empty string here should be safe against future changes to the method.
        // https://developer.mozilla.org/en-US/docs/Web/API/History/replaceState
        '', as);
      }
    }
  }, {
    key: "handleRouteInfoError",
    value: function () {
      var _handleRouteInfoError = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(err, pathname, query, as, routeProps, loadErrorFail) {
        var Component, styleSheets, props, _yield$this$fetchComp, routeInfo;

        return _regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                if (!err.cancelled) {
                  _context2.next = 2;
                  break;
                }

                throw err;

              case 2:
                if (!((0, _routeLoader.isAssetError)(err) || loadErrorFail)) {
                  _context2.next = 6;
                  break;
                }

                Router.events.emit('routeChangeError', err, as, routeProps); // If we can't load the page it could be one of following reasons
                //  1. Page doesn't exists
                //  2. Page does exist in a different zone
                //  3. Internal error while loading the page
                // So, doing a hard reload is the proper way to deal with this.

                window.location.href = as; // Changing the URL doesn't block executing the current code path.
                // So let's throw a cancellation error stop the routing logic.

                throw buildCancellationError();

              case 6:
                _context2.prev = 6;

                if (!(typeof Component === 'undefined' || typeof styleSheets === 'undefined')) {
                  _context2.next = 14;
                  break;
                }

                ;
                _context2.next = 11;
                return this.fetchComponent('/_error');

              case 11:
                _yield$this$fetchComp = _context2.sent;
                Component = _yield$this$fetchComp.page;
                styleSheets = _yield$this$fetchComp.styleSheets;

              case 14:
                routeInfo = {
                  props: props,
                  Component: Component,
                  styleSheets: styleSheets,
                  err: err,
                  error: err
                };

                if (routeInfo.props) {
                  _context2.next = 26;
                  break;
                }

                _context2.prev = 16;
                _context2.next = 19;
                return this.getInitialProps(Component, {
                  err: err,
                  pathname: pathname,
                  query: query
                });

              case 19:
                routeInfo.props = _context2.sent;
                _context2.next = 26;
                break;

              case 22:
                _context2.prev = 22;
                _context2.t0 = _context2["catch"](16);
                console.error('Error in error page `getInitialProps`: ', _context2.t0);
                routeInfo.props = {};

              case 26:
                return _context2.abrupt("return", routeInfo);

              case 29:
                _context2.prev = 29;
                _context2.t1 = _context2["catch"](6);
                return _context2.abrupt("return", this.handleRouteInfoError(_context2.t1, pathname, query, as, routeProps, true));

              case 32:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this, [[6, 29], [16, 22]]);
      }));

      function handleRouteInfoError(_x6, _x7, _x8, _x9, _x10, _x11) {
        return _handleRouteInfoError.apply(this, arguments);
      }

      return handleRouteInfoError;
    }()
  }, {
    key: "getRouteInfo",
    value: function () {
      var _getRouteInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(route, pathname, query, as, resolvedAs, routeProps) {
        var _this3 = this;

        var existingRouteInfo, cachedRouteInfo, routeInfo, Component, __N_SSG, __N_SSP, _require, isValidElementType, dataHref, props;

        return _regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.prev = 0;
                existingRouteInfo = this.components[route];

                if (!(routeProps.shallow && existingRouteInfo && this.route === route)) {
                  _context3.next = 4;
                  break;
                }

                return _context3.abrupt("return", existingRouteInfo);

              case 4:
                cachedRouteInfo = existingRouteInfo && 'initial' in existingRouteInfo ? undefined : existingRouteInfo;

                if (!cachedRouteInfo) {
                  _context3.next = 9;
                  break;
                }

                _context3.t0 = cachedRouteInfo;
                _context3.next = 12;
                break;

              case 9:
                _context3.next = 11;
                return this.fetchComponent(route).then(function (res) {
                  return {
                    Component: res.page,
                    styleSheets: res.styleSheets,
                    __N_SSG: res.mod.__N_SSG,
                    __N_SSP: res.mod.__N_SSP
                  };
                });

              case 11:
                _context3.t0 = _context3.sent;

              case 12:
                routeInfo = _context3.t0;
                Component = routeInfo.Component, __N_SSG = routeInfo.__N_SSG, __N_SSP = routeInfo.__N_SSP;

                if (false) {}

                _require = __webpack_require__(/*! react-is */ "./node_modules/react-is/index.js"), isValidElementType = _require.isValidElementType;

                if (isValidElementType(Component)) {
                  _context3.next = 18;
                  break;
                }

                throw new Error("The default export is not a React Component in page: \"".concat(pathname, "\""));

              case 18:
                if (__N_SSG || __N_SSP) {
                  dataHref = this.pageLoader.getDataHref((0, _utils.formatWithValidation)({
                    pathname: pathname,
                    query: query
                  }), resolvedAs, __N_SSG, this.locale);
                }

                _context3.next = 21;
                return this._getData(function () {
                  return __N_SSG ? _this3._getStaticData(dataHref) : __N_SSP ? _this3._getServerData(dataHref) : _this3.getInitialProps(Component, // we provide AppTree later so this needs to be `any`
                  {
                    pathname: pathname,
                    query: query,
                    asPath: as
                  });
                });

              case 21:
                props = _context3.sent;
                routeInfo.props = props;
                this.components[route] = routeInfo;
                return _context3.abrupt("return", routeInfo);

              case 27:
                _context3.prev = 27;
                _context3.t1 = _context3["catch"](0);
                return _context3.abrupt("return", this.handleRouteInfoError(_context3.t1, pathname, query, as, routeProps));

              case 30:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this, [[0, 27]]);
      }));

      function getRouteInfo(_x12, _x13, _x14, _x15, _x16, _x17) {
        return _getRouteInfo.apply(this, arguments);
      }

      return getRouteInfo;
    }()
  }, {
    key: "set",
    value: function set(route, pathname, query, as, data, resetScroll) {
      this.isFallback = false;
      this.route = route;
      this.pathname = pathname;
      this.query = query;
      this.asPath = as;
      return this.notify(data, resetScroll);
    }
    /**
    * Callback to execute before replacing router state
    * @param cb callback to be executed
    */

  }, {
    key: "beforePopState",
    value: function beforePopState(cb) {
      this._bps = cb;
    }
  }, {
    key: "onlyAHashChange",
    value: function onlyAHashChange(as) {
      if (!this.asPath) return false;

      var _this$asPath$split = this.asPath.split('#'),
          _this$asPath$split2 = _slicedToArray(_this$asPath$split, 2),
          oldUrlNoHash = _this$asPath$split2[0],
          oldHash = _this$asPath$split2[1];

      var _as$split = as.split('#'),
          _as$split2 = _slicedToArray(_as$split, 2),
          newUrlNoHash = _as$split2[0],
          newHash = _as$split2[1]; // Makes sure we scroll to the provided hash if the url/hash are the same


      if (newHash && oldUrlNoHash === newUrlNoHash && oldHash === newHash) {
        return true;
      } // If the urls are change, there's more than a hash change


      if (oldUrlNoHash !== newUrlNoHash) {
        return false;
      } // If the hash has changed, then it's a hash only change.
      // This check is necessary to handle both the enter and
      // leave hash === '' cases. The identity case falls through
      // and is treated as a next reload.


      return oldHash !== newHash;
    }
  }, {
    key: "scrollToHash",
    value: function scrollToHash(as) {
      var _as$split3 = as.split('#'),
          _as$split4 = _slicedToArray(_as$split3, 2),
          hash = _as$split4[1]; // Scroll to top if the hash is just `#` with no value


      if (hash === '') {
        window.scrollTo(0, 0);
        return;
      } // First we check if the element by id is found


      var idEl = document.getElementById(hash);

      if (idEl) {
        idEl.scrollIntoView();
        return;
      } // If there's no element with the id, we check the `name` property
      // To mirror browsers


      var nameEl = document.getElementsByName(hash)[0];

      if (nameEl) {
        nameEl.scrollIntoView();
      }
    }
  }, {
    key: "urlIsNew",
    value: function urlIsNew(asPath) {
      return this.asPath !== asPath;
    }
  }, {
    key: "_resolveHref",
    value: function _resolveHref(parsedHref, pages) {
      var applyBasePath = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
      var pathname = parsedHref.pathname;
      var cleanPathname = (0, _normalizeTrailingSlash.removePathTrailingSlash)((0, _denormalizePagePath.denormalizePagePath)(applyBasePath ? delBasePath(pathname) : pathname));

      if (cleanPathname === '/404' || cleanPathname === '/_error') {
        return parsedHref;
      } // handle resolving href for dynamic routes


      if (!pages.includes(cleanPathname)) {
        // eslint-disable-next-line array-callback-return
        pages.some(function (page) {
          if ((0, _isDynamic.isDynamicRoute)(page) && (0, _routeRegex.getRouteRegex)(page).re.test(cleanPathname)) {
            parsedHref.pathname = applyBasePath ? addBasePath(page) : page;
            return true;
          }
        });
      }

      parsedHref.pathname = (0, _normalizeTrailingSlash.removePathTrailingSlash)(parsedHref.pathname);
      return parsedHref;
    }
    /**
    * Prefetch page code, you may wait for the data during page rendering.
    * This feature only works in production!
    * @param url the href of prefetched page
    * @param asPath the as path of the prefetched page
    */

  }, {
    key: "prefetch",
    value: function () {
      var _prefetch = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(url) {
        var _this4 = this;

        var asPath,
            options,
            parsed,
            _parsed2,
            pathname,
            parsedAs,
            localePathResult,
            pages,
            route,
            _args4 = arguments;

        return _regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                asPath = _args4.length > 1 && _args4[1] !== undefined ? _args4[1] : url;
                options = _args4.length > 2 && _args4[2] !== undefined ? _args4[2] : {};
                parsed = (0, _parseRelativeUrl.parseRelativeUrl)(url);
                _parsed2 = parsed, pathname = _parsed2.pathname;

                if (false) {}

                _context4.next = 7;
                return this.pageLoader.getPageList();

              case 7:
                pages = _context4.sent;
                parsed = this._resolveHref(parsed, pages, false);

                if (parsed.pathname !== pathname) {
                  pathname = parsed.pathname;
                  url = (0, _utils.formatWithValidation)(parsed);
                } // Prefetch is not supported in development mode because it would trigger on-demand-entries


                if (false) {}

                return _context4.abrupt("return");

              case 12:
                route = (0, _normalizeTrailingSlash.removePathTrailingSlash)(pathname);
                _context4.next = 15;
                return Promise.all([this.pageLoader._isSsg(url).then(function (isSsg) {
                  return isSsg ? _this4._getStaticData(_this4.pageLoader.getDataHref(url, asPath, true, typeof options.locale !== 'undefined' ? options.locale : _this4.locale)) : false;
                }), this.pageLoader[options.priority ? 'loadPage' : 'prefetch'](route)]);

              case 15:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function prefetch(_x18) {
        return _prefetch.apply(this, arguments);
      }

      return prefetch;
    }()
  }, {
    key: "fetchComponent",
    value: function () {
      var _fetchComponent = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(route) {
        var cancelled, cancel, componentResult, error;
        return _regeneratorRuntime.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                cancelled = false;

                cancel = this.clc = function () {
                  cancelled = true;
                };

                _context5.next = 4;
                return this.pageLoader.loadPage(route);

              case 4:
                componentResult = _context5.sent;

                if (!cancelled) {
                  _context5.next = 9;
                  break;
                }

                error = new Error("Abort fetching component for route: \"".concat(route, "\""));
                error.cancelled = true;
                throw error;

              case 9:
                if (cancel === this.clc) {
                  this.clc = null;
                }

                return _context5.abrupt("return", componentResult);

              case 11:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));

      function fetchComponent(_x19) {
        return _fetchComponent.apply(this, arguments);
      }

      return fetchComponent;
    }()
  }, {
    key: "_getData",
    value: function _getData(fn) {
      var _this5 = this;

      var cancelled = false;

      var cancel = function cancel() {
        cancelled = true;
      };

      this.clc = cancel;
      return fn().then(function (data) {
        if (cancel === _this5.clc) {
          _this5.clc = null;
        }

        if (cancelled) {
          var err = new Error('Loading initial props cancelled');
          err.cancelled = true;
          throw err;
        }

        return data;
      });
    }
  }, {
    key: "_getStaticData",
    value: function _getStaticData(dataHref) {
      var _this6 = this;

      var _URL = new URL(dataHref, window.location.href),
          cacheKey = _URL.href;

      if (false) {}

      return fetchNextData(dataHref, this.isSsr).then(function (data) {
        _this6.sdc[cacheKey] = data;
        return data;
      });
    }
  }, {
    key: "_getServerData",
    value: function _getServerData(dataHref) {
      return fetchNextData(dataHref, this.isSsr);
    }
  }, {
    key: "getInitialProps",
    value: function getInitialProps(Component, ctx) {
      var App = this.components['/_app'].Component;

      var AppTree = this._wrapApp(App);

      ctx.AppTree = AppTree;
      return (0, _utils.loadGetInitialProps)(App, {
        AppTree: AppTree,
        Component: Component,
        router: this,
        ctx: ctx
      });
    }
  }, {
    key: "abortComponentLoad",
    value: function abortComponentLoad(as, routeProps) {
      if (this.clc) {
        Router.events.emit('routeChangeError', buildCancellationError(), as, routeProps);
        this.clc();
        this.clc = null;
      }
    }
  }, {
    key: "notify",
    value: function notify(data, resetScroll) {
      return this.sub(data, this.components['/_app'].Component, resetScroll);
    }
  }]);

  return Router;
}();

exports["default"] = Router;
Router.events = (0, _mitt["default"])();

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../compiled/webpack/module.js */ "./node_modules/next/dist/compiled/webpack/module.js")(module)))

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/format-url.js":
/*!***************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/format-url.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

exports.__esModule = true;
exports.formatUrl = formatUrl;

var querystring = _interopRequireWildcard(__webpack_require__(/*! ./querystring */ "./node_modules/next/dist/next-server/lib/router/utils/querystring.js"));

function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();

  _getRequireWildcardCache = function _getRequireWildcardCache() {
    return cache;
  };

  return cache;
}

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      "default": obj
    };
  }

  var cache = _getRequireWildcardCache();

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj["default"] = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
} // Format function modified from nodejs
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.


var slashedProtocols = /https?|ftp|gopher|file/;

function formatUrl(urlObj) {
  var auth = urlObj.auth,
      hostname = urlObj.hostname;
  var protocol = urlObj.protocol || '';
  var pathname = urlObj.pathname || '';
  var hash = urlObj.hash || '';
  var query = urlObj.query || '';
  var host = false;
  auth = auth ? encodeURIComponent(auth).replace(/%3A/i, ':') + '@' : '';

  if (urlObj.host) {
    host = auth + urlObj.host;
  } else if (hostname) {
    host = auth + (~hostname.indexOf(':') ? "[".concat(hostname, "]") : hostname);

    if (urlObj.port) {
      host += ':' + urlObj.port;
    }
  }

  if (query && typeof query === 'object') {
    query = String(querystring.urlQueryToSearchParams(query));
  }

  var search = urlObj.search || query && "?".concat(query) || '';
  if (protocol && protocol.substr(-1) !== ':') protocol += ':';

  if (urlObj.slashes || (!protocol || slashedProtocols.test(protocol)) && host !== false) {
    host = '//' + (host || '');
    if (pathname && pathname[0] !== '/') pathname = '/' + pathname;
  } else if (!host) {
    host = '';
  }

  if (hash && hash[0] !== '#') hash = '#' + hash;
  if (search && search[0] !== '?') search = '?' + search;
  pathname = pathname.replace(/[?#]/g, encodeURIComponent);
  search = search.replace('#', '%23');
  return "".concat(protocol).concat(host).concat(pathname).concat(search).concat(hash);
}

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../compiled/webpack/module.js */ "./node_modules/next/dist/compiled/webpack/module.js")(module)))

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/get-asset-path-from-route.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/get-asset-path-from-route.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

exports.__esModule = true;
exports["default"] = getAssetPathFromRoute; // Translates a logical route into its pages asset path (relative from a common prefix)
// "asset path" being its javascript file, data file, prerendered html,...

function getAssetPathFromRoute(route) {
  var ext = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  var path = route === '/' ? '/index' : /^\/index(\/|$)/.test(route) ? "/index".concat(route) : "".concat(route);
  return path + ext;
}

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../compiled/webpack/module.js */ "./node_modules/next/dist/compiled/webpack/module.js")(module)))

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/is-dynamic.js":
/*!***************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/is-dynamic.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

exports.__esModule = true;
exports.isDynamicRoute = isDynamicRoute; // Identify /[param]/ in route string

var TEST_ROUTE = /\/\[[^/]+?\](?=\/|$)/;

function isDynamicRoute(route) {
  return TEST_ROUTE.test(route);
}

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../compiled/webpack/module.js */ "./node_modules/next/dist/compiled/webpack/module.js")(module)))

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/parse-relative-url.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/parse-relative-url.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

exports.__esModule = true;
exports.parseRelativeUrl = parseRelativeUrl;

var _utils = __webpack_require__(/*! ../../utils */ "./node_modules/next/dist/next-server/lib/utils.js");

var _querystring = __webpack_require__(/*! ./querystring */ "./node_modules/next/dist/next-server/lib/router/utils/querystring.js");
/**
* Parses path-relative urls (e.g. `/hello/world?foo=bar`). If url isn't path-relative
* (e.g. `./hello`) then at least base must be.
* Absolute urls are rejected with one exception, in the browser, absolute urls that are on
* the current origin will be parsed as relative
*/


function parseRelativeUrl(url, base) {
  var globalBase = new URL(false ? undefined : (0, _utils.getLocationOrigin)());
  var resolvedBase = base ? new URL(base, globalBase) : globalBase;

  var _URL = new URL(url, resolvedBase),
      pathname = _URL.pathname,
      searchParams = _URL.searchParams,
      search = _URL.search,
      hash = _URL.hash,
      href = _URL.href,
      origin = _URL.origin;

  if (origin !== globalBase.origin) {
    throw new Error("invariant: invalid relative URL, router received ".concat(url));
  }

  return {
    pathname: pathname,
    query: (0, _querystring.searchParamsToUrlQuery)(searchParams),
    search: search,
    hash: hash,
    href: href.slice(globalBase.origin.length)
  };
}

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../compiled/webpack/module.js */ "./node_modules/next/dist/compiled/webpack/module.js")(module)))

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/querystring.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/querystring.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

var _slicedToArray = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/slicedToArray */ "./node_modules/@babel/runtime/helpers/slicedToArray.js");

exports.__esModule = true;
exports.searchParamsToUrlQuery = searchParamsToUrlQuery;
exports.urlQueryToSearchParams = urlQueryToSearchParams;
exports.assign = assign;

function searchParamsToUrlQuery(searchParams) {
  var query = {};
  searchParams.forEach(function (value, key) {
    if (typeof query[key] === 'undefined') {
      query[key] = value;
    } else if (Array.isArray(query[key])) {
      ;
      query[key].push(value);
    } else {
      query[key] = [query[key], value];
    }
  });
  return query;
}

function stringifyUrlQueryParam(param) {
  if (typeof param === 'string' || typeof param === 'number' && !isNaN(param) || typeof param === 'boolean') {
    return String(param);
  } else {
    return '';
  }
}

function urlQueryToSearchParams(urlQuery) {
  var result = new URLSearchParams();
  Object.entries(urlQuery).forEach(function (_ref) {
    var _ref2 = _slicedToArray(_ref, 2),
        key = _ref2[0],
        value = _ref2[1];

    if (Array.isArray(value)) {
      value.forEach(function (item) {
        return result.append(key, stringifyUrlQueryParam(item));
      });
    } else {
      result.set(key, stringifyUrlQueryParam(value));
    }
  });
  return result;
}

function assign(target) {
  for (var _len = arguments.length, searchParamsList = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    searchParamsList[_key - 1] = arguments[_key];
  }

  searchParamsList.forEach(function (searchParams) {
    Array.from(searchParams.keys()).forEach(function (key) {
      return target["delete"](key);
    });
    searchParams.forEach(function (value, key) {
      return target.append(key, value);
    });
  });
  return target;
}

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../compiled/webpack/module.js */ "./node_modules/next/dist/compiled/webpack/module.js")(module)))

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/resolve-rewrites-noop.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/resolve-rewrites-noop.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

exports.__esModule = true;
exports["default"] = resolveRewrites;

function resolveRewrites() {}

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../compiled/webpack/module.js */ "./node_modules/next/dist/compiled/webpack/module.js")(module)))

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/route-matcher.js":
/*!******************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/route-matcher.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

exports.__esModule = true;
exports.getRouteMatcher = getRouteMatcher;

function getRouteMatcher(routeRegex) {
  var re = routeRegex.re,
      groups = routeRegex.groups;
  return function (pathname) {
    var routeMatch = re.exec(pathname);

    if (!routeMatch) {
      return false;
    }

    var decode = function decode(param) {
      try {
        return decodeURIComponent(param);
      } catch (_) {
        var err = new Error('failed to decode param');
        err.code = 'DECODE_FAILED';
        throw err;
      }
    };

    var params = {};
    Object.keys(groups).forEach(function (slugName) {
      var g = groups[slugName];
      var m = routeMatch[g.pos];

      if (m !== undefined) {
        params[slugName] = ~m.indexOf('/') ? m.split('/').map(function (entry) {
          return decode(entry);
        }) : g.repeat ? [decode(m)] : decode(m);
      }
    });
    return params;
  };
}

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../compiled/webpack/module.js */ "./node_modules/next/dist/compiled/webpack/module.js")(module)))

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/route-regex.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/route-regex.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

exports.__esModule = true;
exports.getRouteRegex = getRouteRegex; // this isn't importing the escape-string-regex module
// to reduce bytes

function escapeRegex(str) {
  return str.replace(/[|\\{}()[\]^$+*?.-]/g, '\\$&');
}

function parseParameter(param) {
  var optional = param.startsWith('[') && param.endsWith(']');

  if (optional) {
    param = param.slice(1, -1);
  }

  var repeat = param.startsWith('...');

  if (repeat) {
    param = param.slice(3);
  }

  return {
    key: param,
    repeat: repeat,
    optional: optional
  };
}

function getRouteRegex(normalizedRoute) {
  var segments = (normalizedRoute.replace(/\/$/, '') || '/').slice(1).split('/');
  var groups = {};
  var groupIndex = 1;
  var parameterizedRoute = segments.map(function (segment) {
    if (segment.startsWith('[') && segment.endsWith(']')) {
      var _parseParameter = parseParameter(segment.slice(1, -1)),
          key = _parseParameter.key,
          optional = _parseParameter.optional,
          repeat = _parseParameter.repeat;

      groups[key] = {
        pos: groupIndex++,
        repeat: repeat,
        optional: optional
      };
      return repeat ? optional ? '(?:/(.+?))?' : '/(.+?)' : '/([^/]+?)';
    } else {
      return "/".concat(escapeRegex(segment));
    }
  }).join(''); // dead code eliminate for browser since it's only needed
  // while generating routes-manifest

  if (false) { var namedParameterizedRoute, routeKeys, getSafeRouteKey, routeKeyCharLength, routeKeyCharCode; }

  return {
    re: new RegExp("^".concat(parameterizedRoute, "(?:/)?$")),
    groups: groups
  };
}

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../compiled/webpack/module.js */ "./node_modules/next/dist/compiled/webpack/module.js")(module)))

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/utils.js":
/*!*********************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/utils.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

var _regeneratorRuntime = __webpack_require__(/*! ./node_modules/@babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");

var _asyncToGenerator = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/asyncToGenerator */ "./node_modules/@babel/runtime/helpers/asyncToGenerator.js");

exports.__esModule = true;
exports.execOnce = execOnce;
exports.getLocationOrigin = getLocationOrigin;
exports.getURL = getURL;
exports.getDisplayName = getDisplayName;
exports.isResSent = isResSent;
exports.loadGetInitialProps = loadGetInitialProps;
exports.formatWithValidation = formatWithValidation;
exports.ST = exports.SP = exports.urlObjectKeys = void 0;

var _formatUrl = __webpack_require__(/*! ./router/utils/format-url */ "./node_modules/next/dist/next-server/lib/router/utils/format-url.js");
/**
* Utils
*/


function execOnce(fn) {
  var used = false;
  var result;
  return function () {
    if (!used) {
      used = true;
      result = fn.apply(void 0, arguments);
    }

    return result;
  };
}

function getLocationOrigin() {
  var _window$location = window.location,
      protocol = _window$location.protocol,
      hostname = _window$location.hostname,
      port = _window$location.port;
  return "".concat(protocol, "//").concat(hostname).concat(port ? ':' + port : '');
}

function getURL() {
  var href = window.location.href;
  var origin = getLocationOrigin();
  return href.substring(origin.length);
}

function getDisplayName(Component) {
  return typeof Component === 'string' ? Component : Component.displayName || Component.name || 'Unknown';
}

function isResSent(res) {
  return res.finished || res.headersSent;
}

function loadGetInitialProps(_x, _x2) {
  return _loadGetInitialProps.apply(this, arguments);
}

function _loadGetInitialProps() {
  _loadGetInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(App, ctx) {
    var _App$prototype, message, res, props, _message;

    return _regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            if (false) {}

            if (!((_App$prototype = App.prototype) != null && _App$prototype.getInitialProps)) {
              _context.next = 4;
              break;
            }

            message = "\"".concat(getDisplayName(App), ".getInitialProps()\" is defined as an instance method - visit https://err.sh/vercel/next.js/get-initial-props-as-an-instance-method for more information.");
            throw new Error(message);

          case 4:
            // when called from _app `ctx` is nested in `ctx`
            res = ctx.res || ctx.ctx && ctx.ctx.res;

            if (App.getInitialProps) {
              _context.next = 12;
              break;
            }

            if (!(ctx.ctx && ctx.Component)) {
              _context.next = 11;
              break;
            }

            _context.next = 9;
            return loadGetInitialProps(ctx.Component, ctx.ctx);

          case 9:
            _context.t0 = _context.sent;
            return _context.abrupt("return", {
              pageProps: _context.t0
            });

          case 11:
            return _context.abrupt("return", {});

          case 12:
            _context.next = 14;
            return App.getInitialProps(ctx);

          case 14:
            props = _context.sent;

            if (!(res && isResSent(res))) {
              _context.next = 17;
              break;
            }

            return _context.abrupt("return", props);

          case 17:
            if (props) {
              _context.next = 20;
              break;
            }

            _message = "\"".concat(getDisplayName(App), ".getInitialProps()\" should resolve to an object. But found \"").concat(props, "\" instead.");
            throw new Error(_message);

          case 20:
            if (true) {
              if (Object.keys(props).length === 0 && !ctx.ctx) {
                console.warn("".concat(getDisplayName(App), " returned an empty object from `getInitialProps`. This de-optimizes and prevents automatic static optimization. https://err.sh/vercel/next.js/empty-object-getInitialProps"));
              }
            }

            return _context.abrupt("return", props);

          case 22:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _loadGetInitialProps.apply(this, arguments);
}

var urlObjectKeys = ['auth', 'hash', 'host', 'hostname', 'href', 'path', 'pathname', 'port', 'protocol', 'query', 'search', 'slashes'];
exports.urlObjectKeys = urlObjectKeys;

function formatWithValidation(url) {
  if (true) {
    if (url !== null && typeof url === 'object') {
      Object.keys(url).forEach(function (key) {
        if (urlObjectKeys.indexOf(key) === -1) {
          console.warn("Unknown key passed via urlObject into url.format: ".concat(key));
        }
      });
    }
  }

  return (0, _formatUrl.formatUrl)(url);
}

var SP = typeof performance !== 'undefined';
exports.SP = SP;
var ST = SP && typeof performance.mark === 'function' && typeof performance.measure === 'function';
exports.ST = ST;

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../compiled/webpack/module.js */ "./node_modules/next/dist/compiled/webpack/module.js")(module)))

/***/ }),

/***/ "./node_modules/next/dist/next-server/server/denormalize-page-path.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/server/denormalize-page-path.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
exports.__esModule=true;exports.normalizePathSep=normalizePathSep;exports.denormalizePagePath=denormalizePagePath;function normalizePathSep(path){return path.replace(/\\/g,'/');}function denormalizePagePath(page){page=normalizePathSep(page);if(page.startsWith('/index/')){page=page.slice(6);}else if(page==='/index'){page='/';}return page;}
//# sourceMappingURL=denormalize-page-path.js.map

/***/ }),

/***/ "./node_modules/react-is/cjs/react-is.development.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-is/cjs/react-is.development.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */





if (true) {
  (function() {
'use strict';

// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var hasSymbol = typeof Symbol === 'function' && Symbol.for;
var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
// (unstable) APIs that have been removed. Can we remove the symbols?

var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;
var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;

function isValidElementType(type) {
  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
}

function typeOf(object) {
  if (typeof object === 'object' && object !== null) {
    var $$typeof = object.$$typeof;

    switch ($$typeof) {
      case REACT_ELEMENT_TYPE:
        var type = object.type;

        switch (type) {
          case REACT_ASYNC_MODE_TYPE:
          case REACT_CONCURRENT_MODE_TYPE:
          case REACT_FRAGMENT_TYPE:
          case REACT_PROFILER_TYPE:
          case REACT_STRICT_MODE_TYPE:
          case REACT_SUSPENSE_TYPE:
            return type;

          default:
            var $$typeofType = type && type.$$typeof;

            switch ($$typeofType) {
              case REACT_CONTEXT_TYPE:
              case REACT_FORWARD_REF_TYPE:
              case REACT_LAZY_TYPE:
              case REACT_MEMO_TYPE:
              case REACT_PROVIDER_TYPE:
                return $$typeofType;

              default:
                return $$typeof;
            }

        }

      case REACT_PORTAL_TYPE:
        return $$typeof;
    }
  }

  return undefined;
} // AsyncMode is deprecated along with isAsyncMode

var AsyncMode = REACT_ASYNC_MODE_TYPE;
var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
var ContextConsumer = REACT_CONTEXT_TYPE;
var ContextProvider = REACT_PROVIDER_TYPE;
var Element = REACT_ELEMENT_TYPE;
var ForwardRef = REACT_FORWARD_REF_TYPE;
var Fragment = REACT_FRAGMENT_TYPE;
var Lazy = REACT_LAZY_TYPE;
var Memo = REACT_MEMO_TYPE;
var Portal = REACT_PORTAL_TYPE;
var Profiler = REACT_PROFILER_TYPE;
var StrictMode = REACT_STRICT_MODE_TYPE;
var Suspense = REACT_SUSPENSE_TYPE;
var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated

function isAsyncMode(object) {
  {
    if (!hasWarnedAboutDeprecatedIsAsyncMode) {
      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint

      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');
    }
  }

  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
}
function isConcurrentMode(object) {
  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
}
function isContextConsumer(object) {
  return typeOf(object) === REACT_CONTEXT_TYPE;
}
function isContextProvider(object) {
  return typeOf(object) === REACT_PROVIDER_TYPE;
}
function isElement(object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
}
function isForwardRef(object) {
  return typeOf(object) === REACT_FORWARD_REF_TYPE;
}
function isFragment(object) {
  return typeOf(object) === REACT_FRAGMENT_TYPE;
}
function isLazy(object) {
  return typeOf(object) === REACT_LAZY_TYPE;
}
function isMemo(object) {
  return typeOf(object) === REACT_MEMO_TYPE;
}
function isPortal(object) {
  return typeOf(object) === REACT_PORTAL_TYPE;
}
function isProfiler(object) {
  return typeOf(object) === REACT_PROFILER_TYPE;
}
function isStrictMode(object) {
  return typeOf(object) === REACT_STRICT_MODE_TYPE;
}
function isSuspense(object) {
  return typeOf(object) === REACT_SUSPENSE_TYPE;
}

exports.AsyncMode = AsyncMode;
exports.ConcurrentMode = ConcurrentMode;
exports.ContextConsumer = ContextConsumer;
exports.ContextProvider = ContextProvider;
exports.Element = Element;
exports.ForwardRef = ForwardRef;
exports.Fragment = Fragment;
exports.Lazy = Lazy;
exports.Memo = Memo;
exports.Portal = Portal;
exports.Profiler = Profiler;
exports.StrictMode = StrictMode;
exports.Suspense = Suspense;
exports.isAsyncMode = isAsyncMode;
exports.isConcurrentMode = isConcurrentMode;
exports.isContextConsumer = isContextConsumer;
exports.isContextProvider = isContextProvider;
exports.isElement = isElement;
exports.isForwardRef = isForwardRef;
exports.isFragment = isFragment;
exports.isLazy = isLazy;
exports.isMemo = isMemo;
exports.isPortal = isPortal;
exports.isProfiler = isProfiler;
exports.isStrictMode = isStrictMode;
exports.isSuspense = isSuspense;
exports.isValidElementType = isValidElementType;
exports.typeOf = typeOf;
  })();
}


/***/ }),

/***/ "./node_modules/react-is/index.js":
/*!****************************************!*\
  !*** ./node_modules/react-is/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


if (false) {} else {
  module.exports = __webpack_require__(/*! ./cjs/react-is.development.js */ "./node_modules/react-is/cjs/react-is.development.js");
}


/***/ }),

/***/ "./node_modules/react/cjs/react-jsx-dev-runtime.development.js":
/*!*********************************************************************!*\
  !*** ./node_modules/react/cjs/react-jsx-dev-runtime.development.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v17.0.1
 * react-jsx-dev-runtime.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



if (true) {
  (function() {
'use strict';

var React = __webpack_require__(/*! react */ "./node_modules/react/index.js");
var _assign = __webpack_require__(/*! object-assign */ "./node_modules/next/dist/build/polyfills/object-assign.js");

// ATTENTION
// When adding new symbols to this file,
// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var REACT_ELEMENT_TYPE = 0xeac7;
var REACT_PORTAL_TYPE = 0xeaca;
exports.Fragment = 0xeacb;
var REACT_STRICT_MODE_TYPE = 0xeacc;
var REACT_PROFILER_TYPE = 0xead2;
var REACT_PROVIDER_TYPE = 0xeacd;
var REACT_CONTEXT_TYPE = 0xeace;
var REACT_FORWARD_REF_TYPE = 0xead0;
var REACT_SUSPENSE_TYPE = 0xead1;
var REACT_SUSPENSE_LIST_TYPE = 0xead8;
var REACT_MEMO_TYPE = 0xead3;
var REACT_LAZY_TYPE = 0xead4;
var REACT_BLOCK_TYPE = 0xead9;
var REACT_SERVER_BLOCK_TYPE = 0xeada;
var REACT_FUNDAMENTAL_TYPE = 0xead5;
var REACT_SCOPE_TYPE = 0xead7;
var REACT_OPAQUE_ID_TYPE = 0xeae0;
var REACT_DEBUG_TRACING_MODE_TYPE = 0xeae1;
var REACT_OFFSCREEN_TYPE = 0xeae2;
var REACT_LEGACY_HIDDEN_TYPE = 0xeae3;

if (typeof Symbol === 'function' && Symbol.for) {
  var symbolFor = Symbol.for;
  REACT_ELEMENT_TYPE = symbolFor('react.element');
  REACT_PORTAL_TYPE = symbolFor('react.portal');
  exports.Fragment = symbolFor('react.fragment');
  REACT_STRICT_MODE_TYPE = symbolFor('react.strict_mode');
  REACT_PROFILER_TYPE = symbolFor('react.profiler');
  REACT_PROVIDER_TYPE = symbolFor('react.provider');
  REACT_CONTEXT_TYPE = symbolFor('react.context');
  REACT_FORWARD_REF_TYPE = symbolFor('react.forward_ref');
  REACT_SUSPENSE_TYPE = symbolFor('react.suspense');
  REACT_SUSPENSE_LIST_TYPE = symbolFor('react.suspense_list');
  REACT_MEMO_TYPE = symbolFor('react.memo');
  REACT_LAZY_TYPE = symbolFor('react.lazy');
  REACT_BLOCK_TYPE = symbolFor('react.block');
  REACT_SERVER_BLOCK_TYPE = symbolFor('react.server.block');
  REACT_FUNDAMENTAL_TYPE = symbolFor('react.fundamental');
  REACT_SCOPE_TYPE = symbolFor('react.scope');
  REACT_OPAQUE_ID_TYPE = symbolFor('react.opaque.id');
  REACT_DEBUG_TRACING_MODE_TYPE = symbolFor('react.debug_trace_mode');
  REACT_OFFSCREEN_TYPE = symbolFor('react.offscreen');
  REACT_LEGACY_HIDDEN_TYPE = symbolFor('react.legacy_hidden');
}

var MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator';
function getIteratorFn(maybeIterable) {
  if (maybeIterable === null || typeof maybeIterable !== 'object') {
    return null;
  }

  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];

  if (typeof maybeIterator === 'function') {
    return maybeIterator;
  }

  return null;
}

var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

function error(format) {
  {
    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
      args[_key2 - 1] = arguments[_key2];
    }

    printWarning('error', format, args);
  }
}

function printWarning(level, format, args) {
  // When changing this logic, you might want to also
  // update consoleWithStackDev.www.js as well.
  {
    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
    var stack = ReactDebugCurrentFrame.getStackAddendum();

    if (stack !== '') {
      format += '%s';
      args = args.concat([stack]);
    }

    var argsWithFormat = args.map(function (item) {
      return '' + item;
    }); // Careful: RN currently depends on this prefix

    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
    // breaks IE9: https://github.com/facebook/react/issues/13610
    // eslint-disable-next-line react-internal/no-production-logging

    Function.prototype.apply.call(console[level], console, argsWithFormat);
  }
}

// Filter certain DOM attributes (e.g. src, href) if their values are empty strings.

var enableScopeAPI = false; // Experimental Create Event Handle API.

function isValidElementType(type) {
  if (typeof type === 'string' || typeof type === 'function') {
    return true;
  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).


  if (type === exports.Fragment || type === REACT_PROFILER_TYPE || type === REACT_DEBUG_TRACING_MODE_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_LEGACY_HIDDEN_TYPE || enableScopeAPI ) {
    return true;
  }

  if (typeof type === 'object' && type !== null) {
    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_BLOCK_TYPE || type[0] === REACT_SERVER_BLOCK_TYPE) {
      return true;
    }
  }

  return false;
}

function getWrappedName(outerType, innerType, wrapperName) {
  var functionName = innerType.displayName || innerType.name || '';
  return outerType.displayName || (functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName);
}

function getContextName(type) {
  return type.displayName || 'Context';
}

function getComponentName(type) {
  if (type == null) {
    // Host root, text node or just invalid type.
    return null;
  }

  {
    if (typeof type.tag === 'number') {
      error('Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');
    }
  }

  if (typeof type === 'function') {
    return type.displayName || type.name || null;
  }

  if (typeof type === 'string') {
    return type;
  }

  switch (type) {
    case exports.Fragment:
      return 'Fragment';

    case REACT_PORTAL_TYPE:
      return 'Portal';

    case REACT_PROFILER_TYPE:
      return 'Profiler';

    case REACT_STRICT_MODE_TYPE:
      return 'StrictMode';

    case REACT_SUSPENSE_TYPE:
      return 'Suspense';

    case REACT_SUSPENSE_LIST_TYPE:
      return 'SuspenseList';
  }

  if (typeof type === 'object') {
    switch (type.$$typeof) {
      case REACT_CONTEXT_TYPE:
        var context = type;
        return getContextName(context) + '.Consumer';

      case REACT_PROVIDER_TYPE:
        var provider = type;
        return getContextName(provider._context) + '.Provider';

      case REACT_FORWARD_REF_TYPE:
        return getWrappedName(type, type.render, 'ForwardRef');

      case REACT_MEMO_TYPE:
        return getComponentName(type.type);

      case REACT_BLOCK_TYPE:
        return getComponentName(type._render);

      case REACT_LAZY_TYPE:
        {
          var lazyComponent = type;
          var payload = lazyComponent._payload;
          var init = lazyComponent._init;

          try {
            return getComponentName(init(payload));
          } catch (x) {
            return null;
          }
        }
    }
  }

  return null;
}

// Helpers to patch console.logs to avoid logging during side-effect free
// replaying on render function. This currently only patches the object
// lazily which won't cover if the log function was extracted eagerly.
// We could also eagerly patch the method.
var disabledDepth = 0;
var prevLog;
var prevInfo;
var prevWarn;
var prevError;
var prevGroup;
var prevGroupCollapsed;
var prevGroupEnd;

function disabledLog() {}

disabledLog.__reactDisabledLog = true;
function disableLogs() {
  {
    if (disabledDepth === 0) {
      /* eslint-disable react-internal/no-production-logging */
      prevLog = console.log;
      prevInfo = console.info;
      prevWarn = console.warn;
      prevError = console.error;
      prevGroup = console.group;
      prevGroupCollapsed = console.groupCollapsed;
      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099

      var props = {
        configurable: true,
        enumerable: true,
        value: disabledLog,
        writable: true
      }; // $FlowFixMe Flow thinks console is immutable.

      Object.defineProperties(console, {
        info: props,
        log: props,
        warn: props,
        error: props,
        group: props,
        groupCollapsed: props,
        groupEnd: props
      });
      /* eslint-enable react-internal/no-production-logging */
    }

    disabledDepth++;
  }
}
function reenableLogs() {
  {
    disabledDepth--;

    if (disabledDepth === 0) {
      /* eslint-disable react-internal/no-production-logging */
      var props = {
        configurable: true,
        enumerable: true,
        writable: true
      }; // $FlowFixMe Flow thinks console is immutable.

      Object.defineProperties(console, {
        log: _assign({}, props, {
          value: prevLog
        }),
        info: _assign({}, props, {
          value: prevInfo
        }),
        warn: _assign({}, props, {
          value: prevWarn
        }),
        error: _assign({}, props, {
          value: prevError
        }),
        group: _assign({}, props, {
          value: prevGroup
        }),
        groupCollapsed: _assign({}, props, {
          value: prevGroupCollapsed
        }),
        groupEnd: _assign({}, props, {
          value: prevGroupEnd
        })
      });
      /* eslint-enable react-internal/no-production-logging */
    }

    if (disabledDepth < 0) {
      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');
    }
  }
}

var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
var prefix;
function describeBuiltInComponentFrame(name, source, ownerFn) {
  {
    if (prefix === undefined) {
      // Extract the VM specific prefix used by each line.
      try {
        throw Error();
      } catch (x) {
        var match = x.stack.trim().match(/\n( *(at )?)/);
        prefix = match && match[1] || '';
      }
    } // We use the prefix to ensure our stacks line up with native stack frames.


    return '\n' + prefix + name;
  }
}
var reentry = false;
var componentFrameCache;

{
  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;
  componentFrameCache = new PossiblyWeakMap();
}

function describeNativeComponentFrame(fn, construct) {
  // If something asked for a stack inside a fake render, it should get ignored.
  if (!fn || reentry) {
    return '';
  }

  {
    var frame = componentFrameCache.get(fn);

    if (frame !== undefined) {
      return frame;
    }
  }

  var control;
  reentry = true;
  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.

  Error.prepareStackTrace = undefined;
  var previousDispatcher;

  {
    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function
    // for warnings.

    ReactCurrentDispatcher.current = null;
    disableLogs();
  }

  try {
    // This should throw.
    if (construct) {
      // Something should be setting the props in the constructor.
      var Fake = function () {
        throw Error();
      }; // $FlowFixMe


      Object.defineProperty(Fake.prototype, 'props', {
        set: function () {
          // We use a throwing setter instead of frozen or non-writable props
          // because that won't throw in a non-strict mode function.
          throw Error();
        }
      });

      if (typeof Reflect === 'object' && Reflect.construct) {
        // We construct a different control for this case to include any extra
        // frames added by the construct call.
        try {
          Reflect.construct(Fake, []);
        } catch (x) {
          control = x;
        }

        Reflect.construct(fn, [], Fake);
      } else {
        try {
          Fake.call();
        } catch (x) {
          control = x;
        }

        fn.call(Fake.prototype);
      }
    } else {
      try {
        throw Error();
      } catch (x) {
        control = x;
      }

      fn();
    }
  } catch (sample) {
    // This is inlined manually because closure doesn't do it for us.
    if (sample && control && typeof sample.stack === 'string') {
      // This extracts the first frame from the sample that isn't also in the control.
      // Skipping one frame that we assume is the frame that calls the two.
      var sampleLines = sample.stack.split('\n');
      var controlLines = control.stack.split('\n');
      var s = sampleLines.length - 1;
      var c = controlLines.length - 1;

      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {
        // We expect at least one stack frame to be shared.
        // Typically this will be the root most one. However, stack frames may be
        // cut off due to maximum stack limits. In this case, one maybe cut off
        // earlier than the other. We assume that the sample is longer or the same
        // and there for cut off earlier. So we should find the root most frame in
        // the sample somewhere in the control.
        c--;
      }

      for (; s >= 1 && c >= 0; s--, c--) {
        // Next we find the first one that isn't the same which should be the
        // frame that called our sample function and the control.
        if (sampleLines[s] !== controlLines[c]) {
          // In V8, the first line is describing the message but other VMs don't.
          // If we're about to return the first line, and the control is also on the same
          // line, that's a pretty good indicator that our sample threw at same line as
          // the control. I.e. before we entered the sample frame. So we ignore this result.
          // This can happen if you passed a class to function component, or non-function.
          if (s !== 1 || c !== 1) {
            do {
              s--;
              c--; // We may still have similar intermediate frames from the construct call.
              // The next one that isn't the same should be our match though.

              if (c < 0 || sampleLines[s] !== controlLines[c]) {
                // V8 adds a "new" prefix for native classes. Let's remove it to make it prettier.
                var _frame = '\n' + sampleLines[s].replace(' at new ', ' at ');

                {
                  if (typeof fn === 'function') {
                    componentFrameCache.set(fn, _frame);
                  }
                } // Return the line we found.


                return _frame;
              }
            } while (s >= 1 && c >= 0);
          }

          break;
        }
      }
    }
  } finally {
    reentry = false;

    {
      ReactCurrentDispatcher.current = previousDispatcher;
      reenableLogs();
    }

    Error.prepareStackTrace = previousPrepareStackTrace;
  } // Fallback to just using the name if we couldn't make it throw.


  var name = fn ? fn.displayName || fn.name : '';
  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';

  {
    if (typeof fn === 'function') {
      componentFrameCache.set(fn, syntheticFrame);
    }
  }

  return syntheticFrame;
}
function describeFunctionComponentFrame(fn, source, ownerFn) {
  {
    return describeNativeComponentFrame(fn, false);
  }
}

function shouldConstruct(Component) {
  var prototype = Component.prototype;
  return !!(prototype && prototype.isReactComponent);
}

function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {

  if (type == null) {
    return '';
  }

  if (typeof type === 'function') {
    {
      return describeNativeComponentFrame(type, shouldConstruct(type));
    }
  }

  if (typeof type === 'string') {
    return describeBuiltInComponentFrame(type);
  }

  switch (type) {
    case REACT_SUSPENSE_TYPE:
      return describeBuiltInComponentFrame('Suspense');

    case REACT_SUSPENSE_LIST_TYPE:
      return describeBuiltInComponentFrame('SuspenseList');
  }

  if (typeof type === 'object') {
    switch (type.$$typeof) {
      case REACT_FORWARD_REF_TYPE:
        return describeFunctionComponentFrame(type.render);

      case REACT_MEMO_TYPE:
        // Memo may contain any component type so we recursively resolve it.
        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);

      case REACT_BLOCK_TYPE:
        return describeFunctionComponentFrame(type._render);

      case REACT_LAZY_TYPE:
        {
          var lazyComponent = type;
          var payload = lazyComponent._payload;
          var init = lazyComponent._init;

          try {
            // Lazy may contain any component type so we recursively resolve it.
            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
          } catch (x) {}
        }
    }
  }

  return '';
}

var loggedTypeFailures = {};
var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;

function setCurrentlyValidatingElement(element) {
  {
    if (element) {
      var owner = element._owner;
      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
      ReactDebugCurrentFrame.setExtraStackFrame(stack);
    } else {
      ReactDebugCurrentFrame.setExtraStackFrame(null);
    }
  }
}

function checkPropTypes(typeSpecs, values, location, componentName, element) {
  {
    // $FlowFixMe This is okay but Flow doesn't know it.
    var has = Function.call.bind(Object.prototype.hasOwnProperty);

    for (var typeSpecName in typeSpecs) {
      if (has(typeSpecs, typeSpecName)) {
        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.

        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
            err.name = 'Invariant Violation';
            throw err;
          }

          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
        } catch (ex) {
          error$1 = ex;
        }

        if (error$1 && !(error$1 instanceof Error)) {
          setCurrentlyValidatingElement(element);

          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);

          setCurrentlyValidatingElement(null);
        }

        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error$1.message] = true;
          setCurrentlyValidatingElement(element);

          error('Failed %s type: %s', location, error$1.message);

          setCurrentlyValidatingElement(null);
        }
      }
    }
  }
}

var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var RESERVED_PROPS = {
  key: true,
  ref: true,
  __self: true,
  __source: true
};
var specialPropKeyWarningShown;
var specialPropRefWarningShown;
var didWarnAboutStringRefs;

{
  didWarnAboutStringRefs = {};
}

function hasValidRef(config) {
  {
    if (hasOwnProperty.call(config, 'ref')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;

      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }

  return config.ref !== undefined;
}

function hasValidKey(config) {
  {
    if (hasOwnProperty.call(config, 'key')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;

      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }

  return config.key !== undefined;
}

function warnIfStringRefCannotBeAutoConverted(config, self) {
  {
    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {
      var componentName = getComponentName(ReactCurrentOwner.current.type);

      if (!didWarnAboutStringRefs[componentName]) {
        error('Component "%s" contains the string ref "%s". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentName(ReactCurrentOwner.current.type), config.ref);

        didWarnAboutStringRefs[componentName] = true;
      }
    }
  }
}

function defineKeyPropWarningGetter(props, displayName) {
  {
    var warnAboutAccessingKey = function () {
      if (!specialPropKeyWarningShown) {
        specialPropKeyWarningShown = true;

        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);
      }
    };

    warnAboutAccessingKey.isReactWarning = true;
    Object.defineProperty(props, 'key', {
      get: warnAboutAccessingKey,
      configurable: true
    });
  }
}

function defineRefPropWarningGetter(props, displayName) {
  {
    var warnAboutAccessingRef = function () {
      if (!specialPropRefWarningShown) {
        specialPropRefWarningShown = true;

        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);
      }
    };

    warnAboutAccessingRef.isReactWarning = true;
    Object.defineProperty(props, 'ref', {
      get: warnAboutAccessingRef,
      configurable: true
    });
  }
}
/**
 * Factory method to create a new React element. This no longer adheres to
 * the class pattern, so do not use new to call it. Also, instanceof check
 * will not work. Instead test $$typeof field against Symbol.for('react.element') to check
 * if something is a React Element.
 *
 * @param {*} type
 * @param {*} props
 * @param {*} key
 * @param {string|object} ref
 * @param {*} owner
 * @param {*} self A *temporary* helper to detect places where `this` is
 * different from the `owner` when React.createElement is called, so that we
 * can warn. We want to get rid of owner and replace string `ref`s with arrow
 * functions, and as long as `this` and owner are the same, there will be no
 * change in behavior.
 * @param {*} source An annotation object (added by a transpiler or otherwise)
 * indicating filename, line number, and/or other information.
 * @internal
 */


var ReactElement = function (type, key, ref, self, source, owner, props) {
  var element = {
    // This tag allows us to uniquely identify this as a React Element
    $$typeof: REACT_ELEMENT_TYPE,
    // Built-in properties that belong on the element
    type: type,
    key: key,
    ref: ref,
    props: props,
    // Record the component responsible for creating this element.
    _owner: owner
  };

  {
    // The validation flag is currently mutative. We put it on
    // an external backing store so that we can freeze the whole object.
    // This can be replaced with a WeakMap once they are implemented in
    // commonly used development environments.
    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make
    // the validation flag non-enumerable (where possible, which should
    // include every environment we run tests in), so the test framework
    // ignores it.

    Object.defineProperty(element._store, 'validated', {
      configurable: false,
      enumerable: false,
      writable: true,
      value: false
    }); // self and source are DEV only properties.

    Object.defineProperty(element, '_self', {
      configurable: false,
      enumerable: false,
      writable: false,
      value: self
    }); // Two elements created in two different places should be considered
    // equal for testing purposes and therefore we hide it from enumeration.

    Object.defineProperty(element, '_source', {
      configurable: false,
      enumerable: false,
      writable: false,
      value: source
    });

    if (Object.freeze) {
      Object.freeze(element.props);
      Object.freeze(element);
    }
  }

  return element;
};
/**
 * https://github.com/reactjs/rfcs/pull/107
 * @param {*} type
 * @param {object} props
 * @param {string} key
 */

function jsxDEV(type, config, maybeKey, source, self) {
  {
    var propName; // Reserved names are extracted

    var props = {};
    var key = null;
    var ref = null; // Currently, key can be spread in as a prop. This causes a potential
    // issue if key is also explicitly declared (ie. <div {...props} key="Hi" />
    // or <div key="Hi" {...props} /> ). We want to deprecate key spread,
    // but as an intermediary step, we will use jsxDEV for everything except
    // <div {...props} key="Hi" />, because we aren't currently able to tell if
    // key is explicitly declared to be undefined or not.

    if (maybeKey !== undefined) {
      key = '' + maybeKey;
    }

    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    if (hasValidRef(config)) {
      ref = config.ref;
      warnIfStringRefCannotBeAutoConverted(config, self);
    } // Remaining properties are added to a new props object


    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        props[propName] = config[propName];
      }
    } // Resolve default props


    if (type && type.defaultProps) {
      var defaultProps = type.defaultProps;

      for (propName in defaultProps) {
        if (props[propName] === undefined) {
          props[propName] = defaultProps[propName];
        }
      }
    }

    if (key || ref) {
      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;

      if (key) {
        defineKeyPropWarningGetter(props, displayName);
      }

      if (ref) {
        defineRefPropWarningGetter(props, displayName);
      }
    }

    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
  }
}

var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;

function setCurrentlyValidatingElement$1(element) {
  {
    if (element) {
      var owner = element._owner;
      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
    } else {
      ReactDebugCurrentFrame$1.setExtraStackFrame(null);
    }
  }
}

var propTypesMisspellWarningShown;

{
  propTypesMisspellWarningShown = false;
}
/**
 * Verifies the object is a ReactElement.
 * See https://reactjs.org/docs/react-api.html#isvalidelement
 * @param {?object} object
 * @return {boolean} True if `object` is a ReactElement.
 * @final
 */

function isValidElement(object) {
  {
    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
  }
}

function getDeclarationErrorAddendum() {
  {
    if (ReactCurrentOwner$1.current) {
      var name = getComponentName(ReactCurrentOwner$1.current.type);

      if (name) {
        return '\n\nCheck the render method of `' + name + '`.';
      }
    }

    return '';
  }
}

function getSourceInfoErrorAddendum(source) {
  {
    if (source !== undefined) {
      var fileName = source.fileName.replace(/^.*[\\\/]/, '');
      var lineNumber = source.lineNumber;
      return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
    }

    return '';
  }
}
/**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */


var ownerHasKeyUseWarning = {};

function getCurrentComponentErrorInfo(parentType) {
  {
    var info = getDeclarationErrorAddendum();

    if (!info) {
      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;

      if (parentName) {
        info = "\n\nCheck the top-level render call using <" + parentName + ">.";
      }
    }

    return info;
  }
}
/**
 * Warn if the element doesn't have an explicit key assigned to it.
 * This element is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it. Error statuses are cached so a warning
 * will only be shown once.
 *
 * @internal
 * @param {ReactElement} element Element that requires a key.
 * @param {*} parentType element's parent's type.
 */


function validateExplicitKey(element, parentType) {
  {
    if (!element._store || element._store.validated || element.key != null) {
      return;
    }

    element._store.validated = true;
    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);

    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
      return;
    }

    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a
    // property, it may be the creator of the child that's responsible for
    // assigning it a key.

    var childOwner = '';

    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {
      // Give the component that originally created this child.
      childOwner = " It was passed a child from " + getComponentName(element._owner.type) + ".";
    }

    setCurrentlyValidatingElement$1(element);

    error('Each child in a list should have a unique "key" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);

    setCurrentlyValidatingElement$1(null);
  }
}
/**
 * Ensure that every element either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {ReactNode} node Statically passed child of any type.
 * @param {*} parentType node's parent's type.
 */


function validateChildKeys(node, parentType) {
  {
    if (typeof node !== 'object') {
      return;
    }

    if (Array.isArray(node)) {
      for (var i = 0; i < node.length; i++) {
        var child = node[i];

        if (isValidElement(child)) {
          validateExplicitKey(child, parentType);
        }
      }
    } else if (isValidElement(node)) {
      // This element was passed in a valid location.
      if (node._store) {
        node._store.validated = true;
      }
    } else if (node) {
      var iteratorFn = getIteratorFn(node);

      if (typeof iteratorFn === 'function') {
        // Entry iterators used to provide implicit keys,
        // but now we print a separate warning for them later.
        if (iteratorFn !== node.entries) {
          var iterator = iteratorFn.call(node);
          var step;

          while (!(step = iterator.next()).done) {
            if (isValidElement(step.value)) {
              validateExplicitKey(step.value, parentType);
            }
          }
        }
      }
    }
  }
}
/**
 * Given an element, validate that its props follow the propTypes definition,
 * provided by the type.
 *
 * @param {ReactElement} element
 */


function validatePropTypes(element) {
  {
    var type = element.type;

    if (type === null || type === undefined || typeof type === 'string') {
      return;
    }

    var propTypes;

    if (typeof type === 'function') {
      propTypes = type.propTypes;
    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.
    // Inner props are checked in the reconciler.
    type.$$typeof === REACT_MEMO_TYPE)) {
      propTypes = type.propTypes;
    } else {
      return;
    }

    if (propTypes) {
      // Intentionally inside to avoid triggering lazy initializers:
      var name = getComponentName(type);
      checkPropTypes(propTypes, element.props, 'prop', name, element);
    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {
      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:

      var _name = getComponentName(type);

      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');
    }

    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {
      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');
    }
  }
}
/**
 * Given a fragment, validate that it can only be provided with fragment props
 * @param {ReactElement} fragment
 */


function validateFragmentProps(fragment) {
  {
    var keys = Object.keys(fragment.props);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];

      if (key !== 'children' && key !== 'key') {
        setCurrentlyValidatingElement$1(fragment);

        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);

        setCurrentlyValidatingElement$1(null);
        break;
      }
    }

    if (fragment.ref !== null) {
      setCurrentlyValidatingElement$1(fragment);

      error('Invalid attribute `ref` supplied to `React.Fragment`.');

      setCurrentlyValidatingElement$1(null);
    }
  }
}

function jsxWithValidation(type, props, key, isStaticChildren, source, self) {
  {
    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to
    // succeed and there will likely be errors in render.

    if (!validType) {
      var info = '';

      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
        info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and named imports.";
      }

      var sourceInfo = getSourceInfoErrorAddendum(source);

      if (sourceInfo) {
        info += sourceInfo;
      } else {
        info += getDeclarationErrorAddendum();
      }

      var typeString;

      if (type === null) {
        typeString = 'null';
      } else if (Array.isArray(type)) {
        typeString = 'array';
      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {
        typeString = "<" + (getComponentName(type.type) || 'Unknown') + " />";
        info = ' Did you accidentally export a JSX literal instead of a component?';
      } else {
        typeString = typeof type;
      }

      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);
    }

    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.
    // TODO: Drop this when these are no longer allowed as the type argument.

    if (element == null) {
      return element;
    } // Skip key warning if the type isn't valid since our key validation logic
    // doesn't expect a non-string/function type and can throw confusing errors.
    // We don't want exception behavior to differ between dev and prod.
    // (Rendering will throw with a helpful message and as soon as the type is
    // fixed, the key warnings will appear.)


    if (validType) {
      var children = props.children;

      if (children !== undefined) {
        if (isStaticChildren) {
          if (Array.isArray(children)) {
            for (var i = 0; i < children.length; i++) {
              validateChildKeys(children[i], type);
            }

            if (Object.freeze) {
              Object.freeze(children);
            }
          } else {
            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');
          }
        } else {
          validateChildKeys(children, type);
        }
      }
    }

    if (type === exports.Fragment) {
      validateFragmentProps(element);
    } else {
      validatePropTypes(element);
    }

    return element;
  }
} // These two functions exist to still get child warnings in dev

var jsxDEV$1 =  jsxWithValidation ;

exports.jsxDEV = jsxDEV$1;
  })();
}


/***/ }),

/***/ "./node_modules/react/cjs/react.development.js":
/*!*****************************************************!*\
  !*** ./node_modules/react/cjs/react.development.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v17.0.1
 * react.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



if (true) {
  (function() {
'use strict';

var _assign = __webpack_require__(/*! object-assign */ "./node_modules/next/dist/build/polyfills/object-assign.js");

// TODO: this is special because it gets imported during build.
var ReactVersion = '17.0.1';

// ATTENTION
// When adding new symbols to this file,
// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var REACT_ELEMENT_TYPE = 0xeac7;
var REACT_PORTAL_TYPE = 0xeaca;
exports.Fragment = 0xeacb;
exports.StrictMode = 0xeacc;
exports.Profiler = 0xead2;
var REACT_PROVIDER_TYPE = 0xeacd;
var REACT_CONTEXT_TYPE = 0xeace;
var REACT_FORWARD_REF_TYPE = 0xead0;
exports.Suspense = 0xead1;
var REACT_SUSPENSE_LIST_TYPE = 0xead8;
var REACT_MEMO_TYPE = 0xead3;
var REACT_LAZY_TYPE = 0xead4;
var REACT_BLOCK_TYPE = 0xead9;
var REACT_SERVER_BLOCK_TYPE = 0xeada;
var REACT_FUNDAMENTAL_TYPE = 0xead5;
var REACT_SCOPE_TYPE = 0xead7;
var REACT_OPAQUE_ID_TYPE = 0xeae0;
var REACT_DEBUG_TRACING_MODE_TYPE = 0xeae1;
var REACT_OFFSCREEN_TYPE = 0xeae2;
var REACT_LEGACY_HIDDEN_TYPE = 0xeae3;

if (typeof Symbol === 'function' && Symbol.for) {
  var symbolFor = Symbol.for;
  REACT_ELEMENT_TYPE = symbolFor('react.element');
  REACT_PORTAL_TYPE = symbolFor('react.portal');
  exports.Fragment = symbolFor('react.fragment');
  exports.StrictMode = symbolFor('react.strict_mode');
  exports.Profiler = symbolFor('react.profiler');
  REACT_PROVIDER_TYPE = symbolFor('react.provider');
  REACT_CONTEXT_TYPE = symbolFor('react.context');
  REACT_FORWARD_REF_TYPE = symbolFor('react.forward_ref');
  exports.Suspense = symbolFor('react.suspense');
  REACT_SUSPENSE_LIST_TYPE = symbolFor('react.suspense_list');
  REACT_MEMO_TYPE = symbolFor('react.memo');
  REACT_LAZY_TYPE = symbolFor('react.lazy');
  REACT_BLOCK_TYPE = symbolFor('react.block');
  REACT_SERVER_BLOCK_TYPE = symbolFor('react.server.block');
  REACT_FUNDAMENTAL_TYPE = symbolFor('react.fundamental');
  REACT_SCOPE_TYPE = symbolFor('react.scope');
  REACT_OPAQUE_ID_TYPE = symbolFor('react.opaque.id');
  REACT_DEBUG_TRACING_MODE_TYPE = symbolFor('react.debug_trace_mode');
  REACT_OFFSCREEN_TYPE = symbolFor('react.offscreen');
  REACT_LEGACY_HIDDEN_TYPE = symbolFor('react.legacy_hidden');
}

var MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator';
function getIteratorFn(maybeIterable) {
  if (maybeIterable === null || typeof maybeIterable !== 'object') {
    return null;
  }

  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];

  if (typeof maybeIterator === 'function') {
    return maybeIterator;
  }

  return null;
}

/**
 * Keeps track of the current dispatcher.
 */
var ReactCurrentDispatcher = {
  /**
   * @internal
   * @type {ReactComponent}
   */
  current: null
};

/**
 * Keeps track of the current batch's configuration such as how long an update
 * should suspend for if it needs to.
 */
var ReactCurrentBatchConfig = {
  transition: 0
};

/**
 * Keeps track of the current owner.
 *
 * The current owner is the component who should own any components that are
 * currently being constructed.
 */
var ReactCurrentOwner = {
  /**
   * @internal
   * @type {ReactComponent}
   */
  current: null
};

var ReactDebugCurrentFrame = {};
var currentExtraStackFrame = null;
function setExtraStackFrame(stack) {
  {
    currentExtraStackFrame = stack;
  }
}

{
  ReactDebugCurrentFrame.setExtraStackFrame = function (stack) {
    {
      currentExtraStackFrame = stack;
    }
  }; // Stack implementation injected by the current renderer.


  ReactDebugCurrentFrame.getCurrentStack = null;

  ReactDebugCurrentFrame.getStackAddendum = function () {
    var stack = ''; // Add an extra top frame while an element is being validated

    if (currentExtraStackFrame) {
      stack += currentExtraStackFrame;
    } // Delegate to the injected renderer-specific implementation


    var impl = ReactDebugCurrentFrame.getCurrentStack;

    if (impl) {
      stack += impl() || '';
    }

    return stack;
  };
}

/**
 * Used by act() to track whether you're inside an act() scope.
 */
var IsSomeRendererActing = {
  current: false
};

var ReactSharedInternals = {
  ReactCurrentDispatcher: ReactCurrentDispatcher,
  ReactCurrentBatchConfig: ReactCurrentBatchConfig,
  ReactCurrentOwner: ReactCurrentOwner,
  IsSomeRendererActing: IsSomeRendererActing,
  // Used by renderers to avoid bundling object-assign twice in UMD bundles:
  assign: _assign
};

{
  ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;
}

// by calls to these methods by a Babel plugin.
//
// In PROD (or in packages without access to React internals),
// they are left as they are instead.

function warn(format) {
  {
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    printWarning('warn', format, args);
  }
}
function error(format) {
  {
    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
      args[_key2 - 1] = arguments[_key2];
    }

    printWarning('error', format, args);
  }
}

function printWarning(level, format, args) {
  // When changing this logic, you might want to also
  // update consoleWithStackDev.www.js as well.
  {
    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
    var stack = ReactDebugCurrentFrame.getStackAddendum();

    if (stack !== '') {
      format += '%s';
      args = args.concat([stack]);
    }

    var argsWithFormat = args.map(function (item) {
      return '' + item;
    }); // Careful: RN currently depends on this prefix

    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
    // breaks IE9: https://github.com/facebook/react/issues/13610
    // eslint-disable-next-line react-internal/no-production-logging

    Function.prototype.apply.call(console[level], console, argsWithFormat);
  }
}

var didWarnStateUpdateForUnmountedComponent = {};

function warnNoop(publicInstance, callerName) {
  {
    var _constructor = publicInstance.constructor;
    var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';
    var warningKey = componentName + "." + callerName;

    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {
      return;
    }

    error("Can't call %s on a component that is not yet mounted. " + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);

    didWarnStateUpdateForUnmountedComponent[warningKey] = true;
  }
}
/**
 * This is the abstract API for an update queue.
 */


var ReactNoopUpdateQueue = {
  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function (publicInstance) {
    return false;
  },

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {?function} callback Called after component is updated.
   * @param {?string} callerName name of the calling function in the public API.
   * @internal
   */
  enqueueForceUpdate: function (publicInstance, callback, callerName) {
    warnNoop(publicInstance, 'forceUpdate');
  },

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @param {?function} callback Called after component is updated.
   * @param {?string} callerName name of the calling function in the public API.
   * @internal
   */
  enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {
    warnNoop(publicInstance, 'replaceState');
  },

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @param {?function} callback Called after component is updated.
   * @param {?string} Name of the calling function in the public API.
   * @internal
   */
  enqueueSetState: function (publicInstance, partialState, callback, callerName) {
    warnNoop(publicInstance, 'setState');
  }
};

var emptyObject = {};

{
  Object.freeze(emptyObject);
}
/**
 * Base class helpers for the updating state of a component.
 */


function Component(props, context, updater) {
  this.props = props;
  this.context = context; // If a component has string refs, we will assign a different object later.

  this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the
  // renderer.

  this.updater = updater || ReactNoopUpdateQueue;
}

Component.prototype.isReactComponent = {};
/**
 * Sets a subset of the state. Always use this to mutate
 * state. You should treat `this.state` as immutable.
 *
 * There is no guarantee that `this.state` will be immediately updated, so
 * accessing `this.state` after calling this method may return the old value.
 *
 * There is no guarantee that calls to `setState` will run synchronously,
 * as they may eventually be batched together.  You can provide an optional
 * callback that will be executed when the call to setState is actually
 * completed.
 *
 * When a function is provided to setState, it will be called at some point in
 * the future (not synchronously). It will be called with the up to date
 * component arguments (state, props, context). These values can be different
 * from this.* because your function may be called after receiveProps but before
 * shouldComponentUpdate, and this new state, props, and context will not yet be
 * assigned to this.
 *
 * @param {object|function} partialState Next partial state or function to
 *        produce next partial state to be merged with current state.
 * @param {?function} callback Called after state is updated.
 * @final
 * @protected
 */

Component.prototype.setState = function (partialState, callback) {
  if (!(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null)) {
    {
      throw Error( "setState(...): takes an object of state variables to update or a function which returns an object of state variables." );
    }
  }

  this.updater.enqueueSetState(this, partialState, callback, 'setState');
};
/**
 * Forces an update. This should only be invoked when it is known with
 * certainty that we are **not** in a DOM transaction.
 *
 * You may want to call this when you know that some deeper aspect of the
 * component's state has changed but `setState` was not called.
 *
 * This will not invoke `shouldComponentUpdate`, but it will invoke
 * `componentWillUpdate` and `componentDidUpdate`.
 *
 * @param {?function} callback Called after update is complete.
 * @final
 * @protected
 */


Component.prototype.forceUpdate = function (callback) {
  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');
};
/**
 * Deprecated APIs. These APIs used to exist on classic React classes but since
 * we would like to deprecate them, we're not going to move them over to this
 * modern base class. Instead, we define a getter that warns if it's accessed.
 */


{
  var deprecatedAPIs = {
    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
  };

  var defineDeprecationWarning = function (methodName, info) {
    Object.defineProperty(Component.prototype, methodName, {
      get: function () {
        warn('%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);

        return undefined;
      }
    });
  };

  for (var fnName in deprecatedAPIs) {
    if (deprecatedAPIs.hasOwnProperty(fnName)) {
      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
    }
  }
}

function ComponentDummy() {}

ComponentDummy.prototype = Component.prototype;
/**
 * Convenience component with default shallow equality check for sCU.
 */

function PureComponent(props, context, updater) {
  this.props = props;
  this.context = context; // If a component has string refs, we will assign a different object later.

  this.refs = emptyObject;
  this.updater = updater || ReactNoopUpdateQueue;
}

var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
pureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.

_assign(pureComponentPrototype, Component.prototype);

pureComponentPrototype.isPureReactComponent = true;

// an immutable object with a single mutable value
function createRef() {
  var refObject = {
    current: null
  };

  {
    Object.seal(refObject);
  }

  return refObject;
}

function getWrappedName(outerType, innerType, wrapperName) {
  var functionName = innerType.displayName || innerType.name || '';
  return outerType.displayName || (functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName);
}

function getContextName(type) {
  return type.displayName || 'Context';
}

function getComponentName(type) {
  if (type == null) {
    // Host root, text node or just invalid type.
    return null;
  }

  {
    if (typeof type.tag === 'number') {
      error('Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');
    }
  }

  if (typeof type === 'function') {
    return type.displayName || type.name || null;
  }

  if (typeof type === 'string') {
    return type;
  }

  switch (type) {
    case exports.Fragment:
      return 'Fragment';

    case REACT_PORTAL_TYPE:
      return 'Portal';

    case exports.Profiler:
      return 'Profiler';

    case exports.StrictMode:
      return 'StrictMode';

    case exports.Suspense:
      return 'Suspense';

    case REACT_SUSPENSE_LIST_TYPE:
      return 'SuspenseList';
  }

  if (typeof type === 'object') {
    switch (type.$$typeof) {
      case REACT_CONTEXT_TYPE:
        var context = type;
        return getContextName(context) + '.Consumer';

      case REACT_PROVIDER_TYPE:
        var provider = type;
        return getContextName(provider._context) + '.Provider';

      case REACT_FORWARD_REF_TYPE:
        return getWrappedName(type, type.render, 'ForwardRef');

      case REACT_MEMO_TYPE:
        return getComponentName(type.type);

      case REACT_BLOCK_TYPE:
        return getComponentName(type._render);

      case REACT_LAZY_TYPE:
        {
          var lazyComponent = type;
          var payload = lazyComponent._payload;
          var init = lazyComponent._init;

          try {
            return getComponentName(init(payload));
          } catch (x) {
            return null;
          }
        }
    }
  }

  return null;
}

var hasOwnProperty = Object.prototype.hasOwnProperty;
var RESERVED_PROPS = {
  key: true,
  ref: true,
  __self: true,
  __source: true
};
var specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;

{
  didWarnAboutStringRefs = {};
}

function hasValidRef(config) {
  {
    if (hasOwnProperty.call(config, 'ref')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;

      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }

  return config.ref !== undefined;
}

function hasValidKey(config) {
  {
    if (hasOwnProperty.call(config, 'key')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;

      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }

  return config.key !== undefined;
}

function defineKeyPropWarningGetter(props, displayName) {
  var warnAboutAccessingKey = function () {
    {
      if (!specialPropKeyWarningShown) {
        specialPropKeyWarningShown = true;

        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);
      }
    }
  };

  warnAboutAccessingKey.isReactWarning = true;
  Object.defineProperty(props, 'key', {
    get: warnAboutAccessingKey,
    configurable: true
  });
}

function defineRefPropWarningGetter(props, displayName) {
  var warnAboutAccessingRef = function () {
    {
      if (!specialPropRefWarningShown) {
        specialPropRefWarningShown = true;

        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);
      }
    }
  };

  warnAboutAccessingRef.isReactWarning = true;
  Object.defineProperty(props, 'ref', {
    get: warnAboutAccessingRef,
    configurable: true
  });
}

function warnIfStringRefCannotBeAutoConverted(config) {
  {
    if (typeof config.ref === 'string' && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {
      var componentName = getComponentName(ReactCurrentOwner.current.type);

      if (!didWarnAboutStringRefs[componentName]) {
        error('Component "%s" contains the string ref "%s". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', componentName, config.ref);

        didWarnAboutStringRefs[componentName] = true;
      }
    }
  }
}
/**
 * Factory method to create a new React element. This no longer adheres to
 * the class pattern, so do not use new to call it. Also, instanceof check
 * will not work. Instead test $$typeof field against Symbol.for('react.element') to check
 * if something is a React Element.
 *
 * @param {*} type
 * @param {*} props
 * @param {*} key
 * @param {string|object} ref
 * @param {*} owner
 * @param {*} self A *temporary* helper to detect places where `this` is
 * different from the `owner` when React.createElement is called, so that we
 * can warn. We want to get rid of owner and replace string `ref`s with arrow
 * functions, and as long as `this` and owner are the same, there will be no
 * change in behavior.
 * @param {*} source An annotation object (added by a transpiler or otherwise)
 * indicating filename, line number, and/or other information.
 * @internal
 */


var ReactElement = function (type, key, ref, self, source, owner, props) {
  var element = {
    // This tag allows us to uniquely identify this as a React Element
    $$typeof: REACT_ELEMENT_TYPE,
    // Built-in properties that belong on the element
    type: type,
    key: key,
    ref: ref,
    props: props,
    // Record the component responsible for creating this element.
    _owner: owner
  };

  {
    // The validation flag is currently mutative. We put it on
    // an external backing store so that we can freeze the whole object.
    // This can be replaced with a WeakMap once they are implemented in
    // commonly used development environments.
    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make
    // the validation flag non-enumerable (where possible, which should
    // include every environment we run tests in), so the test framework
    // ignores it.

    Object.defineProperty(element._store, 'validated', {
      configurable: false,
      enumerable: false,
      writable: true,
      value: false
    }); // self and source are DEV only properties.

    Object.defineProperty(element, '_self', {
      configurable: false,
      enumerable: false,
      writable: false,
      value: self
    }); // Two elements created in two different places should be considered
    // equal for testing purposes and therefore we hide it from enumeration.

    Object.defineProperty(element, '_source', {
      configurable: false,
      enumerable: false,
      writable: false,
      value: source
    });

    if (Object.freeze) {
      Object.freeze(element.props);
      Object.freeze(element);
    }
  }

  return element;
};
/**
 * Create and return a new ReactElement of the given type.
 * See https://reactjs.org/docs/react-api.html#createelement
 */

function createElement(type, config, children) {
  var propName; // Reserved names are extracted

  var props = {};
  var key = null;
  var ref = null;
  var self = null;
  var source = null;

  if (config != null) {
    if (hasValidRef(config)) {
      ref = config.ref;

      {
        warnIfStringRefCannotBeAutoConverted(config);
      }
    }

    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    self = config.__self === undefined ? null : config.__self;
    source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object

    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        props[propName] = config[propName];
      }
    }
  } // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.


  var childrenLength = arguments.length - 2;

  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);

    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }

    {
      if (Object.freeze) {
        Object.freeze(childArray);
      }
    }

    props.children = childArray;
  } // Resolve default props


  if (type && type.defaultProps) {
    var defaultProps = type.defaultProps;

    for (propName in defaultProps) {
      if (props[propName] === undefined) {
        props[propName] = defaultProps[propName];
      }
    }
  }

  {
    if (key || ref) {
      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;

      if (key) {
        defineKeyPropWarningGetter(props, displayName);
      }

      if (ref) {
        defineRefPropWarningGetter(props, displayName);
      }
    }
  }

  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
}
function cloneAndReplaceKey(oldElement, newKey) {
  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
  return newElement;
}
/**
 * Clone and return a new ReactElement using element as the starting point.
 * See https://reactjs.org/docs/react-api.html#cloneelement
 */

function cloneElement(element, config, children) {
  if (!!(element === null || element === undefined)) {
    {
      throw Error( "React.cloneElement(...): The argument must be a React element, but you passed " + element + "." );
    }
  }

  var propName; // Original props are copied

  var props = _assign({}, element.props); // Reserved names are extracted


  var key = element.key;
  var ref = element.ref; // Self is preserved since the owner is preserved.

  var self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a
  // transpiler, and the original source is probably a better indicator of the
  // true owner.

  var source = element._source; // Owner will be preserved, unless ref is overridden

  var owner = element._owner;

  if (config != null) {
    if (hasValidRef(config)) {
      // Silently steal the ref from the parent.
      ref = config.ref;
      owner = ReactCurrentOwner.current;
    }

    if (hasValidKey(config)) {
      key = '' + config.key;
    } // Remaining properties override existing props


    var defaultProps;

    if (element.type && element.type.defaultProps) {
      defaultProps = element.type.defaultProps;
    }

    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        if (config[propName] === undefined && defaultProps !== undefined) {
          // Resolve default props
          props[propName] = defaultProps[propName];
        } else {
          props[propName] = config[propName];
        }
      }
    }
  } // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.


  var childrenLength = arguments.length - 2;

  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);

    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }

    props.children = childArray;
  }

  return ReactElement(element.type, key, ref, self, source, owner, props);
}
/**
 * Verifies the object is a ReactElement.
 * See https://reactjs.org/docs/react-api.html#isvalidelement
 * @param {?object} object
 * @return {boolean} True if `object` is a ReactElement.
 * @final
 */

function isValidElement(object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
}

var SEPARATOR = '.';
var SUBSEPARATOR = ':';
/**
 * Escape and wrap key so it is safe to use as a reactid
 *
 * @param {string} key to be escaped.
 * @return {string} the escaped key.
 */

function escape(key) {
  var escapeRegex = /[=:]/g;
  var escaperLookup = {
    '=': '=0',
    ':': '=2'
  };
  var escapedString = key.replace(escapeRegex, function (match) {
    return escaperLookup[match];
  });
  return '$' + escapedString;
}
/**
 * TODO: Test that a single child and an array with one item have the same key
 * pattern.
 */


var didWarnAboutMaps = false;
var userProvidedKeyEscapeRegex = /\/+/g;

function escapeUserProvidedKey(text) {
  return text.replace(userProvidedKeyEscapeRegex, '$&/');
}
/**
 * Generate a key string that identifies a element within a set.
 *
 * @param {*} element A element that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */


function getElementKey(element, index) {
  // Do some typechecking here since we call this blindly. We want to ensure
  // that we don't block potential future ES APIs.
  if (typeof element === 'object' && element !== null && element.key != null) {
    // Explicit key
    return escape('' + element.key);
  } // Implicit key determined by the index in the set


  return index.toString(36);
}

function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {
  var type = typeof children;

  if (type === 'undefined' || type === 'boolean') {
    // All of the above are perceived as null.
    children = null;
  }

  var invokeCallback = false;

  if (children === null) {
    invokeCallback = true;
  } else {
    switch (type) {
      case 'string':
      case 'number':
        invokeCallback = true;
        break;

      case 'object':
        switch (children.$$typeof) {
          case REACT_ELEMENT_TYPE:
          case REACT_PORTAL_TYPE:
            invokeCallback = true;
        }

    }
  }

  if (invokeCallback) {
    var _child = children;
    var mappedChild = callback(_child); // If it's the only child, treat the name as if it was wrapped in an array
    // so that it's consistent if the number of children grows:

    var childKey = nameSoFar === '' ? SEPARATOR + getElementKey(_child, 0) : nameSoFar;

    if (Array.isArray(mappedChild)) {
      var escapedChildKey = '';

      if (childKey != null) {
        escapedChildKey = escapeUserProvidedKey(childKey) + '/';
      }

      mapIntoArray(mappedChild, array, escapedChildKey, '', function (c) {
        return c;
      });
    } else if (mappedChild != null) {
      if (isValidElement(mappedChild)) {
        mappedChild = cloneAndReplaceKey(mappedChild, // Keep both the (mapped) and old keys if they differ, just as
        // traverseAllChildren used to do for objects as children
        escapedPrefix + ( // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key
        mappedChild.key && (!_child || _child.key !== mappedChild.key) ? // $FlowFixMe Flow incorrectly thinks existing element's key can be a number
        escapeUserProvidedKey('' + mappedChild.key) + '/' : '') + childKey);
      }

      array.push(mappedChild);
    }

    return 1;
  }

  var child;
  var nextName;
  var subtreeCount = 0; // Count of children found in the current subtree.

  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      child = children[i];
      nextName = nextNamePrefix + getElementKey(child, i);
      subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
    }
  } else {
    var iteratorFn = getIteratorFn(children);

    if (typeof iteratorFn === 'function') {
      var iterableChildren = children;

      {
        // Warn about using Maps as children
        if (iteratorFn === iterableChildren.entries) {
          if (!didWarnAboutMaps) {
            warn('Using Maps as children is not supported. ' + 'Use an array of keyed ReactElements instead.');
          }

          didWarnAboutMaps = true;
        }
      }

      var iterator = iteratorFn.call(iterableChildren);
      var step;
      var ii = 0;

      while (!(step = iterator.next()).done) {
        child = step.value;
        nextName = nextNamePrefix + getElementKey(child, ii++);
        subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
      }
    } else if (type === 'object') {
      var childrenString = '' + children;

      {
        {
          throw Error( "Objects are not valid as a React child (found: " + (childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString) + "). If you meant to render a collection of children, use an array instead." );
        }
      }
    }
  }

  return subtreeCount;
}

/**
 * Maps children that are typically specified as `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenmap
 *
 * The provided mapFunction(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} func The map function.
 * @param {*} context Context for mapFunction.
 * @return {object} Object containing the ordered map of results.
 */
function mapChildren(children, func, context) {
  if (children == null) {
    return children;
  }

  var result = [];
  var count = 0;
  mapIntoArray(children, result, '', '', function (child) {
    return func.call(context, child, count++);
  });
  return result;
}
/**
 * Count the number of children that are typically specified as
 * `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrencount
 *
 * @param {?*} children Children tree container.
 * @return {number} The number of children.
 */


function countChildren(children) {
  var n = 0;
  mapChildren(children, function () {
    n++; // Don't return anything
  });
  return n;
}

/**
 * Iterates through children that are typically specified as `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenforeach
 *
 * The provided forEachFunc(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} forEachFunc
 * @param {*} forEachContext Context for forEachContext.
 */
function forEachChildren(children, forEachFunc, forEachContext) {
  mapChildren(children, function () {
    forEachFunc.apply(this, arguments); // Don't return anything.
  }, forEachContext);
}
/**
 * Flatten a children object (typically specified as `props.children`) and
 * return an array with appropriately re-keyed children.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrentoarray
 */


function toArray(children) {
  return mapChildren(children, function (child) {
    return child;
  }) || [];
}
/**
 * Returns the first child in a collection of children and verifies that there
 * is only one child in the collection.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenonly
 *
 * The current implementation of this function assumes that a single child gets
 * passed without a wrapper, but the purpose of this helper function is to
 * abstract away the particular structure of children.
 *
 * @param {?object} children Child collection structure.
 * @return {ReactElement} The first and only `ReactElement` contained in the
 * structure.
 */


function onlyChild(children) {
  if (!isValidElement(children)) {
    {
      throw Error( "React.Children.only expected to receive a single React element child." );
    }
  }

  return children;
}

function createContext(defaultValue, calculateChangedBits) {
  if (calculateChangedBits === undefined) {
    calculateChangedBits = null;
  } else {
    {
      if (calculateChangedBits !== null && typeof calculateChangedBits !== 'function') {
        error('createContext: Expected the optional second argument to be a ' + 'function. Instead received: %s', calculateChangedBits);
      }
    }
  }

  var context = {
    $$typeof: REACT_CONTEXT_TYPE,
    _calculateChangedBits: calculateChangedBits,
    // As a workaround to support multiple concurrent renderers, we categorize
    // some renderers as primary and others as secondary. We only expect
    // there to be two concurrent renderers at most: React Native (primary) and
    // Fabric (secondary); React DOM (primary) and React ART (secondary).
    // Secondary renderers store their context values on separate fields.
    _currentValue: defaultValue,
    _currentValue2: defaultValue,
    // Used to track how many concurrent renderers this context currently
    // supports within in a single renderer. Such as parallel server rendering.
    _threadCount: 0,
    // These are circular
    Provider: null,
    Consumer: null
  };
  context.Provider = {
    $$typeof: REACT_PROVIDER_TYPE,
    _context: context
  };
  var hasWarnedAboutUsingNestedContextConsumers = false;
  var hasWarnedAboutUsingConsumerProvider = false;
  var hasWarnedAboutDisplayNameOnConsumer = false;

  {
    // A separate object, but proxies back to the original context object for
    // backwards compatibility. It has a different $$typeof, so we can properly
    // warn for the incorrect usage of Context as a Consumer.
    var Consumer = {
      $$typeof: REACT_CONTEXT_TYPE,
      _context: context,
      _calculateChangedBits: context._calculateChangedBits
    }; // $FlowFixMe: Flow complains about not setting a value, which is intentional here

    Object.defineProperties(Consumer, {
      Provider: {
        get: function () {
          if (!hasWarnedAboutUsingConsumerProvider) {
            hasWarnedAboutUsingConsumerProvider = true;

            error('Rendering <Context.Consumer.Provider> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Provider> instead?');
          }

          return context.Provider;
        },
        set: function (_Provider) {
          context.Provider = _Provider;
        }
      },
      _currentValue: {
        get: function () {
          return context._currentValue;
        },
        set: function (_currentValue) {
          context._currentValue = _currentValue;
        }
      },
      _currentValue2: {
        get: function () {
          return context._currentValue2;
        },
        set: function (_currentValue2) {
          context._currentValue2 = _currentValue2;
        }
      },
      _threadCount: {
        get: function () {
          return context._threadCount;
        },
        set: function (_threadCount) {
          context._threadCount = _threadCount;
        }
      },
      Consumer: {
        get: function () {
          if (!hasWarnedAboutUsingNestedContextConsumers) {
            hasWarnedAboutUsingNestedContextConsumers = true;

            error('Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');
          }

          return context.Consumer;
        }
      },
      displayName: {
        get: function () {
          return context.displayName;
        },
        set: function (displayName) {
          if (!hasWarnedAboutDisplayNameOnConsumer) {
            warn('Setting `displayName` on Context.Consumer has no effect. ' + "You should set it directly on the context with Context.displayName = '%s'.", displayName);

            hasWarnedAboutDisplayNameOnConsumer = true;
          }
        }
      }
    }); // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty

    context.Consumer = Consumer;
  }

  {
    context._currentRenderer = null;
    context._currentRenderer2 = null;
  }

  return context;
}

var Uninitialized = -1;
var Pending = 0;
var Resolved = 1;
var Rejected = 2;

function lazyInitializer(payload) {
  if (payload._status === Uninitialized) {
    var ctor = payload._result;
    var thenable = ctor(); // Transition to the next state.

    var pending = payload;
    pending._status = Pending;
    pending._result = thenable;
    thenable.then(function (moduleObject) {
      if (payload._status === Pending) {
        var defaultExport = moduleObject.default;

        {
          if (defaultExport === undefined) {
            error('lazy: Expected the result of a dynamic import() call. ' + 'Instead received: %s\n\nYour code should look like: \n  ' + // Break up imports to avoid accidentally parsing them as dependencies.
            'const MyComponent = lazy(() => imp' + "ort('./MyComponent'))", moduleObject);
          }
        } // Transition to the next state.


        var resolved = payload;
        resolved._status = Resolved;
        resolved._result = defaultExport;
      }
    }, function (error) {
      if (payload._status === Pending) {
        // Transition to the next state.
        var rejected = payload;
        rejected._status = Rejected;
        rejected._result = error;
      }
    });
  }

  if (payload._status === Resolved) {
    return payload._result;
  } else {
    throw payload._result;
  }
}

function lazy(ctor) {
  var payload = {
    // We use these fields to store the result.
    _status: -1,
    _result: ctor
  };
  var lazyType = {
    $$typeof: REACT_LAZY_TYPE,
    _payload: payload,
    _init: lazyInitializer
  };

  {
    // In production, this would just set it on the object.
    var defaultProps;
    var propTypes; // $FlowFixMe

    Object.defineProperties(lazyType, {
      defaultProps: {
        configurable: true,
        get: function () {
          return defaultProps;
        },
        set: function (newDefaultProps) {
          error('React.lazy(...): It is not supported to assign `defaultProps` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');

          defaultProps = newDefaultProps; // Match production behavior more closely:
          // $FlowFixMe

          Object.defineProperty(lazyType, 'defaultProps', {
            enumerable: true
          });
        }
      },
      propTypes: {
        configurable: true,
        get: function () {
          return propTypes;
        },
        set: function (newPropTypes) {
          error('React.lazy(...): It is not supported to assign `propTypes` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');

          propTypes = newPropTypes; // Match production behavior more closely:
          // $FlowFixMe

          Object.defineProperty(lazyType, 'propTypes', {
            enumerable: true
          });
        }
      }
    });
  }

  return lazyType;
}

function forwardRef(render) {
  {
    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {
      error('forwardRef requires a render function but received a `memo` ' + 'component. Instead of forwardRef(memo(...)), use ' + 'memo(forwardRef(...)).');
    } else if (typeof render !== 'function') {
      error('forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);
    } else {
      if (render.length !== 0 && render.length !== 2) {
        error('forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.');
      }
    }

    if (render != null) {
      if (render.defaultProps != null || render.propTypes != null) {
        error('forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?');
      }
    }
  }

  var elementType = {
    $$typeof: REACT_FORWARD_REF_TYPE,
    render: render
  };

  {
    var ownName;
    Object.defineProperty(elementType, 'displayName', {
      enumerable: false,
      configurable: true,
      get: function () {
        return ownName;
      },
      set: function (name) {
        ownName = name;

        if (render.displayName == null) {
          render.displayName = name;
        }
      }
    });
  }

  return elementType;
}

// Filter certain DOM attributes (e.g. src, href) if their values are empty strings.

var enableScopeAPI = false; // Experimental Create Event Handle API.

function isValidElementType(type) {
  if (typeof type === 'string' || typeof type === 'function') {
    return true;
  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).


  if (type === exports.Fragment || type === exports.Profiler || type === REACT_DEBUG_TRACING_MODE_TYPE || type === exports.StrictMode || type === exports.Suspense || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_LEGACY_HIDDEN_TYPE || enableScopeAPI ) {
    return true;
  }

  if (typeof type === 'object' && type !== null) {
    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_BLOCK_TYPE || type[0] === REACT_SERVER_BLOCK_TYPE) {
      return true;
    }
  }

  return false;
}

function memo(type, compare) {
  {
    if (!isValidElementType(type)) {
      error('memo: The first argument must be a component. Instead ' + 'received: %s', type === null ? 'null' : typeof type);
    }
  }

  var elementType = {
    $$typeof: REACT_MEMO_TYPE,
    type: type,
    compare: compare === undefined ? null : compare
  };

  {
    var ownName;
    Object.defineProperty(elementType, 'displayName', {
      enumerable: false,
      configurable: true,
      get: function () {
        return ownName;
      },
      set: function (name) {
        ownName = name;

        if (type.displayName == null) {
          type.displayName = name;
        }
      }
    });
  }

  return elementType;
}

function resolveDispatcher() {
  var dispatcher = ReactCurrentDispatcher.current;

  if (!(dispatcher !== null)) {
    {
      throw Error( "Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem." );
    }
  }

  return dispatcher;
}

function useContext(Context, unstable_observedBits) {
  var dispatcher = resolveDispatcher();

  {
    if (unstable_observedBits !== undefined) {
      error('useContext() second argument is reserved for future ' + 'use in React. Passing it is not supported. ' + 'You passed: %s.%s', unstable_observedBits, typeof unstable_observedBits === 'number' && Array.isArray(arguments[2]) ? '\n\nDid you call array.map(useContext)? ' + 'Calling Hooks inside a loop is not supported. ' + 'Learn more at https://reactjs.org/link/rules-of-hooks' : '');
    } // TODO: add a more generic warning for invalid values.


    if (Context._context !== undefined) {
      var realContext = Context._context; // Don't deduplicate because this legitimately causes bugs
      // and nobody should be using this in existing code.

      if (realContext.Consumer === Context) {
        error('Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' + 'removed in a future major release. Did you mean to call useContext(Context) instead?');
      } else if (realContext.Provider === Context) {
        error('Calling useContext(Context.Provider) is not supported. ' + 'Did you mean to call useContext(Context) instead?');
      }
    }
  }

  return dispatcher.useContext(Context, unstable_observedBits);
}
function useState(initialState) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useState(initialState);
}
function useReducer(reducer, initialArg, init) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useReducer(reducer, initialArg, init);
}
function useRef(initialValue) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useRef(initialValue);
}
function useEffect(create, deps) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useEffect(create, deps);
}
function useLayoutEffect(create, deps) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useLayoutEffect(create, deps);
}
function useCallback(callback, deps) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useCallback(callback, deps);
}
function useMemo(create, deps) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useMemo(create, deps);
}
function useImperativeHandle(ref, create, deps) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useImperativeHandle(ref, create, deps);
}
function useDebugValue(value, formatterFn) {
  {
    var dispatcher = resolveDispatcher();
    return dispatcher.useDebugValue(value, formatterFn);
  }
}

// Helpers to patch console.logs to avoid logging during side-effect free
// replaying on render function. This currently only patches the object
// lazily which won't cover if the log function was extracted eagerly.
// We could also eagerly patch the method.
var disabledDepth = 0;
var prevLog;
var prevInfo;
var prevWarn;
var prevError;
var prevGroup;
var prevGroupCollapsed;
var prevGroupEnd;

function disabledLog() {}

disabledLog.__reactDisabledLog = true;
function disableLogs() {
  {
    if (disabledDepth === 0) {
      /* eslint-disable react-internal/no-production-logging */
      prevLog = console.log;
      prevInfo = console.info;
      prevWarn = console.warn;
      prevError = console.error;
      prevGroup = console.group;
      prevGroupCollapsed = console.groupCollapsed;
      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099

      var props = {
        configurable: true,
        enumerable: true,
        value: disabledLog,
        writable: true
      }; // $FlowFixMe Flow thinks console is immutable.

      Object.defineProperties(console, {
        info: props,
        log: props,
        warn: props,
        error: props,
        group: props,
        groupCollapsed: props,
        groupEnd: props
      });
      /* eslint-enable react-internal/no-production-logging */
    }

    disabledDepth++;
  }
}
function reenableLogs() {
  {
    disabledDepth--;

    if (disabledDepth === 0) {
      /* eslint-disable react-internal/no-production-logging */
      var props = {
        configurable: true,
        enumerable: true,
        writable: true
      }; // $FlowFixMe Flow thinks console is immutable.

      Object.defineProperties(console, {
        log: _assign({}, props, {
          value: prevLog
        }),
        info: _assign({}, props, {
          value: prevInfo
        }),
        warn: _assign({}, props, {
          value: prevWarn
        }),
        error: _assign({}, props, {
          value: prevError
        }),
        group: _assign({}, props, {
          value: prevGroup
        }),
        groupCollapsed: _assign({}, props, {
          value: prevGroupCollapsed
        }),
        groupEnd: _assign({}, props, {
          value: prevGroupEnd
        })
      });
      /* eslint-enable react-internal/no-production-logging */
    }

    if (disabledDepth < 0) {
      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');
    }
  }
}

var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;
var prefix;
function describeBuiltInComponentFrame(name, source, ownerFn) {
  {
    if (prefix === undefined) {
      // Extract the VM specific prefix used by each line.
      try {
        throw Error();
      } catch (x) {
        var match = x.stack.trim().match(/\n( *(at )?)/);
        prefix = match && match[1] || '';
      }
    } // We use the prefix to ensure our stacks line up with native stack frames.


    return '\n' + prefix + name;
  }
}
var reentry = false;
var componentFrameCache;

{
  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;
  componentFrameCache = new PossiblyWeakMap();
}

function describeNativeComponentFrame(fn, construct) {
  // If something asked for a stack inside a fake render, it should get ignored.
  if (!fn || reentry) {
    return '';
  }

  {
    var frame = componentFrameCache.get(fn);

    if (frame !== undefined) {
      return frame;
    }
  }

  var control;
  reentry = true;
  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.

  Error.prepareStackTrace = undefined;
  var previousDispatcher;

  {
    previousDispatcher = ReactCurrentDispatcher$1.current; // Set the dispatcher in DEV because this might be call in the render function
    // for warnings.

    ReactCurrentDispatcher$1.current = null;
    disableLogs();
  }

  try {
    // This should throw.
    if (construct) {
      // Something should be setting the props in the constructor.
      var Fake = function () {
        throw Error();
      }; // $FlowFixMe


      Object.defineProperty(Fake.prototype, 'props', {
        set: function () {
          // We use a throwing setter instead of frozen or non-writable props
          // because that won't throw in a non-strict mode function.
          throw Error();
        }
      });

      if (typeof Reflect === 'object' && Reflect.construct) {
        // We construct a different control for this case to include any extra
        // frames added by the construct call.
        try {
          Reflect.construct(Fake, []);
        } catch (x) {
          control = x;
        }

        Reflect.construct(fn, [], Fake);
      } else {
        try {
          Fake.call();
        } catch (x) {
          control = x;
        }

        fn.call(Fake.prototype);
      }
    } else {
      try {
        throw Error();
      } catch (x) {
        control = x;
      }

      fn();
    }
  } catch (sample) {
    // This is inlined manually because closure doesn't do it for us.
    if (sample && control && typeof sample.stack === 'string') {
      // This extracts the first frame from the sample that isn't also in the control.
      // Skipping one frame that we assume is the frame that calls the two.
      var sampleLines = sample.stack.split('\n');
      var controlLines = control.stack.split('\n');
      var s = sampleLines.length - 1;
      var c = controlLines.length - 1;

      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {
        // We expect at least one stack frame to be shared.
        // Typically this will be the root most one. However, stack frames may be
        // cut off due to maximum stack limits. In this case, one maybe cut off
        // earlier than the other. We assume that the sample is longer or the same
        // and there for cut off earlier. So we should find the root most frame in
        // the sample somewhere in the control.
        c--;
      }

      for (; s >= 1 && c >= 0; s--, c--) {
        // Next we find the first one that isn't the same which should be the
        // frame that called our sample function and the control.
        if (sampleLines[s] !== controlLines[c]) {
          // In V8, the first line is describing the message but other VMs don't.
          // If we're about to return the first line, and the control is also on the same
          // line, that's a pretty good indicator that our sample threw at same line as
          // the control. I.e. before we entered the sample frame. So we ignore this result.
          // This can happen if you passed a class to function component, or non-function.
          if (s !== 1 || c !== 1) {
            do {
              s--;
              c--; // We may still have similar intermediate frames from the construct call.
              // The next one that isn't the same should be our match though.

              if (c < 0 || sampleLines[s] !== controlLines[c]) {
                // V8 adds a "new" prefix for native classes. Let's remove it to make it prettier.
                var _frame = '\n' + sampleLines[s].replace(' at new ', ' at ');

                {
                  if (typeof fn === 'function') {
                    componentFrameCache.set(fn, _frame);
                  }
                } // Return the line we found.


                return _frame;
              }
            } while (s >= 1 && c >= 0);
          }

          break;
        }
      }
    }
  } finally {
    reentry = false;

    {
      ReactCurrentDispatcher$1.current = previousDispatcher;
      reenableLogs();
    }

    Error.prepareStackTrace = previousPrepareStackTrace;
  } // Fallback to just using the name if we couldn't make it throw.


  var name = fn ? fn.displayName || fn.name : '';
  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';

  {
    if (typeof fn === 'function') {
      componentFrameCache.set(fn, syntheticFrame);
    }
  }

  return syntheticFrame;
}
function describeFunctionComponentFrame(fn, source, ownerFn) {
  {
    return describeNativeComponentFrame(fn, false);
  }
}

function shouldConstruct(Component) {
  var prototype = Component.prototype;
  return !!(prototype && prototype.isReactComponent);
}

function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {

  if (type == null) {
    return '';
  }

  if (typeof type === 'function') {
    {
      return describeNativeComponentFrame(type, shouldConstruct(type));
    }
  }

  if (typeof type === 'string') {
    return describeBuiltInComponentFrame(type);
  }

  switch (type) {
    case exports.Suspense:
      return describeBuiltInComponentFrame('Suspense');

    case REACT_SUSPENSE_LIST_TYPE:
      return describeBuiltInComponentFrame('SuspenseList');
  }

  if (typeof type === 'object') {
    switch (type.$$typeof) {
      case REACT_FORWARD_REF_TYPE:
        return describeFunctionComponentFrame(type.render);

      case REACT_MEMO_TYPE:
        // Memo may contain any component type so we recursively resolve it.
        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);

      case REACT_BLOCK_TYPE:
        return describeFunctionComponentFrame(type._render);

      case REACT_LAZY_TYPE:
        {
          var lazyComponent = type;
          var payload = lazyComponent._payload;
          var init = lazyComponent._init;

          try {
            // Lazy may contain any component type so we recursively resolve it.
            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
          } catch (x) {}
        }
    }
  }

  return '';
}

var loggedTypeFailures = {};
var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;

function setCurrentlyValidatingElement(element) {
  {
    if (element) {
      var owner = element._owner;
      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
    } else {
      ReactDebugCurrentFrame$1.setExtraStackFrame(null);
    }
  }
}

function checkPropTypes(typeSpecs, values, location, componentName, element) {
  {
    // $FlowFixMe This is okay but Flow doesn't know it.
    var has = Function.call.bind(Object.prototype.hasOwnProperty);

    for (var typeSpecName in typeSpecs) {
      if (has(typeSpecs, typeSpecName)) {
        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.

        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
            err.name = 'Invariant Violation';
            throw err;
          }

          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
        } catch (ex) {
          error$1 = ex;
        }

        if (error$1 && !(error$1 instanceof Error)) {
          setCurrentlyValidatingElement(element);

          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);

          setCurrentlyValidatingElement(null);
        }

        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error$1.message] = true;
          setCurrentlyValidatingElement(element);

          error('Failed %s type: %s', location, error$1.message);

          setCurrentlyValidatingElement(null);
        }
      }
    }
  }
}

function setCurrentlyValidatingElement$1(element) {
  {
    if (element) {
      var owner = element._owner;
      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
      setExtraStackFrame(stack);
    } else {
      setExtraStackFrame(null);
    }
  }
}

var propTypesMisspellWarningShown;

{
  propTypesMisspellWarningShown = false;
}

function getDeclarationErrorAddendum() {
  if (ReactCurrentOwner.current) {
    var name = getComponentName(ReactCurrentOwner.current.type);

    if (name) {
      return '\n\nCheck the render method of `' + name + '`.';
    }
  }

  return '';
}

function getSourceInfoErrorAddendum(source) {
  if (source !== undefined) {
    var fileName = source.fileName.replace(/^.*[\\\/]/, '');
    var lineNumber = source.lineNumber;
    return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
  }

  return '';
}

function getSourceInfoErrorAddendumForProps(elementProps) {
  if (elementProps !== null && elementProps !== undefined) {
    return getSourceInfoErrorAddendum(elementProps.__source);
  }

  return '';
}
/**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */


var ownerHasKeyUseWarning = {};

function getCurrentComponentErrorInfo(parentType) {
  var info = getDeclarationErrorAddendum();

  if (!info) {
    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;

    if (parentName) {
      info = "\n\nCheck the top-level render call using <" + parentName + ">.";
    }
  }

  return info;
}
/**
 * Warn if the element doesn't have an explicit key assigned to it.
 * This element is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it. Error statuses are cached so a warning
 * will only be shown once.
 *
 * @internal
 * @param {ReactElement} element Element that requires a key.
 * @param {*} parentType element's parent's type.
 */


function validateExplicitKey(element, parentType) {
  if (!element._store || element._store.validated || element.key != null) {
    return;
  }

  element._store.validated = true;
  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);

  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
    return;
  }

  ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a
  // property, it may be the creator of the child that's responsible for
  // assigning it a key.

  var childOwner = '';

  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
    // Give the component that originally created this child.
    childOwner = " It was passed a child from " + getComponentName(element._owner.type) + ".";
  }

  {
    setCurrentlyValidatingElement$1(element);

    error('Each child in a list should have a unique "key" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);

    setCurrentlyValidatingElement$1(null);
  }
}
/**
 * Ensure that every element either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {ReactNode} node Statically passed child of any type.
 * @param {*} parentType node's parent's type.
 */


function validateChildKeys(node, parentType) {
  if (typeof node !== 'object') {
    return;
  }

  if (Array.isArray(node)) {
    for (var i = 0; i < node.length; i++) {
      var child = node[i];

      if (isValidElement(child)) {
        validateExplicitKey(child, parentType);
      }
    }
  } else if (isValidElement(node)) {
    // This element was passed in a valid location.
    if (node._store) {
      node._store.validated = true;
    }
  } else if (node) {
    var iteratorFn = getIteratorFn(node);

    if (typeof iteratorFn === 'function') {
      // Entry iterators used to provide implicit keys,
      // but now we print a separate warning for them later.
      if (iteratorFn !== node.entries) {
        var iterator = iteratorFn.call(node);
        var step;

        while (!(step = iterator.next()).done) {
          if (isValidElement(step.value)) {
            validateExplicitKey(step.value, parentType);
          }
        }
      }
    }
  }
}
/**
 * Given an element, validate that its props follow the propTypes definition,
 * provided by the type.
 *
 * @param {ReactElement} element
 */


function validatePropTypes(element) {
  {
    var type = element.type;

    if (type === null || type === undefined || typeof type === 'string') {
      return;
    }

    var propTypes;

    if (typeof type === 'function') {
      propTypes = type.propTypes;
    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.
    // Inner props are checked in the reconciler.
    type.$$typeof === REACT_MEMO_TYPE)) {
      propTypes = type.propTypes;
    } else {
      return;
    }

    if (propTypes) {
      // Intentionally inside to avoid triggering lazy initializers:
      var name = getComponentName(type);
      checkPropTypes(propTypes, element.props, 'prop', name, element);
    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {
      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:

      var _name = getComponentName(type);

      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');
    }

    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {
      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');
    }
  }
}
/**
 * Given a fragment, validate that it can only be provided with fragment props
 * @param {ReactElement} fragment
 */


function validateFragmentProps(fragment) {
  {
    var keys = Object.keys(fragment.props);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];

      if (key !== 'children' && key !== 'key') {
        setCurrentlyValidatingElement$1(fragment);

        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);

        setCurrentlyValidatingElement$1(null);
        break;
      }
    }

    if (fragment.ref !== null) {
      setCurrentlyValidatingElement$1(fragment);

      error('Invalid attribute `ref` supplied to `React.Fragment`.');

      setCurrentlyValidatingElement$1(null);
    }
  }
}
function createElementWithValidation(type, props, children) {
  var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to
  // succeed and there will likely be errors in render.

  if (!validType) {
    var info = '';

    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
      info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and named imports.";
    }

    var sourceInfo = getSourceInfoErrorAddendumForProps(props);

    if (sourceInfo) {
      info += sourceInfo;
    } else {
      info += getDeclarationErrorAddendum();
    }

    var typeString;

    if (type === null) {
      typeString = 'null';
    } else if (Array.isArray(type)) {
      typeString = 'array';
    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {
      typeString = "<" + (getComponentName(type.type) || 'Unknown') + " />";
      info = ' Did you accidentally export a JSX literal instead of a component?';
    } else {
      typeString = typeof type;
    }

    {
      error('React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);
    }
  }

  var element = createElement.apply(this, arguments); // The result can be nullish if a mock or a custom function is used.
  // TODO: Drop this when these are no longer allowed as the type argument.

  if (element == null) {
    return element;
  } // Skip key warning if the type isn't valid since our key validation logic
  // doesn't expect a non-string/function type and can throw confusing errors.
  // We don't want exception behavior to differ between dev and prod.
  // (Rendering will throw with a helpful message and as soon as the type is
  // fixed, the key warnings will appear.)


  if (validType) {
    for (var i = 2; i < arguments.length; i++) {
      validateChildKeys(arguments[i], type);
    }
  }

  if (type === exports.Fragment) {
    validateFragmentProps(element);
  } else {
    validatePropTypes(element);
  }

  return element;
}
var didWarnAboutDeprecatedCreateFactory = false;
function createFactoryWithValidation(type) {
  var validatedFactory = createElementWithValidation.bind(null, type);
  validatedFactory.type = type;

  {
    if (!didWarnAboutDeprecatedCreateFactory) {
      didWarnAboutDeprecatedCreateFactory = true;

      warn('React.createFactory() is deprecated and will be removed in ' + 'a future major release. Consider using JSX ' + 'or use React.createElement() directly instead.');
    } // Legacy hook: remove it


    Object.defineProperty(validatedFactory, 'type', {
      enumerable: false,
      get: function () {
        warn('Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');

        Object.defineProperty(this, 'type', {
          value: type
        });
        return type;
      }
    });
  }

  return validatedFactory;
}
function cloneElementWithValidation(element, props, children) {
  var newElement = cloneElement.apply(this, arguments);

  for (var i = 2; i < arguments.length; i++) {
    validateChildKeys(arguments[i], newElement.type);
  }

  validatePropTypes(newElement);
  return newElement;
}

{

  try {
    var frozenObject = Object.freeze({});
    /* eslint-disable no-new */

    new Map([[frozenObject, null]]);
    new Set([frozenObject]);
    /* eslint-enable no-new */
  } catch (e) {
  }
}

var createElement$1 =  createElementWithValidation ;
var cloneElement$1 =  cloneElementWithValidation ;
var createFactory =  createFactoryWithValidation ;
var Children = {
  map: mapChildren,
  forEach: forEachChildren,
  count: countChildren,
  toArray: toArray,
  only: onlyChild
};

exports.Children = Children;
exports.Component = Component;
exports.PureComponent = PureComponent;
exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;
exports.cloneElement = cloneElement$1;
exports.createContext = createContext;
exports.createElement = createElement$1;
exports.createFactory = createFactory;
exports.createRef = createRef;
exports.forwardRef = forwardRef;
exports.isValidElement = isValidElement;
exports.lazy = lazy;
exports.memo = memo;
exports.useCallback = useCallback;
exports.useContext = useContext;
exports.useDebugValue = useDebugValue;
exports.useEffect = useEffect;
exports.useImperativeHandle = useImperativeHandle;
exports.useLayoutEffect = useLayoutEffect;
exports.useMemo = useMemo;
exports.useReducer = useReducer;
exports.useRef = useRef;
exports.useState = useState;
exports.version = ReactVersion;
  })();
}


/***/ }),

/***/ "./node_modules/react/index.js":
/*!*************************************!*\
  !*** ./node_modules/react/index.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


if (false) {} else {
  module.exports = __webpack_require__(/*! ./cjs/react.development.js */ "./node_modules/react/cjs/react.development.js");
}


/***/ }),

/***/ "./node_modules/react/jsx-dev-runtime.js":
/*!***********************************************!*\
  !*** ./node_modules/react/jsx-dev-runtime.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


if (false) {} else {
  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ "./node_modules/react/cjs/react-jsx-dev-runtime.development.js");
}


/***/ }),

/***/ "./node_modules/regenerator-runtime/runtime.js":
/*!*****************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var runtime = (function (exports) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  function define(obj, key, value) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
    return obj[key];
  }
  try {
    // IE 8 has a broken Object.defineProperty that only works on DOM objects.
    define({}, "");
  } catch (err) {
    define = function(obj, key, value) {
      return obj[key] = value;
    };
  }

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.
    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  exports.wrap = wrap;

  // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.
  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.
  var ContinueSentinel = {};

  // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.
  var IteratorPrototype = {};
  IteratorPrototype[iteratorSymbol] = function () {
    return this;
  };

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype &&
      NativeIteratorPrototype !== Op &&
      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype =
    Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunction.displayName = define(
    GeneratorFunctionPrototype,
    toStringTagSymbol,
    "GeneratorFunction"
  );

  // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method) {
      define(prototype, method, function(arg) {
        return this._invoke(method, arg);
      });
    });
  }

  exports.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor
      ? ctor === GeneratorFunction ||
        // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction"
      : false;
  };

  exports.mark = function(genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      define(genFun, toStringTagSymbol, "GeneratorFunction");
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.
  exports.awrap = function(arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator, PromiseImpl) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value &&
            typeof value === "object" &&
            hasOwn.call(value, "__await")) {
          return PromiseImpl.resolve(value.__await).then(function(value) {
            invoke("next", value, resolve, reject);
          }, function(err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return PromiseImpl.resolve(value).then(function(unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration.
          result.value = unwrapped;
          resolve(result);
        }, function(error) {
          // If a rejected Promise was yielded, throw the rejection back
          // into the async generator function so it can be handled there.
          return invoke("throw", error, resolve, reject);
        });
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new PromiseImpl(function(resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(
          callInvokeWithMethodAndArg,
          // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg
        ) : callInvokeWithMethodAndArg();
    }

    // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).
    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
    return this;
  };
  exports.AsyncIterator = AsyncIterator;

  // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.
  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {
    if (PromiseImpl === void 0) PromiseImpl = Promise;

    var iter = new AsyncIterator(
      wrap(innerFn, outerFn, self, tryLocsList),
      PromiseImpl
    );

    return exports.isGeneratorFunction(outerFn)
      ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function(result) {
          return result.done ? result.value : iter.next();
        });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;

        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);

        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done
            ? GenStateCompleted
            : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };

        } else if (record.type === "throw") {
          state = GenStateCompleted;
          // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.
          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.
  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        // Note: ["return"] must be used for ES3 parsing compatibility.
        if (delegate.iterator["return"]) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError(
          "The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (! info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value;

      // Resume execution at the desired location (see delegateYield).
      context.next = delegate.nextLoc;

      // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.
      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }

    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    }

    // The delegate iterator is finished, so forget it and continue with
    // the outer generator.
    context.delegate = null;
    return ContinueSentinel;
  }

  // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.
  defineIteratorMethods(Gp);

  define(Gp, toStringTagSymbol, "Generator");

  // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.
  Gp[iteratorSymbol] = function() {
    return this;
  };

  Gp.toString = function() {
    return "[object Generator]";
  };

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  exports.keys = function(object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.
      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1, next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    // Return an iterator with no values.
    return { next: doneResult };
  }
  exports.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.
      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" &&
              hasOwn.call(this, name) &&
              !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !! caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }

          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev &&
            hasOwn.call(entry, "finallyLoc") &&
            this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry &&
          (type === "break" ||
           type === "continue") &&
          finallyEntry.tryLoc <= arg &&
          arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" ||
          record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.
      throw new Error("illegal catch attempt");
    },

    delegateYield: function(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  };

  // Regardless of whether this script is executing as a CommonJS module
  // or not, return the runtime object so that we can declare the variable
  // regeneratorRuntime in the outer scope, which allows this module to be
  // injected easily by `bin/regenerator --include-runtime script.js`.
  return exports;

}(
  // If this script is executing as a CommonJS module, use module.exports
  // as the regeneratorRuntime namespace. Otherwise create a new empty
  // object. Either way, the resulting object will be used to initialize
  // the regeneratorRuntime variable at the top of this file.
   true ? module.exports : undefined
));

try {
  regeneratorRuntime = runtime;
} catch (accidentalStrictMode) {
  // This module should not be running in strict mode, so the above
  // assignment should always work unless something is misconfigured. Just
  // in case runtime.js accidentally runs in strict mode, we can escape
  // strict mode using a global Function call. This could conceivably fail
  // if a Content Security Policy forbids using Function, but in that case
  // the proper solution is to fix the accidental strict mode problem. If
  // you've misconfigured your bundler to force strict mode and applied a
  // CSP to forbid Function, and you're not willing to fix either of those
  // problems, please detail your unique predicament in a GitHub issue.
  Function("r", "regeneratorRuntime = r")(runtime);
}


/***/ }),

/***/ "./pages/_app.js":
/*!***********************!*\
  !*** ./pages/_app.js ***!
  \***********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var C_Users_yoshw_projects_nextjs_bcbh_prototype_big_rigs_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/defineProperty */ "./node_modules/@babel/runtime/helpers/esm/defineProperty.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _styles_main_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../styles/main.css */ "./styles/main.css");
/* harmony import */ var _styles_main_css__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_styles_main_css__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _styles_app_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../styles/app.css */ "./styles/app.css");
/* harmony import */ var _styles_app_css__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_styles_app_css__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _styles_header_css__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../styles/header.css */ "./styles/header.css");
/* harmony import */ var _styles_header_css__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_styles_header_css__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _styles_footer_css__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../styles/footer.css */ "./styles/footer.css");
/* harmony import */ var _styles_footer_css__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_styles_footer_css__WEBPACK_IMPORTED_MODULE_5__);


var _jsxFileName = "C:\\Users\\yoshw\\projects\\nextjs\\bcbh-prototype\\big-rigs\\pages\\_app.js";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { Object(C_Users_yoshw_projects_nextjs_bcbh_prototype_big_rigs_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

// import '../styles/globals.css'





function MyApp(_ref) {
  var Component = _ref.Component,
      pageProps = _ref.pageProps;
  return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__["jsxDEV"])(Component, _objectSpread({}, pageProps), void 0, false, {
    fileName: _jsxFileName,
    lineNumber: 9,
    columnNumber: 10
  }, this);
}

_c = MyApp;
/* harmony default export */ __webpack_exports__["default"] = (MyApp);

var _c;

$RefreshReg$(_c, "MyApp");

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/next/dist/compiled/webpack/harmony-module.js */ "./node_modules/next/dist/compiled/webpack/harmony-module.js")(module)))

/***/ }),

/***/ "./styles/app.css":
/*!************************!*\
  !*** ./styles/app.css ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var api = __webpack_require__(/*! ../node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js */ "./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js");
            var content = __webpack_require__(/*! !../node_modules/next/dist/compiled/css-loader/cjs.js??ref--5-oneOf-6-1!../node_modules/next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-6-2!./app.css */ "./node_modules/next/dist/compiled/css-loader/cjs.js?!./node_modules/next/dist/compiled/postcss-loader/cjs.js?!./styles/app.css");

            content = content.__esModule ? content.default : content;

            if (typeof content === 'string') {
              content = [[module.i, content, '']];
            }

var options = {};

options.insert = function(element){// These elements should always exist. If they do not,
// this code should fail.
var anchorElement=document.querySelector('#__next_css__DO_NOT_USE__');var parentNode=anchorElement.parentNode;// Normally <head>
// Each style tag should be placed right before our
// anchor. By inserting before and not after, we do not
// need to track the last inserted element.
parentNode.insertBefore(element,anchorElement);};
options.singleton = false;

var update = api(content, options);


if (true) {
  if (!content.locals || module.hot.invalidate) {
    var isEqualLocals = function isEqualLocals(a,b,isNamedExport){if(!a&&b||a&&!b){return false;}let p;for(p in a){if(isNamedExport&&p==='default'){// eslint-disable-next-line no-continue
continue;}if(a[p]!==b[p]){return false;}}for(p in b){if(isNamedExport&&p==='default'){// eslint-disable-next-line no-continue
continue;}if(!a[p]){return false;}}return true;};
    var oldLocals = content.locals;

    module.hot.accept(
      /*! !../node_modules/next/dist/compiled/css-loader/cjs.js??ref--5-oneOf-6-1!../node_modules/next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-6-2!./app.css */ "./node_modules/next/dist/compiled/css-loader/cjs.js?!./node_modules/next/dist/compiled/postcss-loader/cjs.js?!./styles/app.css",
      function () {
        content = __webpack_require__(/*! !../node_modules/next/dist/compiled/css-loader/cjs.js??ref--5-oneOf-6-1!../node_modules/next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-6-2!./app.css */ "./node_modules/next/dist/compiled/css-loader/cjs.js?!./node_modules/next/dist/compiled/postcss-loader/cjs.js?!./styles/app.css");

              content = content.__esModule ? content.default : content;

              if (typeof content === 'string') {
                content = [[module.i, content, '']];
              }

              if (!isEqualLocals(oldLocals, content.locals)) {
                module.hot.invalidate();

                return;
              }

              oldLocals = content.locals;

              update(content);
      }
    )
  }

  module.hot.dispose(function() {
    update();
  });
}

module.exports = content.locals || {};

/***/ }),

/***/ "./styles/footer.css":
/*!***************************!*\
  !*** ./styles/footer.css ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var api = __webpack_require__(/*! ../node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js */ "./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js");
            var content = __webpack_require__(/*! !../node_modules/next/dist/compiled/css-loader/cjs.js??ref--5-oneOf-6-1!../node_modules/next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-6-2!./footer.css */ "./node_modules/next/dist/compiled/css-loader/cjs.js?!./node_modules/next/dist/compiled/postcss-loader/cjs.js?!./styles/footer.css");

            content = content.__esModule ? content.default : content;

            if (typeof content === 'string') {
              content = [[module.i, content, '']];
            }

var options = {};

options.insert = function(element){// These elements should always exist. If they do not,
// this code should fail.
var anchorElement=document.querySelector('#__next_css__DO_NOT_USE__');var parentNode=anchorElement.parentNode;// Normally <head>
// Each style tag should be placed right before our
// anchor. By inserting before and not after, we do not
// need to track the last inserted element.
parentNode.insertBefore(element,anchorElement);};
options.singleton = false;

var update = api(content, options);


if (true) {
  if (!content.locals || module.hot.invalidate) {
    var isEqualLocals = function isEqualLocals(a,b,isNamedExport){if(!a&&b||a&&!b){return false;}let p;for(p in a){if(isNamedExport&&p==='default'){// eslint-disable-next-line no-continue
continue;}if(a[p]!==b[p]){return false;}}for(p in b){if(isNamedExport&&p==='default'){// eslint-disable-next-line no-continue
continue;}if(!a[p]){return false;}}return true;};
    var oldLocals = content.locals;

    module.hot.accept(
      /*! !../node_modules/next/dist/compiled/css-loader/cjs.js??ref--5-oneOf-6-1!../node_modules/next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-6-2!./footer.css */ "./node_modules/next/dist/compiled/css-loader/cjs.js?!./node_modules/next/dist/compiled/postcss-loader/cjs.js?!./styles/footer.css",
      function () {
        content = __webpack_require__(/*! !../node_modules/next/dist/compiled/css-loader/cjs.js??ref--5-oneOf-6-1!../node_modules/next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-6-2!./footer.css */ "./node_modules/next/dist/compiled/css-loader/cjs.js?!./node_modules/next/dist/compiled/postcss-loader/cjs.js?!./styles/footer.css");

              content = content.__esModule ? content.default : content;

              if (typeof content === 'string') {
                content = [[module.i, content, '']];
              }

              if (!isEqualLocals(oldLocals, content.locals)) {
                module.hot.invalidate();

                return;
              }

              oldLocals = content.locals;

              update(content);
      }
    )
  }

  module.hot.dispose(function() {
    update();
  });
}

module.exports = content.locals || {};

/***/ }),

/***/ "./styles/header.css":
/*!***************************!*\
  !*** ./styles/header.css ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var api = __webpack_require__(/*! ../node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js */ "./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js");
            var content = __webpack_require__(/*! !../node_modules/next/dist/compiled/css-loader/cjs.js??ref--5-oneOf-6-1!../node_modules/next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-6-2!./header.css */ "./node_modules/next/dist/compiled/css-loader/cjs.js?!./node_modules/next/dist/compiled/postcss-loader/cjs.js?!./styles/header.css");

            content = content.__esModule ? content.default : content;

            if (typeof content === 'string') {
              content = [[module.i, content, '']];
            }

var options = {};

options.insert = function(element){// These elements should always exist. If they do not,
// this code should fail.
var anchorElement=document.querySelector('#__next_css__DO_NOT_USE__');var parentNode=anchorElement.parentNode;// Normally <head>
// Each style tag should be placed right before our
// anchor. By inserting before and not after, we do not
// need to track the last inserted element.
parentNode.insertBefore(element,anchorElement);};
options.singleton = false;

var update = api(content, options);


if (true) {
  if (!content.locals || module.hot.invalidate) {
    var isEqualLocals = function isEqualLocals(a,b,isNamedExport){if(!a&&b||a&&!b){return false;}let p;for(p in a){if(isNamedExport&&p==='default'){// eslint-disable-next-line no-continue
continue;}if(a[p]!==b[p]){return false;}}for(p in b){if(isNamedExport&&p==='default'){// eslint-disable-next-line no-continue
continue;}if(!a[p]){return false;}}return true;};
    var oldLocals = content.locals;

    module.hot.accept(
      /*! !../node_modules/next/dist/compiled/css-loader/cjs.js??ref--5-oneOf-6-1!../node_modules/next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-6-2!./header.css */ "./node_modules/next/dist/compiled/css-loader/cjs.js?!./node_modules/next/dist/compiled/postcss-loader/cjs.js?!./styles/header.css",
      function () {
        content = __webpack_require__(/*! !../node_modules/next/dist/compiled/css-loader/cjs.js??ref--5-oneOf-6-1!../node_modules/next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-6-2!./header.css */ "./node_modules/next/dist/compiled/css-loader/cjs.js?!./node_modules/next/dist/compiled/postcss-loader/cjs.js?!./styles/header.css");

              content = content.__esModule ? content.default : content;

              if (typeof content === 'string') {
                content = [[module.i, content, '']];
              }

              if (!isEqualLocals(oldLocals, content.locals)) {
                module.hot.invalidate();

                return;
              }

              oldLocals = content.locals;

              update(content);
      }
    )
  }

  module.hot.dispose(function() {
    update();
  });
}

module.exports = content.locals || {};

/***/ }),

/***/ "./styles/main.css":
/*!*************************!*\
  !*** ./styles/main.css ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var api = __webpack_require__(/*! ../node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js */ "./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js");
            var content = __webpack_require__(/*! !../node_modules/next/dist/compiled/css-loader/cjs.js??ref--5-oneOf-6-1!../node_modules/next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-6-2!./main.css */ "./node_modules/next/dist/compiled/css-loader/cjs.js?!./node_modules/next/dist/compiled/postcss-loader/cjs.js?!./styles/main.css");

            content = content.__esModule ? content.default : content;

            if (typeof content === 'string') {
              content = [[module.i, content, '']];
            }

var options = {};

options.insert = function(element){// These elements should always exist. If they do not,
// this code should fail.
var anchorElement=document.querySelector('#__next_css__DO_NOT_USE__');var parentNode=anchorElement.parentNode;// Normally <head>
// Each style tag should be placed right before our
// anchor. By inserting before and not after, we do not
// need to track the last inserted element.
parentNode.insertBefore(element,anchorElement);};
options.singleton = false;

var update = api(content, options);


if (true) {
  if (!content.locals || module.hot.invalidate) {
    var isEqualLocals = function isEqualLocals(a,b,isNamedExport){if(!a&&b||a&&!b){return false;}let p;for(p in a){if(isNamedExport&&p==='default'){// eslint-disable-next-line no-continue
continue;}if(a[p]!==b[p]){return false;}}for(p in b){if(isNamedExport&&p==='default'){// eslint-disable-next-line no-continue
continue;}if(!a[p]){return false;}}return true;};
    var oldLocals = content.locals;

    module.hot.accept(
      /*! !../node_modules/next/dist/compiled/css-loader/cjs.js??ref--5-oneOf-6-1!../node_modules/next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-6-2!./main.css */ "./node_modules/next/dist/compiled/css-loader/cjs.js?!./node_modules/next/dist/compiled/postcss-loader/cjs.js?!./styles/main.css",
      function () {
        content = __webpack_require__(/*! !../node_modules/next/dist/compiled/css-loader/cjs.js??ref--5-oneOf-6-1!../node_modules/next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-6-2!./main.css */ "./node_modules/next/dist/compiled/css-loader/cjs.js?!./node_modules/next/dist/compiled/postcss-loader/cjs.js?!./styles/main.css");

              content = content.__esModule ? content.default : content;

              if (typeof content === 'string') {
                content = [[module.i, content, '']];
              }

              if (!isEqualLocals(oldLocals, content.locals)) {
                module.hot.invalidate();

                return;
              }

              oldLocals = content.locals;

              update(content);
      }
    )
  }

  module.hot.dispose(function() {
    update();
  });
}

module.exports = content.locals || {};

/***/ }),

/***/ 0:
/*!*******************************************************************************************************************************************!*\
  !*** multi next-client-pages-loader?page=%2F_app&absolutePagePath=private-next-pages%2F_app.js ./node_modules/next/dist/client/router.js ***!
  \*******************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! next-client-pages-loader?page=%2F_app&absolutePagePath=private-next-pages%2F_app.js! */"./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F_app&absolutePagePath=private-next-pages%2F_app.js!./");
module.exports = __webpack_require__(/*! C:\Users\yoshw\projects\nextjs\bcbh-prototype\big-rigs\node_modules\next\dist\client\router.js */"./node_modules/next/dist/client/router.js");


/***/ })

},[[0,"webpack"]]]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,